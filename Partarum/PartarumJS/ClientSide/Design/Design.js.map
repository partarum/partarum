{
  "version": 3,
  "sources": ["../../PartarumJS/ClientSide/Events/MediaBoxEvent.js", "../../PartarumJS/ClientSide/Design/Barrier/Picture/PictureMenu.js", "../../PartarumJS/ClientSide/Design/MediaBox.js", "../../PartarumJS/ClientSide/Design/MediaBox/MediaBoxPicture.js", "../../PartarumJS/ClientSide/Design/Design.js"],
  "sourcesContent": ["\r\nclass Enlarge {\r\n\r\n    constructor(mediaBoxID, boxID, ev, type){\r\n\r\n        this.mediaBox = document.getElementById(mediaBoxID);\r\n        this.boxID = boxID;\r\n        this.box = document.getElementById(boxID);\r\n        this.event = ev;\r\n        this.type = type;\r\n\r\n        let init = async () => {\r\n\r\n            let one, two, three, four, five = false;\r\n\r\n            switch(this.type) {\r\n\r\n                case \"mouseover\":\r\n                    one = await this.firstStep();\r\n                    two = (one === true) ? await this.secondStep() : false;\r\n                    three = (two === true) ? await this.thirdStep() : false;\r\n                    four = (three === true) ? await this.fourthStep() : false;\r\n                    five = (four === true) ? await this.fifthStep() : false;\r\n                    break;\r\n                case \"click\":\r\n                    two = await this.secondStep();\r\n                    three = (two === true) ? await this.thirdStep() : false;\r\n            }\r\n        }\r\n\r\n        init().then();\r\n    }\r\n\r\n    firstStep(){\r\n\r\n        return new Promise(resolve => {\r\n\r\n            let themeIds = Partarum.Cache.EventCache.getThemeIDs(\"MediaBoxPicture\", \"MediaBoxPicture_mouseover\");\r\n\r\n            for(let ar of themeIds){\r\n\r\n                let picture = document.getElementById(ar[1]);\r\n\r\n                picture.removeEventListener(\"mouseover\", Partarum.Cache.EventCache.getEvent(\"MediaBoxPicture\", \"MediaBoxPicture_mouseover\", ar[0]));\r\n            }\r\n\r\n            resolve(true);\r\n        });\r\n    }\r\n\r\n    //clearBox\r\n    secondStep(ev){\r\n\r\n        return new Promise(resolve => {\r\n\r\n\r\n            let start = ()=> {\r\n\r\n                return new Promise(resolve => {\r\n\r\n                    for (let pic of this.mediaBox.children) {\r\n\r\n                        (pic.id !== this.boxID) && (() => {\r\n                            pic.classList.add(\"news-box-zeroBox\");\r\n                        })();\r\n\r\n                        this.box.scrollIntoView({block: \"start\", behavior: \"smooth\"});\r\n                    }\r\n\r\n                    resolve();\r\n                });\r\n\r\n            }\r\n\r\n            start().then(()=>{\r\n\r\n                for(let pic of this.mediaBox.children){\r\n\r\n                    (pic.id !== this.boxID) && pic.classList.add(\"news-box-zero\");\r\n\r\n                    this.box.scrollIntoView({block: \"start\", behavior: \"smooth\"});\r\n                }\r\n\r\n                resolve(true);\r\n            });\r\n        });\r\n    }\r\n\r\n    setButtonBox(){\r\n\r\n        let buttonBoxId = \"ButtonBox_\" + this.box.id;\r\n\r\n        this.buttonBox = document.getElementById(buttonBoxId);\r\n\r\n        if(!this.buttonBox) {\r\n            let newBox = new Partarum();\r\n\r\n            newBox.themes = [\r\n                {\r\n                    buttonBox: {\r\n                        config: {\r\n                            footer: {\r\n                                _attributes: {\r\n                                    class: \"box-row box-center-center\",\r\n                                    style: \"margin:auto; font-size: 3em; color: darkred;\",\r\n                                    id: \"ButtonBox_\" + this.box.id,\r\n                                },\r\n                                i: {\r\n                                    _attributes: {\r\n                                        class: \"fa-duotone fa-circle-xmark\",\r\n                                        id: \"ButtonBox_\" + this.box.id + \"_close\",\r\n                                        addEvent: {\r\n                                            type: \"click\",\r\n                                            topic: \"MediaBoxPicture\",\r\n                                            theme: \"MediaBoxPicture_ButtonBox_click\",\r\n                                            name: \"MediaBoxPicture_ButtonBox_\" + this.box.id + \"_click\",\r\n                                            targetID: \"MediaBoxPicture_ButtonBox_\" + this.box.id,\r\n                                            doThat: () => {\r\n                                                let box = document.getElementById(\"ButtonBox_\" + this.box.id);\r\n\r\n                                                box.classList.remove(\"box-row\");\r\n                                                box.classList.add(\"zero\");\r\n\r\n                                                this.box.classList.remove(\"news-box-open\");\r\n\r\n                                                for (let pic of this.mediaBox.children) {\r\n\r\n                                                    pic.classList.remove(\"news-box-zero\");\r\n                                                    pic.classList.remove(\"news-box-zeroBox\");\r\n                                                    pic.classList.remove(\"news-box-open\");\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        },\r\n                        parent: this.box\r\n                    }\r\n                }\r\n            ];\r\n\r\n            newBox.create().then();\r\n        }\r\n    }\r\n\r\n    // make Box bigger\r\n    thirdStep(){\r\n\r\n        return new Promise(resolve => {\r\n\r\n            localStorage.setItem(\"boxFocus\", \"1\");\r\n\r\n            this.box.classList.remove(\"news-box-zero\");\r\n            this.box.classList.remove(\"news-box-zeroBox\");\r\n            this.box.classList.add(\"news-box-open\");\r\n\r\n            this.box.style.position = \"relative\";\r\n\r\n            this.box.scrollIntoView();\r\n\r\n            //this.setButtonBox();\r\n\r\n            resolve(true);\r\n        });\r\n    }\r\n\r\n    // set mouseout\r\n    fourthStep(){\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            let eventName = this.box.id + \"_mouseout\";\r\n\r\n            Partarum.Cache.EventCache.create(\"MediaBoxPicture\", \"MediaBoxPicture_mouseout\");\r\n\r\n            Partarum.Cache.EventCache.setEvent({\r\n                topic: \"MediaBoxPicture\",\r\n                theme: \"MediaBoxPicture_mouseout\",\r\n                name: eventName,\r\n                targetID: this.box.id,\r\n                bubbles: true,\r\n                doThat: (ev)=>{\r\n\r\n                    console.log(\"mouseout - soll: \" + this.box.id + \" - ist: \" + ev.target.id);\r\n\r\n                    if(ev.target.parentElement.id === \"mediaBox\") {\r\n\r\n                        this.mediaBox.style.flexDirection = \"row\";\r\n\r\n                        this.box.classList.remove(\"news-box-open\");\r\n\r\n\r\n                        this.whileCounter ??= 0;\r\n\r\n                        this.whileCounter++;\r\n\r\n                        console.dir(this.whileCounter);\r\n\r\n                        if (this.buttonBox) {\r\n                            this.buttonBox.remove(\"box-row\");\r\n                            this.buttonBox.classList.add(\"zero\");\r\n                        }\r\n\r\n                        for (let pic of this.mediaBox.children) {\r\n\r\n                            pic.classList.remove(\"news-box-zero\");\r\n                            pic.classList.remove(\"news-box-zeroBox\");\r\n                            pic.classList.remove(\"news-box-open\");\r\n                        }\r\n\r\n                        let themeIds = Partarum.Cache.EventCache.getThemeIDs(\"MediaBoxPicture\", \"MediaBoxPicture_mouseout\");\r\n\r\n                        for (let ar of themeIds) {\r\n\r\n                            this.box.removeEventListener(\"mouseout\", Partarum.Cache.EventCache.getEvent(\"MediaBoxPicture\", \"MediaBoxPicture_mouseout\", ar[0]), false);\r\n                        }\r\n\r\n                    } else {\r\n\r\n                    }\r\n                }\r\n            });\r\n\r\n\r\n\r\n            setTimeout(()=>{\r\n\r\n               // console.dir(this.buttonBox);\r\n\r\n                this.box.addEventListener(\"mouseout\", Partarum.Cache.EventCache.getEvent(\"MediaBoxPicture\", \"MediaBoxPicture_mouseout\", eventName), false);\r\n                resolve(true);\r\n                }, 500);\r\n\r\n        });\r\n    }\r\n\r\n    // set mouseover\r\n    fifthStep(){\r\n\r\n        return new Promise(resolve => {\r\n\r\n            setTimeout(()=> {\r\n                let themeIds = Partarum.Cache.EventCache.getThemeIDs(\"MediaBoxPicture\", \"MediaBoxPicture_mouseover\");\r\n\r\n                for (let ar of themeIds) {\r\n\r\n                    let picture = document.getElementById(ar[1]);\r\n\r\n                    picture.addEventListener(\"mouseover\", Partarum.Cache.EventCache.getEvent(\"MediaBoxPicture\", \"MediaBoxPicture_mouseover\", ar[0]), {once: true});\r\n                }\r\n\r\n                resolve(true);\r\n            }, 500);\r\n        });\r\n    }\r\n\r\n    clickOn(){\r\n\r\n    }\r\n\r\n    clickOff(){\r\n\r\n    }\r\n\r\n    mouseoverOn(){\r\n\r\n    }\r\n\r\n    mouseoverOff(){\r\n\r\n    }\r\n\r\n    mouseoutOn(){\r\n\r\n    }\r\n\r\n    mouseoutOff(){\r\n\r\n    }\r\n\r\n}\r\n\r\n/*\r\n        ab 1050px mousover und mouseout - Events +\r\n        unter 1050px click events\r\n */\r\n\r\n\r\nclass MediaBoxEvent {\r\n\r\n   static enlarge(ev, boxID, type){\r\n\r\n       console.dir(type);\r\n\r\n       let event = new Enlarge(\"mediaBox\", boxID, ev, type);\r\n\r\n    }\r\n}\r\n\r\nexport {MediaBoxEvent};", "class PictureMenu {\r\n\r\n    constructor(options) {\r\n\r\n        this.getBackground();\r\n\r\n    }\r\n\r\n    static create(options){\r\n\r\n        Partarum.hasBackground = false;\r\n\r\n        let box = new PictureMenu(options);\r\n\r\n        return box.menu();\r\n\r\n    }\r\n\r\n    menu(){\r\n\r\n        return {\r\n            nav: {\r\n                _attributes: {\r\n                    class: \"box-row picture-menu\"\r\n                },\r\n                button_shrink: this.shrink(),\r\n                button_enlarge: this.enlarge()\r\n            }\r\n        }\r\n    }\r\n\r\n    enlarge(){\r\n\r\n        return {\r\n            _attributes: {\r\n                text: \"Bild vergr\u00F6\u00DFern\"\r\n            },\r\n            i: {\r\n                _attributes: {\r\n                    class: \"fa-duotone fa-magnifying-glass-plus\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    shrink(){\r\n\r\n        return {\r\n            _attributes: {\r\n                text: \"Bild verkleinern\"\r\n            },\r\n            i: {\r\n                _attributes: {\r\n                    class: \"fa-duotone fa-magnifying-glass-minus\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    getBackground(){\r\n\r\n        /*\r\n            background-color || background-image\r\n\r\n            html -> body -> main\r\n\r\n            types :\r\n\r\n               background-color: rgb(0, 0, 0) || rgba(0, 0, 0, 0)\r\n\r\n               background-image: linear-gradient(rgba(0,0,0,0), rgb(242, 242, 242), rgb(211, 211, 211))  || linear-gradient(rgb(236, 239, 242), rgb(210, 159, 136), rgb(211, 211, 211))\r\n\r\n               background-image: linear-gradient(rgb(236, 239, 242), rgb(210, 159, 136), rgb(242, 5, 5), rgb(211, 211, 211))\r\n\r\n            next Step:\r\n\r\n                strings filtern:\r\n\r\n                        background-color: gibt es eine Zahl gr\u00F6\u00DFer 0 ?\r\n\r\n                        background-image:\r\n\r\n            wie definiert sich rgb:\r\n\r\n                Rot, Gr\u00FCn, Blau\r\n\r\n                0, 0, 0 ist Schwarz\r\n                255, 255, 255 ist Wei\u00DF\r\n\r\n                255, 0, 0 ist Rot\r\n                0, 255, 0 ist Gr\u00FCn\r\n                0, 0, 255 ist Blau\r\n\r\n                bin\u00E4r:\r\n\r\n                1111 1111, 0000 0000, 0000 0000\r\n                0000 0000, 1111 1111, 0000 0000\r\n                0000 0000, 0000 0000, 1111 1111\r\n\r\n                hex:\r\n\r\n                0x00FF, 0x0000, 0x0000\r\n                0x0000, 0x00FF, 0x0000\r\n                0x0000, 0x0000, 0x00FF\r\n\r\n                Die Mitte von 255 = 127,5 = rgb(127, 127, 127) === grau !!!\r\n\r\n                255 >> 127 >> 63 >> 31 >> 15 >> 7 >> 3 >> 1 >> 0\r\n\r\n                1111 1111 >> 0111 1111 >> 0011 1111 >> 0001 1111 >> 0000 1111 >> 0000 0111 >> 0000 0011 >> 0000 0001 >> 0000 0000\r\n\r\n                0x00FF >> 0x007F >> 0x003F >> 0x001F >> 0x000F >> 0x0007 >> 0x0003 >> 0x0001 >> 0x0000\r\n\r\n\r\n                background-image: linear-gradient(181deg, rgb(0,0,0), rgba(127, 0, 0), rgb(255, 0, 0)); von Schwarz zu Rot\r\n}\r\n\r\n         */\r\n\r\n        const BACKGROUND_TYPES = [\r\n            \"background-color\",\r\n            \"background-image\"\r\n        ];\r\n\r\n        if(Partarum.hasBackground === false) {\r\n\r\n            let body = window.getComputedStyle(document.body);\r\n\r\n            let main = window.getComputedStyle(document.getElementsByTagName(\"main\")[0]);\r\n\r\n            for (let type of BACKGROUND_TYPES) {\r\n\r\n                console.log(\"body - \" + type + \": \" + body.getPropertyValue(type));\r\n\r\n                console.log(\"main - \" + type + \": \" + main.getPropertyValue(type));\r\n            }\r\n\r\n            Partarum.hasBackground = true;\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nexport {PictureMenu};", "import {MediaBoxEvent} from \"../Events/MediaBoxEvent.js\";\r\nimport {PictureMenu} from \"./Barrier/Picture/PictureMenu.js\";\r\n\r\nclass MediaBox {\r\n\r\n    constructor(config) {\r\n\r\n        console.dir(config);\r\n\r\n        this.boxConfig = config.boxConfig || null;\r\n\r\n        if(this.boxConfig.template.PartarumTemplate) {\r\n\r\n            // config.boxValues sind TemplateValues !!!!\r\n\r\n            let template = this.boxConfig.template.PartarumTemplate;\r\n\r\n            this.id = template.id;\r\n\r\n            this.templateClass = template.templateName;\r\n\r\n            this.cc = this.templateClass.configCache[this.id];\r\n\r\n            this.PartarumTemplate = true;\r\n        }\r\n\r\n        this.boxValues = config.boxValues;\r\n\r\n        this.Event = new MediaBoxEvent();\r\n\r\n        this.filterObject();\r\n    }\r\n\r\n    filterObject(){\r\n\r\n        if(this.boxConfig) {\r\n\r\n            this.templateName = (this.PartarumTemplate) ? this.templateClass.name : this.boxConfig.templateName;\r\n\r\n            this.boxEvents = this.boxConfig.events || null;\r\n\r\n            this.barrier = this.boxConfig.barrier || false;\r\n        }\r\n\r\n    }\r\n\r\n    mainTemplate(){\r\n\r\n        return {\r\n            _attributes: {\r\n                class: \"main-article media-box media-box-medium\",\r\n                id: \"mediaBox\"\r\n            }\r\n        }\r\n    }\r\n\r\n    createValueUser(){\r\n\r\n    }\r\n\r\n    createValueTemplate(){\r\n\r\n    }\r\n\r\n    createValue(){\r\n\r\n\r\n        // nach ValueType unterscheiden !!!\r\n\r\n        if(this.PartarumTemplate){\r\n\r\n            this.createValueTemplate();\r\n\r\n        } else {\r\n\r\n            this.createValueUser();\r\n        }\r\n\r\n\r\n        this.surfaceValue = this.mainTemplate();\r\n\r\n        let counter = 1;\r\n\r\n        if(this.boxValues) {\r\n\r\n            for (let box of Object.keys(this.boxValues)) {\r\n\r\n                let sectionID = \"mediaBox_box_\" + counter;\r\n\r\n                let sectionTagName = \"section_\" + counter;\r\n\r\n                if (this.PartarumTemplate) {\r\n\r\n                    Reflect.set(this.cc, sectionID, this.templateClass.create(this.cc.config));\r\n\r\n                    let partarumIntern = this.cc[sectionID].PartarumIntern;\r\n\r\n                    if (this.templateName === \"MediaBoxPicture\") {\r\n\r\n                        let pictureID = \"mediaBox_picture_\" + counter;\r\n\r\n                        Reflect.defineProperty(this.boxValues[box].$picture, \"id\", {value: pictureID});\r\n\r\n                        if (partarumIntern.events) {\r\n\r\n                            this.cc[sectionID].figure.img._attributes.addEvent = [];\r\n\r\n                            for (let eventName in partarumIntern.events) {\r\n\r\n                                let eventObject = {\r\n                                    topic: \"MediaBoxPicture\",\r\n                                    targetID: pictureID\r\n                                };\r\n\r\n                                switch (eventName) {\r\n\r\n                                    case \"enlarge\":\r\n\r\n                                        let eventType = (partarumIntern.events[eventName] === \"barrier\") ? \"click\" : \"mouseover\";\r\n\r\n                                        eventObject.type = eventType;\r\n                                        eventObject.theme = \"MediaBoxPicture_\" + eventType;\r\n                                        eventObject.name = pictureID + \"_\" + eventType;\r\n                                        eventObject.doThat = (ev) => {\r\n                                            MediaBoxEvent.enlarge(ev, sectionID, eventType);\r\n                                        }\r\n                                }\r\n\r\n                                console.dir(eventObject);\r\n\r\n                                this.cc[sectionID].figure.img._attributes.addEvent.push(eventObject);\r\n                            }\r\n                        }\r\n\r\n\r\n                        Reflect.deleteProperty(this.cc[sectionID], \"PartarumIntern\");\r\n                    }\r\n\r\n                    let val = {\r\n                        _attributes: {\r\n                            class: (this.barrier === true) ? \"picture-box-barrier\" : \"picture-box\", // picture-box-barrier\r\n                            id: sectionID\r\n                        }\r\n                    };\r\n\r\n                    if(this.barrier === true){\r\n\r\n                        let pictureMenu = PictureMenu.create();\r\n\r\n                        Reflect.set(val, \"nav\", pictureMenu.nav);\r\n                    }\r\n\r\n                    let importObject = {\r\n                        template: {\r\n                            name: sectionID,\r\n                            surface: this.cc[sectionID],\r\n                            valueFile: this.boxValues[box]\r\n                        }\r\n                    }\r\n\r\n                    Reflect.set(val, \"_import\", importObject);\r\n\r\n                    Reflect.set(this.surfaceValue, sectionTagName, val);\r\n\r\n                    counter++;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this.surfaceValue;\r\n    }\r\n\r\n    static create(config){\r\n\r\n        const mediaBox = new MediaBox(config);\r\n\r\n        return mediaBox.createValue();\r\n    }\r\n\r\n    static init(){\r\n        // zur Initialisierung bzgl des Caches!!! Wie in MediaBoxPicture!!!\r\n    }\r\n\r\n    static typePicture(){\r\n\r\n    }\r\n}\r\n\r\nexport {MediaBox};", "class MediaBoxPicture {\r\n\r\n    static STYLE_ORIGINAL = 2;\r\n\r\n    static STYLE_MOVIE = 4;\r\n\r\n    static HEADLINE_OVER_IMAGE = 8;\r\n\r\n    static HEADLINE_UNDER_IMAGE = 16;\r\n\r\n    static configCache = {};\r\n\r\n    static counter = 1;\r\n\r\n    constructor(config, barrier = false){\r\n\r\n        /*\r\n               figure: height: fit-content || 100%\r\n                    height: 100% = like quader box\r\n                    fit-content = original picture\r\n\r\n               aspect-ratio: 16/9 || unset\r\n                16:9 = with whitespace over and under the picture\r\n                unset\r\n         */\r\n\r\n        this.headline = config.headline || MediaBoxPicture.HEADLINE_UNDER_IMAGE; // under || over\r\n        this.picture = config.picture || MediaBoxPicture.STYLE_ORIGINAL; //  // original || movie\r\n        this.barrier = barrier;\r\n\r\n        this.events = config.events || null;\r\n\r\n        if(this.events) {\r\n            this.enlarge = this.events.enlarge || null;\r\n        }\r\n    }\r\n\r\n    headlineTemplate() {\r\n\r\n        return {\r\n            h2: {\r\n                $headline: {\r\n                    _type: \"text\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    imageTemplate(){\r\n\r\n        return {\r\n            img: {\r\n                $picture: {\r\n                    src: {\r\n                        _type: \"_attributes\",\r\n                        _value: {\r\n                            src: \"\"\r\n                        }\r\n                    },\r\n                    alt: {\r\n                        _type: \"_attributes\",\r\n                        _value: {\r\n                            alt: \"\"\r\n                        }\r\n                    },\r\n                    id: {\r\n                        _type: \"_attributes\",\r\n                        _value: {\r\n                            id: \"\"\r\n                        }\r\n                    }\r\n                },\r\n                _attributes: {}\r\n            }\r\n        }\r\n    }\r\n\r\n    figcaptionText(){\r\n        return {\r\n            p: {\r\n                $description: {\r\n                    _type: \"text\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    figcaptionTemplate(){\r\n\r\n        let figcaptionBody = {};\r\n\r\n        if(this.headline === MediaBoxPicture.HEADLINE_UNDER_IMAGE){\r\n            Reflect.set(figcaptionBody, \"h2\", this.headlineTemplate().h2);\r\n        }\r\n\r\n        Reflect.set(figcaptionBody, \"p\", this.figcaptionText().p);\r\n\r\n        return {\r\n            figcaption: figcaptionBody\r\n        }\r\n    }\r\n\r\n    figureBody(){\r\n        let body = {};\r\n\r\n        if(this.headline === MediaBoxPicture.HEADLINE_OVER_IMAGE){\r\n            Reflect.set(body, \"h2\", this.headlineTemplate().h2);\r\n        }\r\n\r\n        Reflect.set(body, \"img\", this.imageTemplate().img);\r\n        Reflect.set(body, \"figcaption\", this.figcaptionTemplate().figcaption);\r\n\r\n        return body;\r\n    }\r\n\r\n    template(){\r\n\r\n        let figure = {\r\n            figure: {\r\n                ...this.figureBody()\r\n            },\r\n            PartarumIntern: {\r\n                template: \"MediaBoxPicture\"\r\n            }\r\n        };\r\n\r\n        /*\r\n            enlarge - kann mouseover, oder click sein - Thema \"Barrierefreiheit\"\r\n         */\r\n\r\n        if(this.events) {\r\n\r\n            figure.PartarumIntern.events ??= {};\r\n\r\n            for(let event in this.events) {\r\n\r\n                Reflect.set(figure.PartarumIntern.events, event, this.events[event]);\r\n            }\r\n        }\r\n\r\n       return figure;\r\n    }\r\n\r\n    static create(config){\r\n        let picbox = new MediaBoxPicture(config);\r\n\r\n        return picbox.template();\r\n    }\r\n\r\n    static init(config){\r\n\r\n        let id = \"mediaBox_\" + MediaBoxPicture.counter;\r\n\r\n        Reflect.set(MediaBoxPicture.configCache, id, {\r\n            config: config\r\n        });\r\n\r\n        return {\r\n            PartarumTemplate: {\r\n                templateName: MediaBoxPicture,\r\n                id: id\r\n            }\r\n        };\r\n    }\r\n}\r\n\r\nexport {MediaBoxPicture};", "import {MediaBox} from \"./MediaBox.js\";\r\nimport {MediaBoxPicture} from \"./MediaBox/MediaBoxPicture.js\";\r\n\r\nclass Design {\r\n    static MediaBox(template){ return MediaBox.create(template);}\r\n\r\n    static MediaBoxPicture(config){ return MediaBoxPicture.init(config)};\r\n\r\n    static STYLE_ORIGINAL = 2;\r\n\r\n    static STYLE_MOVIE = 4;\r\n\r\n    static HEADLINE_OVER_IMAGE = 8;\r\n\r\n    static HEADLINE_UNDER_IMAGE = 16;\r\n}\r\n\r\nexport {Design};"],
  "mappings": ";;;;;;;;;AACA,MAAM,UAAN,MAAc;AAAA,IAEV,YAAY,YAAY,OAAO,IAAI,MAAK;AAEpC,WAAK,WAAW,SAAS,eAAe,UAAU;AAClD,WAAK,QAAQ;AACb,WAAK,MAAM,SAAS,eAAe,KAAK;AACxC,WAAK,QAAQ;AACb,WAAK,OAAO;AAEZ,UAAI,OAAO,YAAY;AAEnB,YAAI,KAAK,KAAK,OAAO,MAAM,OAAO;AAElC,gBAAO,KAAK,MAAM;AAAA,UAEd,KAAK;AACD,kBAAM,MAAM,KAAK,UAAU;AAC3B,kBAAO,QAAQ,OAAQ,MAAM,KAAK,WAAW,IAAI;AACjD,oBAAS,QAAQ,OAAQ,MAAM,KAAK,UAAU,IAAI;AAClD,mBAAQ,UAAU,OAAQ,MAAM,KAAK,WAAW,IAAI;AACpD,mBAAQ,SAAS,OAAQ,MAAM,KAAK,UAAU,IAAI;AAClD;AAAA,UACJ,KAAK;AACD,kBAAM,MAAM,KAAK,WAAW;AAC5B,oBAAS,QAAQ,OAAQ,MAAM,KAAK,UAAU,IAAI;AAAA,QAC1D;AAAA,MACJ;AAEA,WAAK,EAAE,KAAK;AAAA,IAChB;AAAA,IAEA,YAAW;AAEP,aAAO,IAAI,QAAQ,aAAW;AAE1B,YAAI,WAAW,SAAS,MAAM,WAAW,YAAY,mBAAmB,2BAA2B;AAEnG,iBAAQ,MAAM,UAAS;AAEnB,cAAI,UAAU,SAAS,eAAe,GAAG,EAAE;AAE3C,kBAAQ,oBAAoB,aAAa,SAAS,MAAM,WAAW,SAAS,mBAAmB,6BAA6B,GAAG,EAAE,CAAC;AAAA,QACtI;AAEA,gBAAQ,IAAI;AAAA,MAChB,CAAC;AAAA,IACL;AAAA,IAGA,WAAW,IAAG;AAEV,aAAO,IAAI,QAAQ,aAAW;AAG1B,YAAI,QAAQ,MAAK;AAEb,iBAAO,IAAI,QAAQ,CAAAA,aAAW;AAE1B,qBAAS,OAAO,KAAK,SAAS,UAAU;AAEpC,cAAC,IAAI,OAAO,KAAK,UAAW,MAAM;AAC9B,oBAAI,UAAU,IAAI,kBAAkB;AAAA,cACxC,GAAG;AAEH,mBAAK,IAAI,eAAe,EAAC,OAAO,SAAS,UAAU,SAAQ,CAAC;AAAA,YAChE;AAEA,YAAAA,SAAQ;AAAA,UACZ,CAAC;AAAA,QAEL;AAEA,cAAM,EAAE,KAAK,MAAI;AAEb,mBAAQ,OAAO,KAAK,SAAS,UAAS;AAElC,YAAC,IAAI,OAAO,KAAK,SAAU,IAAI,UAAU,IAAI,eAAe;AAE5D,iBAAK,IAAI,eAAe,EAAC,OAAO,SAAS,UAAU,SAAQ,CAAC;AAAA,UAChE;AAEA,kBAAQ,IAAI;AAAA,QAChB,CAAC;AAAA,MACL,CAAC;AAAA,IACL;AAAA,IAEA,eAAc;AAEV,UAAI,cAAc,eAAe,KAAK,IAAI;AAE1C,WAAK,YAAY,SAAS,eAAe,WAAW;AAEpD,UAAG,CAAC,KAAK,WAAW;AAChB,YAAI,SAAS,IAAI,SAAS;AAE1B,eAAO,SAAS;AAAA,UACZ;AAAA,YACI,WAAW;AAAA,cACP,QAAQ;AAAA,gBACJ,QAAQ;AAAA,kBACJ,aAAa;AAAA,oBACT,OAAO;AAAA,oBACP,OAAO;AAAA,oBACP,IAAI,eAAe,KAAK,IAAI;AAAA,kBAChC;AAAA,kBACA,GAAG;AAAA,oBACC,aAAa;AAAA,sBACT,OAAO;AAAA,sBACP,IAAI,eAAe,KAAK,IAAI,KAAK;AAAA,sBACjC,UAAU;AAAA,wBACN,MAAM;AAAA,wBACN,OAAO;AAAA,wBACP,OAAO;AAAA,wBACP,MAAM,+BAA+B,KAAK,IAAI,KAAK;AAAA,wBACnD,UAAU,+BAA+B,KAAK,IAAI;AAAA,wBAClD,QAAQ,MAAM;AACV,8BAAI,MAAM,SAAS,eAAe,eAAe,KAAK,IAAI,EAAE;AAE5D,8BAAI,UAAU,OAAO,SAAS;AAC9B,8BAAI,UAAU,IAAI,MAAM;AAExB,+BAAK,IAAI,UAAU,OAAO,eAAe;AAEzC,mCAAS,OAAO,KAAK,SAAS,UAAU;AAEpC,gCAAI,UAAU,OAAO,eAAe;AACpC,gCAAI,UAAU,OAAO,kBAAkB;AACvC,gCAAI,UAAU,OAAO,eAAe;AAAA,0BACxC;AAAA,wBACJ;AAAA,sBACJ;AAAA,oBACJ;AAAA,kBACJ;AAAA,gBACJ;AAAA,cACJ;AAAA,cACA,QAAQ,KAAK;AAAA,YACjB;AAAA,UACJ;AAAA,QACJ;AAEA,eAAO,OAAO,EAAE,KAAK;AAAA,MACzB;AAAA,IACJ;AAAA,IAGA,YAAW;AAEP,aAAO,IAAI,QAAQ,aAAW;AAE1B,qBAAa,QAAQ,YAAY,GAAG;AAEpC,aAAK,IAAI,UAAU,OAAO,eAAe;AACzC,aAAK,IAAI,UAAU,OAAO,kBAAkB;AAC5C,aAAK,IAAI,UAAU,IAAI,eAAe;AAEtC,aAAK,IAAI,MAAM,WAAW;AAE1B,aAAK,IAAI,eAAe;AAIxB,gBAAQ,IAAI;AAAA,MAChB,CAAC;AAAA,IACL;AAAA,IAGA,aAAY;AAER,aAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AAEpC,YAAI,YAAY,KAAK,IAAI,KAAK;AAE9B,iBAAS,MAAM,WAAW,OAAO,mBAAmB,0BAA0B;AAE9E,iBAAS,MAAM,WAAW,SAAS;AAAA,UAC/B,OAAO;AAAA,UACP,OAAO;AAAA,UACP,MAAM;AAAA,UACN,UAAU,KAAK,IAAI;AAAA,UACnB,SAAS;AAAA,UACT,QAAQ,CAAC,OAAK;AAEV,oBAAQ,IAAI,sBAAsB,KAAK,IAAI,KAAK,aAAa,GAAG,OAAO,EAAE;AAEzE,gBAAG,GAAG,OAAO,cAAc,OAAO,YAAY;AAE1C,mBAAK,SAAS,MAAM,gBAAgB;AAEpC,mBAAK,IAAI,UAAU,OAAO,eAAe;AAGzC,mBAAK,iBAAiB;AAEtB,mBAAK;AAEL,sBAAQ,IAAI,KAAK,YAAY;AAE7B,kBAAI,KAAK,WAAW;AAChB,qBAAK,UAAU,OAAO,SAAS;AAC/B,qBAAK,UAAU,UAAU,IAAI,MAAM;AAAA,cACvC;AAEA,uBAAS,OAAO,KAAK,SAAS,UAAU;AAEpC,oBAAI,UAAU,OAAO,eAAe;AACpC,oBAAI,UAAU,OAAO,kBAAkB;AACvC,oBAAI,UAAU,OAAO,eAAe;AAAA,cACxC;AAEA,kBAAI,WAAW,SAAS,MAAM,WAAW,YAAY,mBAAmB,0BAA0B;AAElG,uBAAS,MAAM,UAAU;AAErB,qBAAK,IAAI,oBAAoB,YAAY,SAAS,MAAM,WAAW,SAAS,mBAAmB,4BAA4B,GAAG,EAAE,GAAG,KAAK;AAAA,cAC5I;AAAA,YAEJ,OAAO;AAAA,YAEP;AAAA,UACJ;AAAA,QACJ,CAAC;AAID,mBAAW,MAAI;AAIX,eAAK,IAAI,iBAAiB,YAAY,SAAS,MAAM,WAAW,SAAS,mBAAmB,4BAA4B,SAAS,GAAG,KAAK;AACzI,kBAAQ,IAAI;AAAA,QACZ,GAAG,GAAG;AAAA,MAEd,CAAC;AAAA,IACL;AAAA,IAGA,YAAW;AAEP,aAAO,IAAI,QAAQ,aAAW;AAE1B,mBAAW,MAAK;AACZ,cAAI,WAAW,SAAS,MAAM,WAAW,YAAY,mBAAmB,2BAA2B;AAEnG,mBAAS,MAAM,UAAU;AAErB,gBAAI,UAAU,SAAS,eAAe,GAAG,EAAE;AAE3C,oBAAQ,iBAAiB,aAAa,SAAS,MAAM,WAAW,SAAS,mBAAmB,6BAA6B,GAAG,EAAE,GAAG,EAAC,MAAM,KAAI,CAAC;AAAA,UACjJ;AAEA,kBAAQ,IAAI;AAAA,QAChB,GAAG,GAAG;AAAA,MACV,CAAC;AAAA,IACL;AAAA,IAEA,UAAS;AAAA,IAET;AAAA,IAEA,WAAU;AAAA,IAEV;AAAA,IAEA,cAAa;AAAA,IAEb;AAAA,IAEA,eAAc;AAAA,IAEd;AAAA,IAEA,aAAY;AAAA,IAEZ;AAAA,IAEA,cAAa;AAAA,IAEb;AAAA,EAEJ;AAQA,MAAM,gBAAN,MAAoB;AAAA,IAEjB,OAAO,QAAQ,IAAI,OAAO,MAAK;AAE3B,cAAQ,IAAI,IAAI;AAEhB,UAAI,QAAQ,IAAI,QAAQ,YAAY,OAAO,IAAI,IAAI;AAAA,IAEtD;AAAA,EACJ;;;AC1SA,MAAM,cAAN,MAAkB;AAAA,IAEd,YAAY,SAAS;AAEjB,WAAK,cAAc;AAAA,IAEvB;AAAA,IAEA,OAAO,OAAO,SAAQ;AAElB,eAAS,gBAAgB;AAEzB,UAAI,MAAM,IAAI,YAAY,OAAO;AAEjC,aAAO,IAAI,KAAK;AAAA,IAEpB;AAAA,IAEA,OAAM;AAEF,aAAO;AAAA,QACH,KAAK;AAAA,UACD,aAAa;AAAA,YACT,OAAO;AAAA,UACX;AAAA,UACA,eAAe,KAAK,OAAO;AAAA,UAC3B,gBAAgB,KAAK,QAAQ;AAAA,QACjC;AAAA,MACJ;AAAA,IACJ;AAAA,IAEA,UAAS;AAEL,aAAO;AAAA,QACH,aAAa;AAAA,UACT,MAAM;AAAA,QACV;AAAA,QACA,GAAG;AAAA,UACC,aAAa;AAAA,YACT,OAAO;AAAA,UACX;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,IAEA,SAAQ;AAEJ,aAAO;AAAA,QACH,aAAa;AAAA,UACT,MAAM;AAAA,QACV;AAAA,QACA,GAAG;AAAA,UACC,aAAa;AAAA,YACT,OAAO;AAAA,UACX;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,IAEA,gBAAe;AA4DX,YAAM,mBAAmB;AAAA,QACrB;AAAA,QACA;AAAA,MACJ;AAEA,UAAG,SAAS,kBAAkB,OAAO;AAEjC,YAAI,OAAO,OAAO,iBAAiB,SAAS,IAAI;AAEhD,YAAI,OAAO,OAAO,iBAAiB,SAAS,qBAAqB,MAAM,EAAE,EAAE;AAE3E,iBAAS,QAAQ,kBAAkB;AAE/B,kBAAQ,IAAI,YAAY,OAAO,OAAO,KAAK,iBAAiB,IAAI,CAAC;AAEjE,kBAAQ,IAAI,YAAY,OAAO,OAAO,KAAK,iBAAiB,IAAI,CAAC;AAAA,QACrE;AAEA,iBAAS,gBAAgB;AAAA,MAC7B;AAAA,IAGJ;AAAA,EACJ;;;AC3IA,MAAM,WAAN,MAAe;AAAA,IAEX,YAAY,QAAQ;AAEhB,cAAQ,IAAI,MAAM;AAElB,WAAK,YAAY,OAAO,aAAa;AAErC,UAAG,KAAK,UAAU,SAAS,kBAAkB;AAIzC,YAAI,WAAW,KAAK,UAAU,SAAS;AAEvC,aAAK,KAAK,SAAS;AAEnB,aAAK,gBAAgB,SAAS;AAE9B,aAAK,KAAK,KAAK,cAAc,YAAY,KAAK;AAE9C,aAAK,mBAAmB;AAAA,MAC5B;AAEA,WAAK,YAAY,OAAO;AAExB,WAAK,QAAQ,IAAI,cAAc;AAE/B,WAAK,aAAa;AAAA,IACtB;AAAA,IAEA,eAAc;AAEV,UAAG,KAAK,WAAW;AAEf,aAAK,eAAgB,KAAK,mBAAoB,KAAK,cAAc,OAAO,KAAK,UAAU;AAEvF,aAAK,YAAY,KAAK,UAAU,UAAU;AAE1C,aAAK,UAAU,KAAK,UAAU,WAAW;AAAA,MAC7C;AAAA,IAEJ;AAAA,IAEA,eAAc;AAEV,aAAO;AAAA,QACH,aAAa;AAAA,UACT,OAAO;AAAA,UACP,IAAI;AAAA,QACR;AAAA,MACJ;AAAA,IACJ;AAAA,IAEA,kBAAiB;AAAA,IAEjB;AAAA,IAEA,sBAAqB;AAAA,IAErB;AAAA,IAEA,cAAa;AAKT,UAAG,KAAK,kBAAiB;AAErB,aAAK,oBAAoB;AAAA,MAE7B,OAAO;AAEH,aAAK,gBAAgB;AAAA,MACzB;AAGA,WAAK,eAAe,KAAK,aAAa;AAEtC,UAAI,UAAU;AAEd,UAAG,KAAK,WAAW;AAEf,iBAAS,OAAO,OAAO,KAAK,KAAK,SAAS,GAAG;AAEzC,cAAI,YAAY,kBAAkB;AAElC,cAAI,iBAAiB,aAAa;AAElC,cAAI,KAAK,kBAAkB;AAEvB,oBAAQ,IAAI,KAAK,IAAI,WAAW,KAAK,cAAc,OAAO,KAAK,GAAG,MAAM,CAAC;AAEzE,gBAAI,iBAAiB,KAAK,GAAG,WAAW;AAExC,gBAAI,KAAK,iBAAiB,mBAAmB;AAEzC,kBAAI,YAAY,sBAAsB;AAEtC,sBAAQ,eAAe,KAAK,UAAU,KAAK,UAAU,MAAM,EAAC,OAAO,UAAS,CAAC;AAE7E,kBAAI,eAAe,QAAQ;AAEvB,qBAAK,GAAG,WAAW,OAAO,IAAI,YAAY,WAAW,CAAC;AAEtD,yBAAS,aAAa,eAAe,QAAQ;AAEzC,sBAAI,cAAc;AAAA,oBACd,OAAO;AAAA,oBACP,UAAU;AAAA,kBACd;AAEA,0BAAQ,WAAW;AAAA,oBAEf,KAAK;AAED,0BAAI,YAAa,eAAe,OAAO,eAAe,YAAa,UAAU;AAE7E,kCAAY,OAAO;AACnB,kCAAY,QAAQ,qBAAqB;AACzC,kCAAY,OAAO,YAAY,MAAM;AACrC,kCAAY,SAAS,CAAC,OAAO;AACzB,sCAAc,QAAQ,IAAI,WAAW,SAAS;AAAA,sBAClD;AAAA,kBACR;AAEA,0BAAQ,IAAI,WAAW;AAEvB,uBAAK,GAAG,WAAW,OAAO,IAAI,YAAY,SAAS,KAAK,WAAW;AAAA,gBACvE;AAAA,cACJ;AAGA,sBAAQ,eAAe,KAAK,GAAG,YAAY,gBAAgB;AAAA,YAC/D;AAEA,gBAAI,MAAM;AAAA,cACN,aAAa;AAAA,gBACT,OAAQ,KAAK,YAAY,OAAQ,wBAAwB;AAAA,gBACzD,IAAI;AAAA,cACR;AAAA,YACJ;AAEA,gBAAG,KAAK,YAAY,MAAK;AAErB,kBAAI,cAAc,YAAY,OAAO;AAErC,sBAAQ,IAAI,KAAK,OAAO,YAAY,GAAG;AAAA,YAC3C;AAEA,gBAAI,eAAe;AAAA,cACf,UAAU;AAAA,gBACN,MAAM;AAAA,gBACN,SAAS,KAAK,GAAG;AAAA,gBACjB,WAAW,KAAK,UAAU;AAAA,cAC9B;AAAA,YACJ;AAEA,oBAAQ,IAAI,KAAK,WAAW,YAAY;AAExC,oBAAQ,IAAI,KAAK,cAAc,gBAAgB,GAAG;AAElD;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAEA,aAAO,KAAK;AAAA,IAChB;AAAA,IAEA,OAAO,OAAO,QAAO;AAEjB,YAAM,WAAW,IAAI,SAAS,MAAM;AAEpC,aAAO,SAAS,YAAY;AAAA,IAChC;AAAA,IAEA,OAAO,OAAM;AAAA,IAEb;AAAA,IAEA,OAAO,cAAa;AAAA,IAEpB;AAAA,EACJ;;;AC1LA,MAAM,mBAAN,MAAsB;AAAA,IAclB,YAAY,QAAQ,UAAU,OAAM;AAYhC,WAAK,WAAW,OAAO,YAAY,iBAAgB;AACnD,WAAK,UAAU,OAAO,WAAW,iBAAgB;AACjD,WAAK,UAAU;AAEf,WAAK,SAAS,OAAO,UAAU;AAE/B,UAAG,KAAK,QAAQ;AACZ,aAAK,UAAU,KAAK,OAAO,WAAW;AAAA,MAC1C;AAAA,IACJ;AAAA,IAEA,mBAAmB;AAEf,aAAO;AAAA,QACH,IAAI;AAAA,UACA,WAAW;AAAA,YACP,OAAO;AAAA,UACX;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,IAEA,gBAAe;AAEX,aAAO;AAAA,QACH,KAAK;AAAA,UACD,UAAU;AAAA,YACN,KAAK;AAAA,cACD,OAAO;AAAA,cACP,QAAQ;AAAA,gBACJ,KAAK;AAAA,cACT;AAAA,YACJ;AAAA,YACA,KAAK;AAAA,cACD,OAAO;AAAA,cACP,QAAQ;AAAA,gBACJ,KAAK;AAAA,cACT;AAAA,YACJ;AAAA,YACA,IAAI;AAAA,cACA,OAAO;AAAA,cACP,QAAQ;AAAA,gBACJ,IAAI;AAAA,cACR;AAAA,YACJ;AAAA,UACJ;AAAA,UACA,aAAa,CAAC;AAAA,QAClB;AAAA,MACJ;AAAA,IACJ;AAAA,IAEA,iBAAgB;AACZ,aAAO;AAAA,QACH,GAAG;AAAA,UACC,cAAc;AAAA,YACV,OAAO;AAAA,UACX;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,IAEA,qBAAoB;AAEhB,UAAI,iBAAiB,CAAC;AAEtB,UAAG,KAAK,aAAa,iBAAgB,sBAAqB;AACtD,gBAAQ,IAAI,gBAAgB,MAAM,KAAK,iBAAiB,EAAE,EAAE;AAAA,MAChE;AAEA,cAAQ,IAAI,gBAAgB,KAAK,KAAK,eAAe,EAAE,CAAC;AAExD,aAAO;AAAA,QACH,YAAY;AAAA,MAChB;AAAA,IACJ;AAAA,IAEA,aAAY;AACR,UAAI,OAAO,CAAC;AAEZ,UAAG,KAAK,aAAa,iBAAgB,qBAAoB;AACrD,gBAAQ,IAAI,MAAM,MAAM,KAAK,iBAAiB,EAAE,EAAE;AAAA,MACtD;AAEA,cAAQ,IAAI,MAAM,OAAO,KAAK,cAAc,EAAE,GAAG;AACjD,cAAQ,IAAI,MAAM,cAAc,KAAK,mBAAmB,EAAE,UAAU;AAEpE,aAAO;AAAA,IACX;AAAA,IAEA,WAAU;AAEN,UAAI,SAAS;AAAA,QACT,QAAQ;AAAA,UACJ,GAAG,KAAK,WAAW;AAAA,QACvB;AAAA,QACA,gBAAgB;AAAA,UACZ,UAAU;AAAA,QACd;AAAA,MACJ;AAMA,UAAG,KAAK,QAAQ;AAEZ,eAAO,eAAe,WAAW,CAAC;AAElC,iBAAQ,SAAS,KAAK,QAAQ;AAE1B,kBAAQ,IAAI,OAAO,eAAe,QAAQ,OAAO,KAAK,OAAO,MAAM;AAAA,QACvE;AAAA,MACJ;AAED,aAAO;AAAA,IACV;AAAA,IAEA,OAAO,OAAO,QAAO;AACjB,UAAI,SAAS,IAAI,iBAAgB,MAAM;AAEvC,aAAO,OAAO,SAAS;AAAA,IAC3B;AAAA,IAEA,OAAO,KAAK,QAAO;AAEf,UAAI,KAAK,cAAc,iBAAgB;AAEvC,cAAQ,IAAI,iBAAgB,aAAa,IAAI;AAAA,QACzC;AAAA,MACJ,CAAC;AAED,aAAO;AAAA,QACH,kBAAkB;AAAA,UACd,cAAc;AAAA,UACd;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AApKA,MAAM,kBAAN;AAEI,gBAFE,iBAEK,kBAAiB;AAExB,gBAJE,iBAIK,eAAc;AAErB,gBANE,iBAMK,uBAAsB;AAE7B,gBARE,iBAQK,wBAAuB;AAE9B,gBAVE,iBAUK,eAAc,CAAC;AAEtB,gBAZE,iBAYK,WAAU;;;ACTrB,MAAM,SAAN,MAAa;AAAA,IACT,OAAO,SAAS,UAAS;AAAE,aAAO,SAAS,OAAO,QAAQ;AAAA,IAAE;AAAA,IAE5D,OAAO,gBAAgB,QAAO;AAAE,aAAO,gBAAgB,KAAK,MAAM;AAAA,IAAC;AAAA,EASvE;AAPI,gBALE,QAKK,kBAAiB;AAExB,gBAPE,QAOK,eAAc;AAErB,gBATE,QASK,uBAAsB;AAE7B,gBAXE,QAWK,wBAAuB;",
  "names": ["resolve"]
}
