{
  "version": 3,
  "sources": ["../../PartarumJS/ClientSide/HTML/HTMLPartarumElement.js", "../../PartarumJS/ClientSide/HTML/HTMLPartarumHost.js", "../../PartarumJS/ClientSide/HTML/PartarumCardBox/HTMLCardBoxHeader.js", "../../PartarumJS/ClientSide/HTML/PartarumCardBox/HTMLCardBoxMenu.js", "../../PartarumJS/ClientSide/HTML/PartarumCardBox/HTMLCardThemeBox.js", "../../PartarumJS/ClientSide/HTML/PartarumCardBox/HTMLCardTopicBox.js", "../../PartarumJS/ClientSide/HTML/PartarumCardBox/HTMLCardTopicBody.js", "../../PartarumJS/ClientSide/HTML/PartarumCardBox/HTMLCardBoxObject.js", "../../PartarumJS/ClientSide/HTML/PartarumCardBox/HTMLCardBoxBody.js", "../../PartarumJS/ClientSide/Helper/Hex.js", "../../PartarumJS/ClientSide/Draw/DrawElementAnalyzer.js", "../../PartarumJS/ClientSide/Draw/Plot.js", "../../PartarumJS/ClientSide/HTML/PartarumCardBox/HTMLCardDrawBox.js", "../../PartarumJS/ClientSide/HTML/HTMLCardBox.js", "../../PartarumJS/ClientSide/HTML/PartarumNavBar/HTMLMenuHamburger.js", "../../PartarumJS/ClientSide/HTML/HTMLLayoutElementAnalyzer.js", "../../PartarumJS/ClientSide/HTML/PartarumNavBar/HTMLNavBarBody.js", "../../PartarumJS/ClientSide/HTML/HTMLNavBar.js", "../../PartarumJS/ClientSide/HTML/PartarumBottomBar/HTMLBottomBarBody.js", "../../PartarumJS/ClientSide/HTML/HTMLBottomBar.js", "../../PartarumJS/ClientSide/HTML/PartarumCookie/HTMLCookieBody.js", "../../PartarumJS/ClientSide/HTML/PartarumCookie/HTMLCookieHeader.js", "../../PartarumJS/ClientSide/HTML/PartarumCookie/HTMLCookieMain.js", "../../PartarumJS/ClientSide/HTML/PartarumCookie/HTMLCookieFooter.js", "../../PartarumJS/ClientSide/HTML/PartarumCookie/HTMLCookieBanner.js", "../../PartarumJS/ClientSide/HTML/HTMLCookie.js", "../../PartarumJS/ClientSide/HTML/HTMLRegistrationBox.js", "../../PartarumJS/ClientSide/HTML/HTML.js"],
  "sourcesContent": ["class HTMLPartarumElement extends HTMLElement {\r\n\r\n    root = {\r\n        dom: {},\r\n        app: new Partarum(),\r\n        constructed: false,\r\n        initialized: false,\r\n        initializedSuper: false,\r\n        connected: false,\r\n        connectedCallback: function(callback) {\r\n\r\n            if(this.initialized === false){\r\n\r\n                this.initialized = true;\r\n\r\n                callback();\r\n            }\r\n        }\r\n    };\r\n\r\n    constructor(config, name, dom, id) {\r\n\r\n        super();\r\n\r\n        this.root.constructed = true;\r\n\r\n        this.root.dom = dom;\r\n\r\n        this.root.config = config;\r\n\r\n        this.root.name = name;\r\n\r\n        this.root.id = (typeof id === \"string\") ? id.replace(\" \", \"_\") : \"\";\r\n    }\r\n\r\n    connectedCallback(){\r\n\r\n        if(this.root.initializedSuper === false){\r\n\r\n            this.id = this.root.id;\r\n\r\n            this.setConfig(this.root.config, this.root.name);\r\n\r\n            this.root.initializedSuper = true;\r\n        }\r\n    }\r\n\r\n    setConfig(config, needle, element = this){\r\n\r\n        if(config !== undefined) {\r\n\r\n            if (\"surface\" in config) {\r\n\r\n                if (Reflect.has(config.surface, needle)) {\r\n\r\n                    if (Reflect.has(config.surface[needle], \"style\")) {\r\n\r\n                        for (let style in config.surface[needle].style) {\r\n\r\n                            element.style[style] = config.surface[needle].style[style];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    initAddElement(name, element, parent = \"shadowBox\", config = this.root.config, place = \"append\"){\r\n\r\n        this.root.dom.add(name, element, null);\r\n\r\n        this.setConfig(config, name, element);\r\n\r\n        this.root.dom.add(parent, element, place);\r\n    }\r\n\r\n    add(element, topic){\r\n\r\n        this.root.dom.add(topic, element, \"append\");\r\n    }\r\n\r\n    addTopic(parent, topic, elementName){\r\n\r\n        let topicArray = (Array.isArray(topic)) ? topic : [topic];\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            let topicCounter = 0;\r\n\r\n            for(let topicName of topicArray){\r\n\r\n                this.root.dom.add(topicName, document.createElement(elementName));\r\n\r\n                this.root.dom.add(parent, this.root.dom.get(topicName), \"append\");\r\n\r\n                if(topicCounter === topicArray.length){\r\n\r\n                    resolve(true);\r\n                }\r\n\r\n                topicCounter ++;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n(customElements.get(\"partarum-element\") === undefined) && customElements.define(\"partarum-element\", HTMLPartarumElement);\r\n\r\nexport {HTMLPartarumElement};", "import {HTMLPartarumElement} from \"./HTMLPartarumElement.js\";\r\n\r\nclass HTMLPartarumHost extends HTMLPartarumElement{\r\n\r\n    constructor(config, name, id){\r\n        super(config, name, id);\r\n\r\n        this.#base();\r\n    }\r\n\r\n    static cache;\r\n\r\n    connectedCallback(){\r\n        super.connectedCallback();\r\n    }\r\n\r\n    #base() {\r\n\r\n        this.partarum = window.Partarum;\r\n\r\n        this.root.dom = this.partarum.Cache.HTMLCache.create(\"partarum-host\", this.root.name);\r\n\r\n        this.root.dom.add(\"shadowBox\", this.attachShadow({mode: \"open\"}), null);\r\n\r\n        let partarumCSS = document.createElement(\"link\");\r\n        partarumCSS.setAttribute(\"rel\", \"stylesheet\");\r\n        partarumCSS.setAttribute(\"type\", \"text/css\");\r\n        partarumCSS.setAttribute(\"href\", \"/Partarum/css\");\r\n\r\n        this.root.dom.add(\"shadowBox\", partarumCSS, \"append\");\r\n    }\r\n\r\n    loadStyle(config){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            let linkCounter = 0;\r\n\r\n            let linkStatus = false;\r\n\r\n            let styleCounter = 0;\r\n\r\n            let styleStatus = false;\r\n\r\n            if(Reflect.has(config, \"link\")){\r\n\r\n                let linkArray = Array.isArray(config.link) ? config.link : [config.link];\r\n\r\n                for(let link of linkArray) {\r\n\r\n                    let linkElement = document.createElement(\"link\");\r\n                    linkElement.setAttribute(\"rel\", \"stylesheet\");\r\n                    linkElement.setAttribute(\"type\", \"text/css\");\r\n                    linkElement.setAttribute(\"href\", link);\r\n\r\n                    this.root.dom.add(\"shadowBox\", linkElement.cloneNode(true), \"append\");\r\n\r\n                    linkCounter++;\r\n\r\n                    linkStatus = (linkCounter === linkArray.length);\r\n                }\r\n\r\n            } else {\r\n\r\n                linkStatus = true;\r\n            }\r\n\r\n            if(Reflect.has(config, \"style\")){\r\n\r\n                let styleList = (Array.isArray(config.style)) ? config.style : ((config.style instanceof NodeList) ? config.style : [config]);\r\n\r\n                for(let style of styleList) {\r\n\r\n                    this.root.dom.add(\"shadowBox\", style.cloneNode(true), \"append\")\r\n\r\n                    styleCounter++;\r\n\r\n                    styleStatus = (styleCounter === styleList.length);\r\n                }\r\n            } else {\r\n\r\n                styleStatus = true;\r\n            }\r\n\r\n            function checkStatus(){\r\n\r\n                if((styleStatus === true) && (linkStatus === true)) {\r\n                    resolve(true);\r\n                }\r\n            }\r\n\r\n            let inID = setInterval(checkStatus, 100);\r\n\r\n        });\r\n    }\r\n}\r\n\r\n(customElements.get(\"partarum-host\") === undefined) && customElements.define(\"partarum-host\", HTMLPartarumHost);\r\n\r\n\r\nexport {HTMLPartarumHost};", "import {HTMLPartarumElement} from \"../HTMLPartarumElement.js\";\r\n\r\nclass HTMLCardBoxHeader extends HTMLPartarumElement {\r\n\r\n    constructor(config, id = null){\r\n        super(config, \"header\");\r\n\r\n        this.id = id || \"\";\r\n\r\n        //this.className = \"box-row box-center\";\r\n    }\r\n\r\n    /*\r\n        ! Hier die jeweiligen Menus und Canvas erstellen\r\n     */\r\n\r\n    addTopic(topic) {\r\n\r\n        super.addTopic(topic, \"button\");\r\n    }\r\n\r\n    addMenu(){\r\n\r\n    }\r\n\r\n    addCanvas(){\r\n        \r\n    }\r\n}\r\n\r\n(customElements.get(\"partarum-card-box-header\") === undefined) && customElements.define(\"partarum-card-box-header\", HTMLCardBoxHeader);\r\n\r\nexport {HTMLCardBoxHeader};", "import {HTMLPartarumElement} from \"../HTMLPartarumElement.js\";\n\nclass HTMLCardBoxMenu extends HTMLPartarumElement {\n\n    constructor(config, id, dom){\n        super(config, \"menu\", dom, id);\n    }\n\n    connectedCallback(){\n\n        super.connectedCallback();\n    }\n\n\n    add(element, topic){\n\n        this.root.dom.add(topic, element, \"append\");\n    }\n\n    addTopic(topic, id, elementName = \"button\", cardBoxObject, position = \"start\") {\n\n        //console.dir(topic);\n\n        return new Promise((resolve) => {\n\n            let topicArray = (Array.isArray(topic)) ? topic : [topic];\n\n            let topicCounter = 0;\n\n            this.root.dom.get(\"Listener\").add(\"windowScroll\", ()=>{this.setClickEvent(this);});\n\n            window.addEventListener(\"scroll\", this.root.dom.get(\"Listener\").get(\"windowScroll\"), {once: true});\n\n            for(let topicName of topicArray){\n\n                let topicNode = document.createElement(elementName);\n\n                let buttonID = \"button_\" + id;\n\n                topicNode.setAttribute(\"id\", buttonID);\n\n                topicNode.classList.add(\"product-category-button\");\n\n                let idNew = \"productCategory_\" + id;\n\n                let loader = this.root.dom.get(\"Loader\");\n\n                loader.add(buttonID, idNew);\n\n                let h3 = document.createElement(\"h3\");\n\n                h3.appendChild(document.createTextNode(topicName));\n\n                topicNode.appendChild(h3);\n\n                this.appendChild(topicNode);\n\n                this.root.dom.add(buttonID, topicNode);\n\n                topicCounter++;\n            }\n\n            resolve(true);\n        });\n    }\n\n    setClickEvent(that){\n\n        console.dir(\"click\");\n\n        let loadStatus = that.root.dom.get(\"Loader\").get(\"Status\");\n\n        if(loadStatus === 0){\n\n            let loadCache = that.root.dom.getAllOfTheme(\"CardBox\", \"Loader\");\n\n            let loadObject = Object.fromEntries(loadCache.entries());\n\n            let loadCounter = 0;\n\n            //console.dir(loadObject);\n\n            for(let loadKey in loadObject){\n\n                if(loadKey !== \"Status\"){\n\n                    let groupBox = that.root.dom.get(loadObject[loadKey]);\n\n                    //console.dir(loadKey);\n                    //console.dir(groupBox);\n\n                    let data = groupBox.data;\n\n                    data.groupButton = loadKey;\n\n                    let buttonNode = that.root.dom.get(loadKey);\n\n                    buttonNode.addEventListener(\"click\",(ev) => {\n\n                        console.dir(\"clcik\");\n\n                        console.dir(ev);\n\n                        that.displayCategory(groupBox);\n\n                    });\n\n                    (loadCounter === 0) && buttonNode.click();\n\n                    loadCounter++;\n                }\n            }\n\n            that.root.dom.get(\"Loader\").add(\"Status\", 1);\n\n        } else {\n\n            console.dir(\"is loaded\");\n        }\n    }\n\n\n    displayCategory(catBox) {\n\n        // catBox ist das aktuelle Node, was vom Event mitgegeben wird\n\n        console.dir(catBox);\n\n        const topic = catBox.topic;\n\n        const data = catBox.data;\n\n        const catID  = topic.id;\n\n        let cacheBox = this.root.dom.get(\"DisplayCategories\").get(catID);\n\n        let displayMenu = this.root.dom.get(\"DisplayMenu\").get(catID);\n\n        let nodeObject;\n\n        let idArray = [];\n\n        if(cacheBox === null) {\n\n            idArray.push(catID);\n\n            let categories = this.root.dom.getAllOfTheme(\"CardBox\", \"Categories\");\n\n            nodeObject = Object.fromEntries(categories.entries());\n\n            let aktNode = nodeObject[catID];\n\n            let aktNodeData = aktNode.data;\n\n            let aktNodeType = aktNode.type;\n\n            switch (aktNodeType) {\n\n                case \"WithSubCategories\":\n\n                    idArray.push(aktNodeData.subCategories[0]);\n\n                    idArray.push(displayMenu.categoryMenu);\n\n                    idArray.push(displayMenu.categoryCanvas);\n\n                    break;\n                case \"SubCategories\":\n\n                    idArray.push(aktNodeData.category);\n\n                    displayMenu = this.root.dom.get(\"DisplayMenu\").get(aktNodeData.category);\n\n                    idArray.push(displayMenu.categoryMenu);\n\n                    idArray.push(displayMenu.categoryCanvas);\n            }\n\n            this.root.dom.get(\"DisplayCategories\").add(catID, [nodeObject, idArray]);\n\n        } else {\n\n            nodeObject = cacheBox[0];\n\n            idArray = cacheBox[1];\n        }\n\n        // ! canvas auf width testen !!\n\n        //console.dir(this.root.dom);\n\n        let cardDrawBox = this.root.dom.get(\"CardDrawBox\");\n\n        let canvas = this.root.dom.get(displayMenu?.categoryCanvas) ?? this.root.dom.get(\"canvas\");\n\n        let getList = this.root.dom.get(\"Listener\").get(\"windowResize\");\n\n        //console.dir(getList);\n\n        if(getList === null){\n\n            this.root.dom.get(\"Listener\").add(\"windowResize\", ()=>{\n\n                // ! \n\n                let width = this.root.dom.get(displayMenu?.categoryMenu)?.offsetWidth ?? this.root.dom.get(\"productGroupNav\").offsetWidth;\n\n                canvas.width = width.toString();\n\n                this.root.dom.get(\"canvas\").width = width;\n\n                //console.dir(this.root.dom.getAllOfTheme(\"CardBox\", \"DisplayCategories\"));\n\n                for(let upCat of this.root.dom.getAllOfTheme(\"CardBox\", \"DisplayCategories\").entries()){\n\n                    cardDrawBox.plotter.clearBoard(canvas.id, \"canvas\");\n\n                    cardDrawBox.plotter.update(\"setLine\", upCat[0]);\n                }\n\n\n            });\n\n            window.addEventListener(\"resize\", this.root.dom.get(\"Listener\").get(\"windowResize\"), false);\n        }\n\n        for(let groupObject in nodeObject){\n\n            let group = nodeObject[groupObject].topic;\n\n            if(idArray.includes(group.id) === false){\n\n                if(group.classList.length !== 0){\n\n                    if(group.classList.contains(\"grid\")){\n\n                        group.classList.replace(\"grid\", \"zero\");\n                    }\n                } else {\n\n                    group.classList.add(\"zero\");\n                }\n\n            } else {\n\n                if (group.classList.length !== 0) {\n\n                    if (group.classList.contains(\"zero\")) {\n\n                        group.classList.replace(\"zero\", \"grid\");\n                    }\n                }\n            }\n        }\n\n        canvas.classList.replace(\"zero\", \"inline\");\n\n        \n\n        if(displayMenu === null){\n\n            if(\"category\" in data){\n\n                let catCan = this.root.dom.get(\"DisplayMenu\").get(data.category);\n\n                cardDrawBox.plotter.clearBoard(catCan.categoryCanvas);\n\n            } else {\n\n                //console.dir(cardDrawBox);\n\n                cardDrawBox.plotter.clearBoard(\"canvas\");\n            }\n        } else {\n\n            if(\"subCategories\" in data){\n\n                cardDrawBox.plotter.clearBoard(canvas.id, \"canvas\");\n            } else {\n\n                cardDrawBox.plotter.clearBoard(canvas.id);\n            }\n        }\n\n        this.root.dom.get(\"LastDraw\").clear();\n\n        console.dir(cardDrawBox.plotter.isCollected(\"setLine\", catID));\n\n        if (cardDrawBox.plotter.isCollected(\"setLine\", catID)) {\n\n            /*\n            let styleObject = cardDrawBox.plotter.elementStyleCache[data.groupButton];\n\n\n            for (let attr in styleObject) {\n                groupButton.style[attr] = styleObject[attr];\n            }\n\n\n             */\n\n\n            if(canvas.width === 0){\n               \n                canvas.width = this.root.dom.get(displayMenu.categoryMenu).offsetWidth;\n            }\n\n            cardDrawBox.plotter.update(\"setLine\", catID);\n\n        } else {\n\n            let childBox = catBox.themes;\n\n            if(Object.keys(childBox).length !== 0){\n\n                this.root.dom.get(\"LastDraw\").add(catID, \"\");\n\n                for (let child in childBox) {\n\n                    //console.dir(child);\n\n                    // canvas as node, groupName, groupButton | startNode as Node, groupChild | goalNode as Node\n\n                    // TODO: zu setNodes umbauen\n\n                    cardDrawBox.setLines(canvas, catID, this.root.dom.get(data.groupButton), childBox[child].theme);\n                }\n\n            } else {\n\n                // Button to Button line !!!\n\n                this.root.dom.get(\"LastDraw\").add(catID);\n\n                for(let sub of data.subCategories){\n\n                    let subObject = this.root.dom.get(sub);\n\n                    // ! canvas stimmt noch nicht - muss in dem Fall das vom Elternelement sein - ist jetzt erstmal auf #canvas gesetzt\n\n                    // ! das Display muss noch zu den erlaubten gestzt werden, damit es bleibt, wenn zwischen den Subs geschalten wird !\n\n                    cardDrawBox.setLines(this.root.dom.get(\"canvas\"), catID, this.root.dom.get(data.groupButton), this.root.dom.get(subObject.data.groupButton));\n\n                }\n\n                let firstChild = this.root.dom.get(data.subCategories[0]);\n\n                this.root.dom.get(\"LastDraw\").add(data.subCategories[0]);\n\n                let subThemes = firstChild.themes;\n\n                for(let subThemeCard in subThemes){\n\n                    let themeNode = subThemes[subThemeCard].theme;\n\n                    let subCanvas = this.root.dom.get(displayMenu.categoryCanvas);\n\n                    cardDrawBox.setLines(subCanvas, data.subCategories[0], this.root.dom.get(firstChild.data.groupButton), themeNode);\n                }\n            }\n        }\n    }\n}\n\n(customElements.get(\"partarum-card-box-menu\") === undefined) && customElements.define(\"partarum-card-box-menu\", HTMLCardBoxMenu);\n\nexport {HTMLCardBoxMenu};", "import {HTMLPartarumElement} from \"../HTMLPartarumElement.js\";\r\n\r\nclass HTMLCardThemeBox extends HTMLPartarumElement {\r\n\r\n    constructor(config, dom, id, cardBoxObject){\r\n        super(config, \"section\", dom, id);\r\n\r\n        this.root.cardBoxObject = cardBoxObject;\r\n    }\r\n\r\n    connectedCallback(){\r\n\r\n        super.connectedCallback();\r\n\r\n        this.id = this.root.id;\r\n\r\n        this.root.title = this.root.cardBoxObject.title;\r\n\r\n        this.root.topicDOM = this.root.dom.get(this.root.cardBoxObject.parent);\r\n\r\n        this.root.themeDOM = Reflect.get(this.root.topicDOM.themes, this.root.cardBoxObject.id);\r\n\r\n        this.root.mainInfoObject = this.root.cardBoxObject.mainInfo ?? null;\r\n\r\n        this.root.featureObject = this.root.cardBoxObject.features ?? null;\r\n\r\n        this.loadElements().then();\r\n    }\r\n\r\n    async loadElements(){\r\n\r\n        await this.setSlogan();\r\n\r\n        if(this.root.mainInfoObject !== null) {\r\n\r\n            await this.setMainInfo();\r\n            await this.setLifetime(this.root.mainInfoObject.lifetime);\r\n            await this.setPrice(this.root.mainInfoObject.price);\r\n            await this.setLinkPage(this.root.mainInfoObject.link);\r\n        }\r\n\r\n        if(this.root.featureObject !== null){\r\n\r\n            await this.setFeatures(this.root.featureObject);\r\n        }\r\n\r\n    }\r\n\r\n    setSlogan(){\r\n\r\n        return new Promise((resolve)=>{\r\n\r\n            let sloganBox = document.createElement(\"header\");\r\n\r\n            let sloganText = document.createElement(\"h3\");\r\n\r\n            sloganText.appendChild(document.createTextNode(this.root.cardBoxObject.title));\r\n\r\n            sloganBox.appendChild(sloganText);\r\n\r\n            this.appendChild(sloganBox);\r\n\r\n            resolve();\r\n        });\r\n\r\n\r\n    }\r\n\r\n    setMainInfo(){\r\n\r\n        return new Promise((resolve)=>{\r\n\r\n            this.root.themeDOM.mainInfo = document.createElement(\"section\");\r\n            this.appendChild(this.root.themeDOM.mainInfo);\r\n\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    setLifetime(lifetimeText){\r\n\r\n        return new Promise((resolve)=>{\r\n\r\n            let lifetime = document.createElement(\"section\");\r\n            lifetime.classList.add(\"box-row\", \"box-center\");\r\n\r\n            let lifetimeArray = (Array.isArray(lifetimeText)) ? lifetimeText : [lifetimeText];\r\n\r\n            for(let key in lifetimeArray){\r\n\r\n                let p = document.createElement(\"p\");\r\n\r\n                let text = document.createTextNode(lifetimeArray[key]);\r\n\r\n                p.appendChild(text);\r\n\r\n                lifetime.appendChild(p);\r\n            }\r\n\r\n            this.root.themeDOM.mainInfo.appendChild(lifetime);\r\n\r\n            resolve();\r\n        })\r\n    }\r\n\r\n    setPrice(priceObject){\r\n\r\n        return new Promise((resolve)=>{\r\n\r\n            let price = document.createElement(\"section\");\r\n\r\n            price.classList.add(\"partarum-card-theme-price\");\r\n\r\n            let amount = document.createElement(\"p\");\r\n\r\n            amount.appendChild(document.createTextNode(priceObject.amount));\r\n\r\n            price.appendChild(amount);\r\n\r\n            let period = document.createElement(\"p\");\r\n\r\n            period.appendChild(document.createTextNode(priceObject.period));\r\n\r\n            price.appendChild(period);\r\n\r\n            this.root.themeDOM.mainInfo.appendChild(price);\r\n\r\n            resolve();\r\n        })\r\n    }\r\n\r\n    setLinkPage(linkObject){\r\n\r\n        return new Promise((resolve)=>{\r\n\r\n            let linkPage = document.createElement(\"section\");\r\n\r\n            let link = document.createElement(\"a\");\r\n\r\n            link.setAttribute(\"href\", linkObject.href);\r\n\r\n            link.classList.add(\"beauty-button-link\");\r\n\r\n            let textNode = document.createTextNode(linkObject.text ?? \"Jetzt Registrieren\");\r\n\r\n            link.appendChild(textNode);\r\n\r\n            if(\"icon\" in linkObject){\r\n\r\n                let icon = document.createElement(\"i\");\r\n\r\n                if(\"class\" in linkObject.icon){\r\n\r\n                    for(let classItem of linkObject.icon.class.split(\" \")){\r\n\r\n                        icon.classList.add(classItem);\r\n                    }\r\n                }\r\n\r\n                if(\"position\" in linkObject.icon){\r\n\r\n                    let position = \"before\";\r\n\r\n                    if(linkObject.icon.position === \"before\"){\r\n\r\n                        textNode.before(icon);\r\n\r\n                    } else {\r\n\r\n                        textNode.after(icon);\r\n                    }\r\n\r\n                    icon.classList.add((position === \"before\") ? \"icon-left\" : \"icon-right\");\r\n                }\r\n            }\r\n\r\n            linkPage.appendChild(link);\r\n\r\n            this.root.themeDOM.mainInfo.appendChild(linkPage);\r\n\r\n            resolve();\r\n        })\r\n    }\r\n\r\n    setFeatures(featuresObject){\r\n\r\n        return new Promise((resolve)=>{\r\n\r\n            let features = document.createElement(\"footer\");\r\n\r\n            features.classList.add(\"text-setLeft\", \"partarum-card-theme-features\");\r\n            \r\n            this.appendChild(features);\r\n\r\n            for(let feature in featuresObject){\r\n\r\n                let featureBox = document.createElement(\"section\");\r\n\r\n                featureBox.classList.add(\"partarum-card-theme-feature-box\");\r\n\r\n                features.appendChild(featureBox);\r\n\r\n                this.setList(featuresObject[feature], featureBox).then();\r\n            }\r\n\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    setList(feature, featureBox){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            let header = document.createElement(\"header\");\r\n\r\n            header.className = \"box-row center\";\r\n\r\n            let headerText = document.createTextNode(feature.title);\r\n\r\n            header.appendChild(headerText);\r\n\r\n            featureBox.appendChild(header);\r\n\r\n            if(\"icon\" in feature){\r\n\r\n                let icon = document.createElement(\"i\");\r\n                \r\n                icon.className = feature.icon.class;\r\n\r\n                if(\"position\" in feature.icon){\r\n\r\n                    this.setIcon(icon, headerText, feature.icon.position, feature.icon.class);\r\n                }\r\n            }\r\n\r\n            let section = document.createElement(\"section\");\r\n\r\n            featureBox.appendChild(section);\r\n\r\n            let lastElement = [];\r\n\r\n            let list = feature.list;\r\n\r\n            for(let key in list){\r\n\r\n                switch(key){\r\n\r\n                    case \"icon\":\r\n\r\n                        let icon = document.createElement(\"i\");\r\n\r\n                        this.setIcon(icon, lastElement.at(-1) ?? null, list.icon.position, list.icon.class);\r\n\r\n                        lastElement.push(icon);\r\n\r\n                        break;\r\n\r\n                    default:\r\n\r\n                        if(key.includes(\"text\")){\r\n\r\n                            lastElement.push(document.createElement(\"p\"));\r\n\r\n                            lastElement.at(-1).appendChild(document.createTextNode(list[key]));\r\n\r\n                            section.appendChild(lastElement.at(-1));\r\n                        }\r\n\r\n\r\n                }\r\n            }\r\n\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    setIcon(iconNode, textNode, position, className){\r\n\r\n        if(textNode !== null) {\r\n\r\n            iconNode.className = className ?? \"\";\r\n\r\n            switch(position){\r\n\r\n                case \"before\":\r\n\r\n                    textNode.before(iconNode);\r\n\r\n                    iconNode.classList.add(\"icon-left\");\r\n\r\n                    break;\r\n\r\n                case \"after\":\r\n\r\n                    textNode.after(iconNode);\r\n\r\n                    iconNode.classList.add(\"icon-right\");\r\n\r\n                    break;\r\n\r\n                case \"middle\":\r\n\r\n                    textNode.after(iconNode);\r\n\r\n                    iconNode.classList.add(\"icon-left\", \"icon-right\");\r\n\r\n                    break;\r\n\r\n                default:\r\n\r\n                    textNode.before(iconNode);\r\n\r\n                    iconNode.classList.add(\"icon-left\");\r\n\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n(customElements.get(\"partarum-card-theme-box\") === undefined) && customElements.define(\"partarum-card-theme-box\", HTMLCardThemeBox);\r\n\r\nexport {HTMLCardThemeBox};", "import {HTMLPartarumElement} from \"../HTMLPartarumElement.js\";\r\nimport {HTMLCardThemeBox} from \"./HTMLCardThemeBox.js\";\r\n\r\nclass HTMLCardTopicBox extends HTMLPartarumElement {\r\n\r\n    cardKey = 1;\r\n\r\n    constructor(config, dom, id, cardBoxObject){\r\n        super(config, \"section\", dom, id);\r\n\r\n        this.root.cardBoxObject = cardBoxObject;\r\n    }\r\n\r\n    connectedCallback(){\r\n\r\n        super.connectedCallback();\r\n\r\n        this.id = this.root.id;\r\n\r\n        let display = ((\"display\" in this.root.cardBoxObject) && (this.root.cardBoxObject.display === true)) ? \"grid\" : \"zero\";\r\n\r\n        this.classList.add(display, \"grid-auto-column\", \"product-cards-box-shadow\");\r\n\r\n        this.loadElements().then();\r\n    }\r\n\r\n    async loadElements(){\r\n\r\n        await this.setThemeBoxes();\r\n    }\r\n\r\n    setThemeBoxes(){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            for(let key in this.root.cardBoxObject){\r\n\r\n                switch(key){\r\n\r\n                    case \"cards\":\r\n\r\n                        for(let cardKey in this.root.cardBoxObject.cards){\r\n\r\n                            this.root.dom.get(\"Categories\").add(this.id, this.root.dom.get(this.id));\r\n\r\n                            let card = this.root.cardBoxObject.cards[cardKey];\r\n\r\n                            this.addThemeBox(card, cardKey);\r\n\r\n                            this.cardKey++;\r\n                        }\r\n\r\n                        break;\r\n                    case \"card\":\r\n\r\n                        this.addThemeBox(this.root.cardBoxObject.card);\r\n\r\n                        this.cardKey++;\r\n\r\n                        break;\r\n                    case \"subTopic\":\r\n\r\n                        // ! Menubuttons und Canvas noch mit hinzuf\u00FCgen\r\n\r\n                        let withSubCategory = this.root.dom.get(this.id);\r\n\r\n                        withSubCategory.type = \"WithSubCategories\";\r\n\r\n                        withSubCategory.data = {\r\n                            subCategories: []\r\n                        };\r\n\r\n                        this.root.dom.get(\"Categories\").add(this.id, withSubCategory);\r\n\r\n                        let subBox = this.root.cardBoxObject.subTopic;\r\n\r\n                        let cbo = this.root.dom.get(\"CardBoxObject\");\r\n\r\n                        for(let [key, value] of cbo.subBoxes){\r\n\r\n                            for(let [subKey, subValue] of value.startMenu){\r\n\r\n                                let id = \"productCategory_\" + subKey;\r\n\r\n                                this.root.dom.add( id, {\r\n                                    themes: {},\r\n                                    topic: new HTMLCardTopicBox(this.root.config, this.root.dom, id, subBox[subValue]),\r\n                                    type: \"SubCategories\",\r\n                                    data: {\r\n                                        category: this.id\r\n                                    }\r\n                                });\r\n\r\n                                withSubCategory.data.subCategories.push(id);\r\n\r\n                                this.appendChild(this.root.dom.get(id).topic);\r\n                            }\r\n                        }\r\n                }\r\n            }\r\n\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    addThemeBox(card, cardKey = this.cardKey){\r\n\r\n        let cacheObject = this.root.dom.get(this.id).themes;\r\n\r\n        card.parent = this.id;\r\n\r\n        let title = card.title;\r\n\r\n        let id = \"productCard_\" + title.replace(\" \", \"_\") ?? cardKey + \"_of_\" + this.id;\r\n\r\n        card.id = id;\r\n\r\n        cacheObject[id] = {\r\n\r\n            theme: new HTMLCardThemeBox(this.root.config, this.root.dom, id, card)\r\n        };\r\n\r\n        this.appendChild(cacheObject[id].theme);\r\n    }\r\n\r\n    addCanvas(){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            resolve();\r\n        });\r\n    }\r\n}\r\n\r\n(customElements.get(\"partarum-card-topic-box\") === undefined) && customElements.define(\"partarum-card-topic-box\", HTMLCardTopicBox);\r\n\r\nexport {HTMLCardTopicBox};", "import {HTMLPartarumElement} from \"../HTMLPartarumElement.js\";\r\nimport {HTMLCardTopicBox} from \"./HTMLCardTopicBox.js\";\r\n\r\nclass HTMLCardTopicBody extends HTMLPartarumElement {\r\n\r\n    constructor(config, id, dom){\r\n        super(config, \"article\", dom, id);\r\n\r\n        this.cardBoxObject = this.root.dom.get(\"CardBoxObject\");\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n\r\n        this.className = \"box-row box-center\";\r\n\r\n        this.loadElements().then();\r\n    }\r\n\r\n    async loadElements(){\r\n\r\n        await this.addTopicBox();\r\n    }\r\n\r\n    addTopicBox(){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            for(let [key, value] of this.cardBoxObject.topicBoxes){\r\n\r\n                let id = \"productCategory_\" + key;\r\n\r\n                this.root.dom.add(id, {\r\n                    themes: {},\r\n                    topic: new HTMLCardTopicBox(this.root.config, this.root.dom, id, value),\r\n                    type: \"Categories\",\r\n                    data: {}\r\n                });\r\n\r\n                this.appendChild(this.root.dom.get(id).topic);\r\n            }\r\n\r\n            resolve();\r\n        });\r\n    }\r\n}\r\n\r\n(customElements.get(\"partarum-card-topic-body\") === undefined) && customElements.define(\"partarum-card-topic-body\", HTMLCardTopicBody);\r\n\r\nexport {HTMLCardTopicBody};", "class HTMLCardBoxObject {\r\n\r\n\r\n    // ! TODO Als Worker gestalten\r\n\r\n    /*\r\n        let topic: [\r\n            {\r\n                name: \"Webspace\",\r\n                cards: [\r\n                    {\r\n                        title: \"WebBase\"\r\n                    },\r\n                    {\r\n                        title: \"WebBusiness\"\r\n                    },\r\n                    {\r\n                        title: \"WebEnterprise\"\r\n                    }\r\n                ],\r\n                display: true\r\n\r\n            },\r\n            {\r\n                name: \"Server\",\r\n                subTopic: [\r\n                    {\r\n                        name: \"Ipv4\",\r\n                        cards: [\r\n                            {\r\n                                title: \"vServer S\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        name: \"Ipv6\",\r\n                        cards: [\r\n\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                name: \"Storage\",\r\n                card: {\r\n                    title: \"\"\r\n                }\r\n            }\r\n        ]\r\n     */\r\n\r\n    startMenu = new Map();\r\n\r\n    topicIDs = Partarum.Helper.Hex.createIndex(true);\r\n\r\n    topicBoxes = new Map();\r\n\r\n    subBoxes = new Map();\r\n\r\n    lastID = 0x00000000000001;\r\n\r\n    ready = false;\r\n\r\n    config = {};\r\n\r\n\r\n    constructor(config){\r\n\r\n        // ! {surface: , topic: } || [topic]\r\n\r\n        this.checkConfig(config).then( () => {\r\n\r\n            this.analyseConfig(this.config.topic).then(()=>{\r\n                this.ready = true;\r\n            });\r\n        });\r\n    }\r\n\r\n    checkConfig(config){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            if(Array.isArray(config)){\r\n\r\n                this.config.topic = config;\r\n\r\n            } else {\r\n\r\n                this.config = config;\r\n            }\r\n\r\n\r\n            resolve(true);\r\n            //console.dir(this.config);\r\n        })\r\n    }\r\n\r\n    async analyseConfig(topic){\r\n\r\n        if(topic instanceof Object ){\r\n\r\n            if(Array.isArray(topic)){\r\n\r\n                for(let topicObject of topic){\r\n\r\n                    // name, subTopic,  cards, card\r\n\r\n                    this.lastID = this.topicIDs.next(true);\r\n\r\n                    this.topicBoxes.set(this.lastID, {});\r\n\r\n                    for(let topicKey in topicObject){\r\n\r\n                       await this[(topicKey === \"name\") ? \"topicName\" : topicKey](topicObject[topicKey]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    checkStatus(){\r\n\r\n        return new Promise((resolve) =>  {\r\n\r\n            let int = setInterval(() => {\r\n\r\n                if(this.ready === true){\r\n\r\n                    resolve(true);\r\n\r\n                    clearInterval(int);\r\n                }\r\n\r\n            }, 100);\r\n        });\r\n\r\n    }\r\n\r\n    topicName(topic){\r\n\r\n        return new Promise((resolve)=>{\r\n\r\n            this.startMenu.set(this.lastID, topic);\r\n\r\n            resolve(true);\r\n        })\r\n\r\n\r\n        // create Button and TopicBox\r\n    }\r\n\r\n    subTopic(cardObject){\r\n\r\n        // create SubButton and TopicBox\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            let convert = Object.entries(cardObject).map((cards)=> {\r\n\r\n                return cards[1];\r\n            });\r\n\r\n            let subCardBoxObject = new HTMLCardBoxObject(convert); // ! das neue Object f\u00FCrs Submenu\r\n\r\n            subCardBoxObject.checkStatus().then( () => {\r\n\r\n                this.subBoxes.set(this.lastID, subCardBoxObject);\r\n\r\n                this.topicBoxes.get(this.lastID).subTopic = cardObject;\r\n\r\n                resolve(true);\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n\r\n    card(cardObject) {\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            this.topicBoxes.get(this.lastID).card = cardObject;\r\n\r\n            resolve(true);\r\n        })\r\n        // create one card\r\n\r\n    }\r\n\r\n    cards(cardsObject){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            this.topicBoxes.get(this.lastID).cards = cardsObject;\r\n\r\n            resolve(true);\r\n        })\r\n        // create more than one\r\n\r\n    }\r\n\r\n    display(value){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            this.topicBoxes.get(this.lastID).display = value;\r\n\r\n            resolve(true);\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport {HTMLCardBoxObject};", "import {HTMLPartarumElement} from \"../HTMLPartarumElement.js\";\r\nimport {HTMLCardBoxHeader} from \"./HTMLCardBoxHeader.js\";\r\nimport {HTMLCardBoxMenu} from \"./HTMLCardBoxMenu.js\";\r\nimport {HTMLCardTopicBody} from \"./HTMLCardTopicBody.js\";\r\nimport {HTMLCardBoxObject} from \"./HTMLCardBoxObject.js\";\r\n\r\nclass HTMLCardBoxBody extends HTMLPartarumElement {\r\n\r\n    constructor(config, name, dom){\r\n\r\n        super(config, name, dom, \"partarumCardBoxBody\");\r\n    }\r\n\r\n    connectedCallback(){\r\n\r\n        super.connectedCallback();\r\n\r\n        this.analyseConfig().then(()=>{\r\n\r\n            //console.table(this.cardBoxObject);\r\n\r\n            this.loadElements().then();\r\n        });\r\n\r\n    }\r\n\r\n    analyseConfig(){\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            if((\"topic\" in this.root.config) && (\"surface\" in this.root.config)){\r\n\r\n                this.cardBoxObject = new HTMLCardBoxObject(this.root.config);\r\n\r\n                this.cardBoxObject.checkStatus().then(() => {\r\n\r\n                    //let surface = this.root.config.surface;\r\n\r\n                    resolve(true);\r\n                });\r\n\r\n                this.root.dom.add(\"CardBoxObject\", this.cardBoxObject);\r\n\r\n            } else {\r\n\r\n                reject();\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    async loadElements(){\r\n\r\n        let theme = this.root.config?.theme ?? \"classic\";\r\n\r\n        switch(theme){\r\n\r\n            case \"classic\": \r\n\r\n                await this.setHeader();\r\n                await this.setStartMenu();\r\n                await this.setSubMenu();\r\n                await this.setTopicBody();\r\n\r\n                break;\r\n            case \"noDraw\":\r\n\r\n                await this.setHeader();\r\n                await this.setStartMenu(false);\r\n                await this.setSubMenu(false);\r\n                await this.setTopicBody();\r\n\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    setHeader(){\r\n\r\n        return new Promise((resolve)=>{\r\n\r\n            this.root.dom.add(\"CardBoxHeader\", new HTMLCardBoxHeader(this.root.config, \"card-box-menu\", this.root.dom), null);\r\n            this.appendChild(this.root.dom.get(\"CardBoxHeader\"));\r\n\r\n            resolve(true);\r\n        });\r\n\r\n    }\r\n\r\n    setStartMenu(draw = true){\r\n\r\n        return new Promise((resolve)=>{\r\n\r\n            let ar = this.cardBoxObject.startMenu;\r\n\r\n            this.setMenu(\"productGroupNav\", this.root.config, \"productGroupNav\").then(() => {\r\n\r\n                for(let [id, name] of ar){\r\n\r\n                    this.root.dom.get(\"productGroupNav\").addTopic(name, id, \"button\", this.root);\r\n                }\r\n\r\n                (draw === true) && this.setCanvas(\"canvas\", this.root.dom.get(\"productGroupNav\")).then(() => {\r\n\r\n                    resolve(true);\r\n                });\r\n\r\n\r\n            });\r\n        });\r\n    }\r\n\r\n    setSubMenu(draw = true){\r\n\r\n        return new Promise((resolve)=>{\r\n\r\n            // ! Hier das Submenu + Canvas setzen !\r\n\r\n            let cardSubBoxes = this.cardBoxObject.subBoxes;\r\n\r\n            let boxCounter = 0;\r\n\r\n            let displayMenu = this.root.dom.get(\"DisplayMenu\");\r\n\r\n            let categories = this.root.dom.get(\"Categories\");\r\n\r\n            for(let [parentID, subBox] of this.cardBoxObject.subBoxes){\r\n\r\n                let menuID = \"categoryMenu_\" + parentID;\r\n\r\n                let canvasID = \"categoryCanvas_\" + parentID;\r\n\r\n                displayMenu.add(\"productCategory_\" + parentID, {\r\n                   \"categoryMenu\": menuID,\r\n                   \"categoryCanvas\": canvasID\r\n                });\r\n\r\n                let menuObject = {};\r\n\r\n                let canvasObject = {};\r\n\r\n                let startMenu = subBox.startMenu;\r\n\r\n                let menuCounter = 0;\r\n\r\n                this.setMenu(menuID, subBox.config, menuID).then(() => {\r\n\r\n                    for (let [id, name] of startMenu) {\r\n\r\n                        let menu = this.root.dom.get(menuID);\r\n\r\n                        menu.addTopic(name, id, \"button\", this.root).then(() => {\r\n\r\n                            menuCounter++;\r\n\r\n                            menuObject.topic = menu;\r\n\r\n                            if((boxCounter === cardSubBoxes.size) && (menuCounter === startMenu.size)){\r\n\r\n                                (draw === true) && this.setCanvas(canvasID, this.root.dom.get(menuID), false).then(() => {\r\n\r\n                                    canvasObject.topic = this.root.dom.get(canvasID);\r\n\r\n                                    categories.add(canvasID, canvasObject);\r\n\r\n                                    categories.add(menuID, menuObject);\r\n\r\n                                    menu.classList.add(\"zero\");\r\n\r\n                                    resolve(true);\r\n\r\n                                });\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n                boxCounter++;\r\n            }\r\n        });\r\n    }\r\n\r\n    setMenu(menuType, config, id){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            this.root.dom.add(menuType, new HTMLCardBoxMenu(config, id, this.root.dom), null);\r\n\r\n            this.root.dom.add(\"CardBoxHeader\", this.root.dom.get(menuType), \"append\");\r\n\r\n            resolve(true);\r\n        });\r\n    }\r\n\r\n    setCanvas(id = \"canvas\", menu, draw = true){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            Partarum.Draw.Plotter.createBoard(id, {width: menu.offsetWidth.toString(), height: \"160\"}).then((canvas) => {\r\n\r\n\r\n                this.root.dom.add(canvas.id, canvas);\r\n\r\n                (draw === false) && canvas.classList.add(\"zero\");\r\n\r\n                this.root.dom.get(\"DrawBoard\").add(id, canvas);\r\n\r\n                this.root.dom.add(\"CardBoxHeader\", canvas, \"append\");\r\n\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    setTopicBody(){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            // create the box for topicboxes\r\n\r\n            this.root.dom.add(\"CardTopicBody\", new HTMLCardTopicBody(this.root.config, \"card-topic-body\", this.root.dom), null);\r\n            this.appendChild(this.root.dom.get(\"CardTopicBody\"));\r\n\r\n            resolve(true);\r\n        });\r\n    }\r\n\r\n    addTopicBox(){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n\r\n            // create a CardTopicBox\r\n        });\r\n\r\n    }\r\n}\r\n\r\n(customElements.get(\"partarum-card-box-body\") === undefined) && customElements.define(\"partarum-card-box-body\", HTMLCardBoxBody);\r\n\r\nexport {HTMLCardBoxBody};", "const HEX_START = 0x00000000000001;\r\n\r\nconst HEX_END = 0x1FFFFFFFFFFFFF;\r\n\r\nconst HEX_PERMUT = 87178291200;\r\n\r\nclass Hex {\r\n\r\n    static lastID = HEX_START;\r\n\r\n    static getString(hex = 0){\r\n\r\n        return \"0x\" + hex.toString(16).padStart(14, \"0\");\r\n    }\r\n\r\n    static getInt(hex){\r\n\r\n        return parseInt(hex, 16);\r\n    }\r\n\r\n    static createIndex(global = false, startNumber = (global === false) ? HEX_START : ++Hex.lastID){\r\n\r\n        return new HexIndex(startNumber);\r\n    }\r\n\r\n}\r\n\r\nclass HexIndex {\r\n\r\n    lastHex = HEX_START;\r\n\r\n    constructor(startNumber) {\r\n        this.lastHex = startNumber;\r\n    }\r\n\r\n    * nextID(type){\r\n\r\n        while(true) {\r\n\r\n            this.lastHex++;\r\n\r\n            Hex.lastID = this.lastHex;\r\n\r\n            yield (type === false) ? this.lastHex : Hex.getString(this.lastHex);\r\n        }\r\n    }\r\n\r\n    next(type = false){\r\n\r\n        return this.nextID(type).next().value;\r\n    }\r\n}\r\n\r\nexport {Hex};", "import {Hex} from \"../Helper/Hex.js\";\n\nclass DrawElementAnalyzer {\n\n    static worker;\n\n    static analyzerID;\n\n    static promiseCache = {};\n\n    static intCache = {};\n\n    id;\n\n    cache = new WeakMap();\n\n    constructor(){\n\n        DrawElementAnalyzer.analyzerID ??= Hex.createIndex();\n\n        this.id = DrawElementAnalyzer.analyzerID.next(true);\n    }\n\n    getID(){\n        return this.id;\n    }\n\n    init(board, nodes){\n\n        // ! pr\u00FCfen ob Daten schon vorhanden sind - macht nur Sinn an einem statischen Bild\n\n        DrawElementAnalyzer.worker ??= new Worker(\"/Partarum/PartarumJS/Worker/DrawWorker/AnalyzeWorker\");\n\n        let boardObject = {\n            width: board.offsetWidth ?? board.innerWidth,\n            height: board.offsetHeight ?? board.innerHeight,\n            top: board.offsetTop ?? 0,\n            left: board.offsetLeft ?? 0\n        };\n\n        let nodeMap = [];\n\n        for(let node of nodes){\n\n            let nodeObject = {\n\n                width: node.offsetWidth,\n                height: node.offsetHeight,\n                top: node.offsetTop,\n                left: node.offsetLeft\n            };\n\n            this.cache.set(nodeObject, node);\n\n            nodeMap.push(nodeObject);\n        }\n\n        DrawElementAnalyzer.worker.postMessage([boardObject, nodeMap, this.id]);\n\n        // TODO: Die Promise ben\u00F6tigen einen Cache zur Identifizierung, damit resolve() auf jedes Promise ausgef\u00FChrt wird\n\n        DrawElementAnalyzer.intCache[this.id] = {};\n\n        DrawElementAnalyzer.promiseCache[this.id] = {};\n\n        DrawElementAnalyzer.promiseCache[this.id].promise = new Promise((resolve, reject) => {\n\n            /*\n                TODO: Der Worker muss gecacht werden oder statisch laufen\n\n                - damit es nicht zu \u00FCberschneidungen kommt,\n                muss jede Message eine ID passenden zur Herkunft der Aufgabe mitbekommen\n             */\n\n\n\n            DrawElementAnalyzer.worker.onmessage = (data) => {\n\n                DrawElementAnalyzer.promiseCache[data.data.id].data = data.data;\n\n                console.dir(DrawElementAnalyzer.promiseCache);\n\n                DrawElementAnalyzer.intCache[data.data.id].id = setInterval(DrawElementAnalyzer.intCache[data.data.id].fn, 200, data);\n\n            };\n\n            DrawElementAnalyzer.intCache[this.id].fn = (test) => {\n\n                (this.id === test.data.id) && clearInterval(DrawElementAnalyzer.intCache[test.data.id].id);\n\n                resolve(test.data);\n            };\n        });\n\n        return(DrawElementAnalyzer.promiseCache[this.id].promise);\n    }\n}\n\nexport {DrawElementAnalyzer};", "import {DrawElementAnalyzer} from \"./DrawElementAnalyzer.js\";\n   // ! TODO-me Plot ab\u00E4ndern !\n/*\n        board:\n            id = canvasElement\n\n        collection:\n\n            - f\u00FCr jedes funktionale Thema  ein key => Map -> canvasID => Map ->\n\n            Beispiel:\n                        collection.set(\"setLine\", new Map());\n                        collection.get(\"setLine\").set(\"boards\", new Map())\n                        collection.get(\"setLine\").get(\"boards\").set(startPoint, canvasID)\n                        collection.get(\"setLine\").set(\"endpoints\", new Map())\n                        collection.get(\"setLine\").get(\"endpoints\").set(startPoint, [..endPoints])\n\n                        Was jetzt? Was ist wichtig und was ben\u00F6tigen wir?\n\n                            F\u00FCr jede ID ( der Startpunkt ) wird ein spezielles Schema gespeichert - als die Zielpunkte der Linie\n\n        ctx: WeakMap\n\n            - canvasElement = canvasCTX\n */\n\nclass Plot {\n\n    theme;\n\n    board;\n\n    nodes = new DrawElementAnalyzer(); // das Board kann mit init() analysiert werden\n\n    analyzerID;\n\n    lineParams = {\n        start: {\n            moveTo: \"start\" | \"center\" | \"end\",\n            plus: null,\n            minus: null\n        },\n        goal: {\n            moveTo: \"start\" | \"center\" | \"end\",\n            plus: null,\n            minus: null\n        }\n    };\n\n    constructor(board, id = null) {\n\n        /*\n            TODO: checken ob es f\u00FCr die Konstellation schon einen Eintrag gibt\n             - sofern mitgegeben, denn die eigentlichen Nodes kommen erst noch\n         */\n\n        this.analyzerID = id ?? this.nodes.getID();\n\n        console.dir(this.analyzerID);\n\n        this.board = (board instanceof HTMLCanvasElement) ? board : document.createElement(\"canvas\");\n    }\n\n    /*\n    ! sp\u00E4ter noch auf SVG ausweiten\n       let svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n\n       svg.setAttribute('viewBox','0 0 200 200');\n       svg.setAttribute('width',pCards.offsetWidth.toString());\n       svg.setAttribute('height','160');\n\n       pCards.appendChild(svg);\n\n        */\n\n\n    setTheme(theme){\n\n        this.theme = theme;\n    }\n\n    // das Board analysieren und die wichtigsten Eckpunkte f\u00FCr CTX bereitstellen - das was bis jetzt this.setLines() macht\n    setNodes(...nodes){\n\n        return new Promise((resolve, reject) => {\n\n            this.nodes.init(this.board, (Array.isArray(nodes)) ? nodes : [nodes]).then((data) => {\n\n                console.dir(Partarum.Cache.PlotCache.getCollection(\"PlotterCache\", \"Plotter\", \"setLine\").entries());\n\n                resolve({data: data, ctx: this.board.getContext(\"2d\")});\n            });\n\n\n        });\n    }\n\n    setCanvasTo(element, position = \"append\" | \"after\" | \"before\" | \"replace\"){\n\n        switch(position){\n\n            case \"append\":\n                element.appendChild(this.board);\n                break;\n            case \"after\":\n                element.after(this.board);\n                break;\n            case \"before\":\n                element.before(this.board);\n                break;\n            case \"replace\":\n                element.replaceWith(this.board);\n\n        }\n    }\n}\n\nexport {Plot};\n", "import {Plot} from \"../../Draw/Plot.js\";\r\n\r\n/*\r\n        Was ist das - was habe ich mir bei der klasse gedacht?\r\n */\r\n\r\nclass HTMLCardDrawBox {\r\n\r\n    root = {\r\n        dom: {},\r\n        app: new Partarum()\r\n    };\r\n\r\n    plotter = Partarum.Draw.Plotter\r\n\r\n    constructor(config, name, dom, id) {\r\n\r\n        this.root.dom = dom;\r\n\r\n        this.root.config = config;\r\n\r\n        this.root.name = name;\r\n\r\n        this.root.id = (typeof id === \"string\") ? id.replace(\" \", \"_\") : \"\";\r\n    }\r\n\r\n    createPlot(board, theme, nodes, clear = false){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            let plot = new Plot(board);\r\n\r\n            plot.setTheme(theme);\r\n\r\n            plot.setNodes(nodes).then(() => {\r\n\r\n                resolve(plot);\r\n            });\r\n\r\n        });\r\n    }\r\n    // TODO: setLines zu createPlot umbauen\r\n    setLines(canvas, cardTheme, startNode , goalNode, clear = false) {\r\n        \r\n        this.plotter.record(canvas,\"setLine\", cardTheme, goalNode.id, ()=>{\r\n\r\n            let plot = new Plot(canvas);\r\n\r\n            console.dir(plot.analyzerID);\r\n\r\n            plot.setNodes(startNode, goalNode).then((data)=>{\r\n\r\n                let ctx = data.ctx;\r\n\r\n                console.dir(data.data.id);\r\n\r\n                let board = data.data.board;\r\n                let start = data.data.nodes[0];\r\n                let goal = data.data.nodes[1];\r\n\r\n                (clear !== false) && ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n                ctx.strokeStyle = \"#007F85\";\r\n                ctx.lineWidth = 3;\r\n\r\n                ctx.beginPath();\r\n\r\n                ctx.moveTo(start.nodeCTX.centerTop.x, 0);\r\n                ctx.lineTo(goal.nodeCTX.centerTop.x, goal.nodeCTX.centerTop.y);\r\n\r\n                ctx.stroke();\r\n\r\n\r\n            });\r\n\r\n        }).then(()=>{\r\n\r\n            this.plotter.render(\"setLine\", cardTheme);\r\n        }).catch((error) => {\r\n\r\n            console.dir(error);\r\n            console.log(\"ERROR\");\r\n        });\r\n    }\r\n}\r\n\r\nexport {HTMLCardDrawBox};", "import {HTMLPartarumHost} from \"./HTMLPartarumHost.js\";\r\nimport {HTMLCardBoxBody} from \"./PartarumCardBox/HTMLCardBoxBody.js\";\r\nimport {HTMLCardDrawBox} from \"./PartarumCardBox/HTMLCardDrawBox.js\";\r\n\r\nclass HTMLCardBox extends HTMLPartarumHost {\r\n\r\n    constructor(config) {\r\n\r\n        super(config, \"partarum-card-box\", \"partarumCardBox\");\r\n\r\n        this.loadStyle({\r\n\r\n            link: \"/Partarum/PartarumCSS/PartarumElements/cardBox.css\",\r\n            style: document.querySelectorAll('style[id*=\"fa\"]')\r\n\r\n        }).then(() => {\r\n\r\n        });\r\n\r\n        this.root.dom.add(\"CardBoxBody\", new HTMLCardBoxBody(this.root.config, \"body\", this.root.dom), null);\r\n\r\n        this.root.dom.get(\"CardBoxBody\").classList.add(\"single-box-center-medium\");\r\n\r\n        this.root.dom.add(\"shadowBox\", this.root.dom.get(\"CardBoxBody\"), \"append\");\r\n\r\n        if (Reflect.has(this.root.config, \"parent\")) {\r\n\r\n            this.root.config.parent.appendChild(this);\r\n        } else {\r\n\r\n            document.body.appendChild(this);\r\n        }\r\n\r\n        this.root.dom.add(\"DrawBoard\", this.root.dom.create(\"Canvas\", \"Boards\"));\r\n\r\n        this.root.dom.add(\"CardDrawBox\", new HTMLCardDrawBox);\r\n\r\n        this.root.dom.add(\"Categories\", this.root.dom.create(\"CardBox\", \"Categories\"));\r\n\r\n        this.root.dom.add(\"DisplayCategories\", this.root.dom.create(\"CardBox\", \"DisplayCategories\"));\r\n\r\n        this.root.dom.add(\"DisplayMenu\", this.root.dom.create(\"CardBox\", \"DisplayMenu\"));\r\n\r\n        this.root.dom.add(\"Loader\", this.root.dom.create(\"CardBox\", \"Loader\"));\r\n\r\n        this.root.dom.add(\"Listener\", this.root.dom.create(\"CardBox\", \"Listener\"));\r\n\r\n        this.root.dom.add(\"LastDraw\", new Set());\r\n\r\n        this.root.dom.get(\"Loader\").add(\"Status\", 0);\r\n\r\n\r\n    }\r\n\r\n    connectedCallback(){\r\n        super.connectedCallback();\r\n    }\r\n\r\n\r\n    /*\r\n        ! f\u00FCr CardBox ab\u00E4ndern\r\n     */\r\n\r\n    add(element, topic){\r\n\r\n        this.root.dom[topic].appendChild(element);\r\n    }\r\n\r\n    addTopic(topic){\r\n\r\n        let topicArray = (Array.isArray(topic)) ? topic : [topic];\r\n\r\n        for(let topicName of topicArray){\r\n\r\n            this.root.dom.add(topicName, document.createElement(\"section\"), null);\r\n\r\n            this.root.dom.add(\"CardBoxBody\", this.root.dom.get(topicName), \"append\");\r\n        }\r\n    }\r\n}\r\n\r\n(customElements.get(\"partarum-card-box\") === undefined) && customElements.define(\"partarum-card-box\", HTMLCardBox);\r\n\r\nexport {HTMLCardBox};", "import {HTMLPartarumHost} from \"../HTMLPartarumHost.js\";\r\n\r\nclass HTMLMenuHamburger extends HTMLPartarumHost {\r\n\r\n    /*\r\n           ! max-width 1100px\r\n\r\n     */\r\n\r\n    constructor(config){\r\n        super(config, \"partarum-menu-hamburger\", \"partarumMenuHamburger\");\r\n\r\n        this.loadStyle({\r\n\r\n            link: \"/Partarum/PartarumCSS/PartarumElements/menuHamburger.css\",\r\n            style: document.querySelectorAll('style[id*=\"fa\"]')\r\n\r\n        }).then(() => {\r\n\r\n        });\r\n\r\n        this.root.dom.add(\"input\", document.createElement(\"input\"), null);\r\n        this.root.dom.get(\"input\").setAttribute(\"id\", \"partarumMenuHamburgerTrigger\");\r\n        this.root.dom.get(\"input\").setAttribute(\"type\", \"checkbox\");\r\n        this.root.dom.get(\"input\").classList.add(\"hamburger\");\r\n\r\n        this.root.dom.add(\"shadowBox\", this.root.dom.get(\"input\"), \"append\");\r\n\r\n        if(Reflect.has(config, \"parent\")){\r\n\r\n            if((config?.position === \"left\") || (config?.position === \"center\")){\r\n\r\n                config.parent.before(this);\r\n            } else {\r\n\r\n                config.parent.after(this);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    connectedCallback(){\r\n        super.connectedCallback();\r\n\r\n        this.id = \"partarumMenuHamburger\";\r\n    }\r\n}\r\n\r\n(customElements.get(\"partarum-menu-hamburger\") === undefined) && customElements.define(\"partarum-menu-hamburger\",HTMLMenuHamburger);\r\n\r\nexport {HTMLMenuHamburger};", "import {Hex} from \"../Helper/Hex.js\";\r\n\r\nclass HTMLLayoutElementAnalyzer {\r\n\r\n    static worker;\r\n\r\n    static analyzerID;\r\n\r\n    static promiseCache = {};\r\n\r\n    static intCache = {};\r\n\r\n    id;\r\n\r\n    cache = new WeakMap();\r\n\r\n    constructor(){\r\n\r\n        HTMLLayoutElementAnalyzer.analyzerID ??= Hex.createIndex();\r\n\r\n        this.id = HTMLLayoutElementAnalyzer.analyzerID.next(true);\r\n    }\r\n\r\n    getID(){\r\n        return this.id;\r\n    }\r\n\r\n    init(base, nodes){\r\n\r\n        // ! pr\u00FCfen ob Daten schon vorhanden sind - macht nur Sinn an einem statischen Bild\r\n\r\n        HTMLLayoutElementAnalyzer.worker ??= new Worker(\"/Partarum/PartarumJS/Worker/HTMLWorker/LayoutAnalyzeWorker\");\r\n\r\n        let baseObject = {\r\n            width: base.offsetWidth ?? base.innerWidth,\r\n            height: base.offsetHeight ?? base.innerHeight,\r\n            top: base.offsetTop ?? 0,\r\n            left: base.offsetLeft ?? 0\r\n        };\r\n\r\n        let nodeMap = [];\r\n\r\n        for(let node of nodes){\r\n\r\n            let nodeObject = {\r\n\r\n                width: node.offsetWidth,\r\n                height: node.offsetHeight,\r\n                top: node.offsetTop,\r\n                left: node.offsetLeft\r\n            };\r\n\r\n            this.cache.set(nodeObject, node);\r\n\r\n            nodeMap.push(nodeObject);\r\n        }\r\n\r\n\r\n        HTMLLayoutElementAnalyzer.worker.postMessage([baseObject, nodeMap, this.id]);\r\n\r\n\r\n\r\n        // TODO: Die Promise ben\u00F6tigen einen Cache zur Identifizierung, damit resolve() auf jedes Promise ausgef\u00FChrt wird\r\n\r\n        HTMLLayoutElementAnalyzer.intCache[this.id] = {};\r\n\r\n        HTMLLayoutElementAnalyzer.promiseCache[this.id] = {};\r\n\r\n        HTMLLayoutElementAnalyzer.promiseCache[this.id].promise = new Promise((resolve, reject) => {\r\n\r\n            /*\r\n                TODO: Der Worker muss gecacht werden oder statisch laufen\r\n\r\n                - damit es nicht zu \u00FCberschneidungen kommt,\r\n                muss jede Message eine ID passenden zur Herkunft der Aufgabe mitbekommen\r\n             */\r\n\r\n\r\n\r\n            HTMLLayoutElementAnalyzer.worker.onmessage = (data) => {\r\n\r\n                HTMLLayoutElementAnalyzer.promiseCache[data.data.id].data = data.data;\r\n\r\n                HTMLLayoutElementAnalyzer.intCache[data.data.id].id = setInterval(HTMLLayoutElementAnalyzer.intCache[data.data.id].fn, 200, data);\r\n\r\n            };\r\n\r\n            HTMLLayoutElementAnalyzer.intCache[this.id].fn = (test) => {\r\n\r\n                (this.id === test.data.id) && clearInterval(HTMLLayoutElementAnalyzer.intCache[test.data.id].id);\r\n\r\n                resolve(test.data);\r\n            };\r\n        });\r\n\r\n        return(HTMLLayoutElementAnalyzer.promiseCache[this.id].promise);\r\n    }\r\n}\r\n\r\nexport {HTMLLayoutElementAnalyzer};", "import {HTMLPartarumElement} from \"../HTMLPartarumElement.js\";\r\nimport {HTMLMenuHamburger} from \"./HTMLMenuHamburger.js\";\r\nimport {HTMLLayoutElementAnalyzer} from \"../HTMLLayoutElementAnalyzer.js\";\r\nimport {DrawElementAnalyzer} from \"../../Draw/DrawElementAnalyzer.js\";\r\n\r\nclass HTMLNavBarBody extends HTMLPartarumElement {\r\n\r\n    nodes = new HTMLLayoutElementAnalyzer()\r\n\r\n    constructor(config, name, dom){\r\n\r\n        super(config, name, dom, \"partarumNavBarBody\");\r\n    }\r\n\r\n    connectedCallback(){\r\n\r\n        super.connectedCallback();\r\n\r\n        this.root.connectedCallback(() => {\r\n\r\n            console.dir(\"root connectedCallback\");\r\n\r\n            this.id = \"partarumNavBarBody\";\r\n\r\n            this.analyseConfig().then(()=>{\r\n\r\n                if(Reflect.has(this.root.config, \"nav\")){\r\n\r\n                    this.loadElements().then();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    analyseConfig(config){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n                /*\r\n                    {\r\n                        mobile: {},\r\n                        desktop: {},\r\n                        nav: []\r\n                    }\r\n                 */\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    async loadElements(){\r\n\r\n        await this.setNav(this.root.config.nav);\r\n        await this.setDesktop(this.root.config.desktop);\r\n        await this.setMobile(this.root.config.mobile);\r\n\r\n    }\r\n\r\n    setNav(nav){\r\n        return new Promise((resolve) => {\r\n\r\n            let type = this.root.config?.type;\r\n\r\n            this.root.dom.add(\"nav\", document.createElement(\"nav\"), null);\r\n\r\n            this.appendChild(this.root.dom.get(\"nav\"));\r\n\r\n            switch(type){\r\n                // classic = einfaches <nav> mit <a> Elementen und ein mobile Menu\r\n                case \"classic\":\r\n\r\n                    this.setAnchor(nav, this.root.dom.get(\"nav\")).then(() => resolve());\r\n            }\r\n        });\r\n    }\r\n\r\n    setMobile(config){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            console.dir(config);\r\n\r\n            if(config?.type){\r\n\r\n                switch(config.type){\r\n\r\n                    case \"Hamburger\":\r\n                            let checkbox = new HTMLMenuHamburger({\r\n                                parent: this.root.dom.get(\"nav\"),\r\n                                ...config?.mobile\r\n                            });\r\n\r\n                            //this.root.dom.get(\"nav\").before(checkbox);\r\n\r\n                            resolve();\r\n\r\n                }\r\n            }\r\n\r\n\r\n            if(config?.position){\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    setDesktop(config){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            if(config?.type){\r\n\r\n            }\r\n\r\n            if((config?.position) || ((config?.positionX) || (config?.positionY))){\r\n\r\n                let x = config.positionX || config.position.x || {\r\n                    to: \"center\"\r\n                };\r\n\r\n                let y = config.positionY || config.position.y || {\r\n                    from: 0,\r\n                    to: \"10vh\",\r\n                    height: \"10vh\"\r\n                }\r\n\r\n                Partarum.HTML.getSafeElementByQueryString(config.position.to).then((element) => {\r\n\r\n                    setTimeout(() => {\r\n\r\n                        this.nodes.init(window, [element]).then((data) => {\r\n\r\n                            let vh1 = data.base.height / 100;\r\n\r\n                            console.dir(vh1 * 10);\r\n\r\n                            console.dir(data);\r\n\r\n                            //this.setAnimation(data.nodes[0].top, 10);\r\n                            let animationTop = (data.nodes[0].top / 2) - ((data.base.height / 10) / 2);\r\n\r\n                            this.setAttribute(\"style\", `\r\n                            --animationTop: ${animationTop}px; \r\n                            --animationHeight: ${config.position?.height || \"10vh\"}; \r\n                            animation: simpleNav 2s ease-in-out; \r\n                            animation-fill-mode: forwards; \r\n                            display: grid;\r\n                            grid-template-columns: 1fr 0; \r\n                            color: #F9F9FA;\r\n                            `);\r\n\r\n                            resolve();\r\n                        });\r\n\r\n                    },500);\r\n\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    setAnimation(top, height){\r\n        let style = document.createElement(\"style\");\r\n\r\n        style.textContent = `\r\n            @keyframes simpleNav {\r\n                from {\r\n                    top: 0;\r\n                    height: 0;\r\n                    opacity: 0;                  \r\n                    font-size: 0;\r\n                } \r\n                to {\r\n                    top: calc(calc(${top}px / 2) - calc(${height}vh / 2));\r\n                    height: ${height}vh;\r\n                    opacity: 1;\r\n                    font-size: 1.6rem;\r\n                }\r\n            }\r\n        `;\r\n\r\n        this.appendChild(style);\r\n    }\r\n\r\n    setAnchor(config, parent){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            console.dir(\"setAnchor\");\r\n\r\n            let anchorArray = (Array.isArray(config) ? config : [config]);\r\n\r\n            let counter = 0;\r\n\r\n            for(let anchorConfig of anchorArray){\r\n\r\n                let anchor = document.createElement(\"a\");\r\n\r\n                for(let attr in anchorConfig){\r\n\r\n                    switch(attr){\r\n\r\n                        case \"text\":\r\n\r\n                            anchor.appendChild(document.createTextNode(anchorConfig[attr]));\r\n                            break;\r\n                        default:\r\n                            anchor.setAttribute(attr, anchorConfig[attr]);\r\n                    }\r\n                }\r\n\r\n                parent.appendChild(anchor);\r\n\r\n                counter ++;\r\n\r\n                (counter === anchorArray.length) && resolve();\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n(customElements.get(\"partarum-nav-bar-body\") === undefined) && customElements.define(\"partarum-nav-bar-body\", HTMLNavBarBody);\r\n\r\nexport {HTMLNavBarBody};", "import {HTMLPartarumHost} from \"./HTMLPartarumHost.js\";\r\nimport {HTMLNavBarBody} from \"./PartarumNavBar/HTMLNavBarBody.js\";\r\n\r\nclass HTMLNavBar extends HTMLPartarumHost {\r\n\r\n    constructor(config){\r\n        super(config, \"partarum-nav-bar\", \"partarumNavBar\");\r\n\r\n        this.loadStyle({\r\n\r\n            link: \"/Partarum/PartarumCSS/PartarumElements/navBar.css\",\r\n            style: document.querySelectorAll('style[id*=\"fa\"]')\r\n\r\n        }).then(() => {\r\n\r\n        });\r\n\r\n        this.root.dom.add(\"NavBarBody\", new HTMLNavBarBody(config, \"body\", this.root.dom), null);\r\n\r\n        this.root.dom.get(\"NavBarBody\").classList.add(\"single-box-center-large\");\r\n\r\n        this.root.dom.add(\"shadowBox\", this.root.dom.get(\"NavBarBody\"), \"append\");\r\n\r\n        if(config !== undefined) {\r\n\r\n            if (Reflect.has(config, \"parent\")) {\r\n\r\n                config.parent.appendChild(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    connectedCallback(){\r\n        super.connectedCallback();\r\n\r\n        this.id = \"partarumNavBar\";\r\n    }\r\n}\r\n\r\n(customElements.get(\"partarum-nav-bar\") === undefined) && customElements.define(\"partarum-nav-bar\", HTMLNavBar);\r\n\r\nexport {HTMLNavBar};", "import {HTMLPartarumElement} from \"../HTMLPartarumElement.js\";\r\n\r\nclass HTMLBottomBarBody extends HTMLPartarumElement {\r\n\r\n    constructor(config, name){\r\n\r\n        super(config, name);\r\n\r\n        this.id = \"partarumBottomBarBody\";\r\n    }\r\n}\r\n\r\n(customElements.get(\"partarum-bottom-bar-body\") === undefined) && customElements.define(\"partarum-bottom-bar-body\", HTMLBottomBarBody);\r\n\r\nexport {HTMLBottomBarBody};", "import {HTMLPartarumHost} from \"./HTMLPartarumHost.js\";\r\nimport {HTMLBottomBarBody} from \"./PartarumBottomBar/HTMLBottomBarBody.js\";\r\n\r\nclass HTMLBottomBar extends HTMLPartarumHost {\r\n\r\n    constructor(config){\r\n\r\n        super(config, \"partarum-bottom-bar\");\r\n\r\n        this.id = \"partarumBottomBar\";\r\n\r\n        this.loadStyle({\r\n\r\n            link: \"/Partarum/PartarumCSS/PartarumElements/bottomBar.css\",\r\n            style: document.querySelectorAll('style[id*=\"fa\"]')\r\n\r\n        }).then(()=>{\r\n\r\n        });\r\n\r\n        this.root.dom.add(\"BottomBarBody\", new HTMLBottomBarBody(config, \"body\"), null);\r\n\r\n        this.root.dom.add(\"shadowBox\", this.root.dom.get(\"BottomBarBody\"), \"append\");\r\n\r\n        if(Reflect.has(config, \"parent\")){\r\n\r\n            config.parent.appendChild(this);\r\n        } else {\r\n\r\n            document.body.appendChild(this);\r\n        }\r\n\r\n        this.addTopic([\"leftSide\", \"center\", \"rightSide\"]);\r\n\r\n    }\r\n\r\n    add(element, topic){\r\n\r\n        this.root.dom.add(topic, element, \"append\");\r\n    }\r\n\r\n    addTopic(topic){\r\n\r\n        let topicArray = (Array.isArray(topic)) ? topic : [topic];\r\n\r\n        for(let topicName of topicArray){\r\n\r\n            let topicNode = document.createElement(\"section\");\r\n\r\n            this.root.dom.add(topicName, topicNode, null);\r\n\r\n            this.root.dom.add(\"BottomBarBody\", topicNode, \"append\");\r\n        }\r\n    }\r\n}\r\n\r\n(customElements.get(\"partarum-bottom-bar\") === undefined) && customElements.define(\"partarum-bottom-bar\", HTMLBottomBar);\r\n\r\nexport {HTMLBottomBar};", "import {HTMLPartarumElement} from \"../HTMLPartarumElement.js\";\r\n\r\nclass HTMLCookieBody extends HTMLPartarumElement {\r\n\r\n    constructor(config){\r\n        super(config, \"body\");\r\n\r\n\r\n    }\r\n}\r\n\r\n(customElements.get(\"partarum-cookie-body\") === undefined) && customElements.define(\"partarum-cookie-body\", HTMLCookieBody);\r\n\r\nexport {HTMLCookieBody};", "import {HTMLPartarumElement} from \"../HTMLPartarumElement.js\";\r\n\r\nclass HTMLCookieHeader extends HTMLPartarumElement {\r\n\r\n    constructor(config){\r\n        super(config, \"header\");\r\n\r\n        this.className = \"box box-center-center\";\r\n\r\n        this.root.app.themes = [\r\n            {\r\n                header: {\r\n                    config: {\r\n                        h1: \"Und auch wir benutzen Cookies :)\"\r\n                    },\r\n                    parent: this\r\n                }\r\n            }\r\n        ]\r\n\r\n        this.root.app.create().then();\r\n    }\r\n}\r\n\r\n(customElements.get(\"partarum-cookie-header\") === undefined) && customElements.define(\"partarum-cookie-header\", HTMLCookieHeader);\r\n\r\nexport {HTMLCookieHeader};", "import {HTMLPartarumElement} from \"../HTMLPartarumElement.js\";\r\n\r\nclass HTMLCookieMain extends HTMLPartarumElement {\r\n\r\n    constructor(config){\r\n        super(config, \"main\");\r\n    }\r\n}\r\n\r\n(customElements.get(\"partarum-cookie-main\") === undefined) && customElements.define(\"partarum-cookie-main\", HTMLCookieMain);\r\n\r\nexport {HTMLCookieMain};", "import {HTMLPartarumElement} from \"../HTMLPartarumElement.js\";\r\n\r\nclass HTMLCookieFooter extends HTMLPartarumElement {\r\n\r\n    constructor(config, name, dom){\r\n        super(config, \"footer\");\r\n\r\n        this.root.dom = dom;\r\n\r\n        this.className = \"media-box-row\";\r\n\r\n        let sessionCookieStatus = window.sessionStorage.getItem(\"cookies_accepted\");\r\n\r\n        const COOKIES_ACCEPTED = (!((sessionCookieStatus === null) || (sessionCookieStatus === false)));\r\n\r\n        this.root.app.themes = [\r\n            {\r\n                footer: {\r\n                    config: {\r\n                        section_left: {\r\n                            _attributes: {\r\n                                class: \"media-box-row\"\r\n                            },\r\n                            button_config: {\r\n                                _attributes: {\r\n                                    text: \"Cookie-Einstellungen\"\r\n                                }\r\n                            }\r\n                        },\r\n                        section_right: {\r\n                            _attributes: {\r\n                                class: \"media-box-row\"\r\n                            },\r\n                            button_essential: {\r\n                                _attributes: {\r\n                                    type: \"button\",\r\n                                    id: \"cookieDisable\",\r\n                                    text: \"Nicht akzeptieren\",\r\n                                    addEvent: {\r\n                                        type: \"click\",\r\n                                        topic: \"CookieBanner\",\r\n                                        theme: \"disableCookie\",\r\n                                        name: \"disableCookie_click\",\r\n                                        doThat: ()=> {\r\n\r\n                                            config.cookies.disable.doThat();\r\n\r\n                                            this.root.dom.get(\"CookieBanner\").classList.toggle(\"zero\");\r\n                                        }\r\n                                    }\r\n                                }\r\n                            },\r\n                            button_all: {\r\n                                _attributes: {\r\n                                    type: \"button\",\r\n                                    id: \"cookieActive\",\r\n                                    text: (COOKIES_ACCEPTED === false) ? \"Alle akzeptieren\" : \"Schlie\u00DFen\",\r\n                                    addEvent: {\r\n                                        type: \"click\",\r\n                                        topic: \"CookieBanner\",\r\n                                        theme: \"activeCookie\",\r\n                                        name: \"activeCookie_click\",\r\n                                        targetID: \"cookieActive\",\r\n                                        doThat: (e)=>{\r\n\r\n                                            if(Partarum.System.Cookie.accepted === false){\r\n\r\n                                                this.setCookies(config, \"active\", e);\r\n\r\n                                            }\r\n\r\n                                            this.root.dom.get(\"CookieBanner\").classList.toggle(\"zero\");\r\n\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    parent: this\r\n                }\r\n            }\r\n        ];\r\n\r\n        this.root.app.create().then();\r\n    }\r\n\r\n    // ! den Inhalt der Funktion sp\u00E4ter noch auslagern !!!\r\n\r\n    setCookies(config, action, e){\r\n\r\n        Partarum.System.Cookie.init().then((cookieTest)=>{\r\n\r\n            if(cookieTest.status === true) {\r\n\r\n                switch (action) {\r\n\r\n                    case \"active\":\r\n\r\n                        Partarum.System.Cookie.toAgree(config).then(()=>{\r\n\r\n                            this.root.dom.get(\"shadowBox\").getElementById(\"cookieActive\").innerText = \"Schlie\u00DFen\";\r\n                        });\r\n\r\n                        break;\r\n                    case \"disable\":\r\n\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n(customElements.get(\"partarum-cookie-footer\") === undefined) && customElements.define(\"partarum-cookie-footer\", HTMLCookieFooter);\r\n\r\nexport {HTMLCookieFooter};", "import {HTMLPartarumElement} from \"../HTMLPartarumElement.js\";\r\nimport {HTMLCookieBody} from \"./HTMLCookieBody.js\";\r\nimport {HTMLCookieHeader} from \"./HTMLCookieHeader.js\";\r\nimport {HTMLCookieMain} from \"./HTMLCookieMain.js\";\r\nimport {HTMLCookieFooter} from \"./HTMLCookieFooter.js\";\r\n\r\nclass HTMLCookieBanner extends HTMLPartarumElement {\r\n\r\n    constructor(config, dom){\r\n        super(config, \"banner\");\r\n\r\n        this.id = \"PartarumCookieBanner\";\r\n\r\n        this.className = \"single-box-center\";\r\n\r\n        this.root.config = config;\r\n\r\n        this.root.dom = dom;\r\n\r\n        this.loadBody().then();\r\n    }\r\n\r\n    async loadBody(){\r\n\r\n        await this.setBody();\r\n        await this.setHeader();\r\n        await this.setMain();\r\n        await this.setFooter();\r\n    }\r\n\r\n    setBody(){\r\n\r\n        return new Promise((resolve)=>{\r\n\r\n            this.root.dom.add(\"CookieBody\", new HTMLCookieBody(this.root.config, \"body\"), null);\r\n            this.appendChild(this.root.dom.get(\"CookieBody\"));\r\n\r\n            resolve(true);\r\n        });\r\n\r\n    }\r\n\r\n    setHeader(){\r\n\r\n        return new Promise((resolve)=>{\r\n\r\n            this.root.dom.add(\"CookieHeader\", new HTMLCookieHeader(this.root.config, \"header\"), null);\r\n            this.root.dom.add(\"CookieBody\", this.root.dom.get(\"CookieHeader\"), \"append\");\r\n\r\n            resolve(true);\r\n        });\r\n\r\n    }\r\n\r\n    setMain(){\r\n\r\n        return new Promise((resolve)=>{\r\n\r\n            this.root.dom.add(\"CookieMain\", new HTMLCookieMain(this.root.config, \"main\"), null);\r\n            this.root.dom.add(\"CookieBody\", this.root.dom.get(\"CookieMain\"), \"append\");\r\n\r\n            resolve(true);\r\n        });\r\n\r\n    }\r\n\r\n    setFooter(){\r\n\r\n        return new Promise((resolve)=>{\r\n\r\n            this.root.dom.add(\"CookieFooter\", new HTMLCookieFooter(this.root.config, \"footer\", this.root.dom), null);\r\n            this.root.dom.add(\"CookieBody\", this.root.dom.get(\"CookieFooter\"), \"append\");\r\n\r\n            resolve(true);\r\n        });\r\n\r\n    }\r\n}\r\n\r\n(customElements.get(\"partarum-cookie-banner\") === undefined) && customElements.define(\"partarum-cookie-banner\", HTMLCookieBanner);\r\n\r\nexport {HTMLCookieBanner};", "import {HTMLPartarumHost} from \"./HTMLPartarumHost.js\";\r\nimport {HTMLCookieBanner} from \"./PartarumCookie/HTMLCookieBanner.js\";\r\n\r\nclass HTMLCookie extends HTMLPartarumHost{\r\n\r\n    constructor(config){\r\n\r\n        const LOG = Partarum.Log.create(\"HTMLCookie\", \"construct\");\r\n\r\n        LOG.add(\"HTMLCookie\", \"construct\", \"start\");\r\n\r\n\r\n        super(config, \"partarum-cookie\");\r\n\r\n        this.root.status = {\r\n            cookieBanner: false,\r\n            cookiesActivated: false,\r\n            cookiesAccepted: false,\r\n            cookiesInUse: false\r\n        }\r\n\r\n        Partarum.System.Cookie.init().then((result)=>{\r\n\r\n            Partarum.Log.add(\"HTMLCookie\", \"construct\", \"after Cookie.init()\");\r\n\r\n            const COOKIE_TEST = result;\r\n\r\n            const COOKIE_STATUS_ACTIVATED = COOKIE_TEST.status;\r\n\r\n            const COOKIE_STATUS_ACCEPTED = COOKIE_TEST.accepted;\r\n\r\n            const COOKIE_STATUS_INUSE = COOKIE_TEST.inUse;\r\n\r\n            this.root.status.cookiesActivated = COOKIE_STATUS_ACTIVATED;\r\n\r\n            this.root.status.cookiesAccepted = COOKIE_STATUS_ACCEPTED;\r\n\r\n            this.root.status.cookiesInUse = COOKIE_STATUS_INUSE;\r\n\r\n            if(COOKIE_STATUS_ACTIVATED === true) {\r\n\r\n                Partarum.Log.add(\"HTMLCookie\", \"construct\", \"activated === true\");\r\n\r\n                this.id = \"partarumCookie\";\r\n\r\n                this.loadStyle({\r\n\r\n                    link: \"/Partarum/PartarumCSS/PartarumElements/cookieBanner.css\",\r\n                    style: document.querySelectorAll('style[id*=\"fa\"]')\r\n\r\n                }).then(() => {\r\n\r\n                    this.root.app.themes = [\r\n                        {\r\n                            header: {\r\n                                config: {\r\n                                    i: {\r\n                                        _attributes: {\r\n                                            id: \"partarumCookieIcon\",\r\n                                            class: \"fa-duotone fa-cookie-bite fa-flip fa-3dicon\",\r\n                                            style: (this.closest(\"#partarumBottomBarBody\") !== null) ? `\r\n                                                position: unset;\r\n                                                bottom: unset;\r\n                                                left: unset;\r\n                                            ` : \"\",\r\n                                            addEvent: {\r\n                                                type: \"click\",\r\n                                                topic: \"CookieBanner\",\r\n                                                theme: \"CookieIcon\",\r\n                                                name: \"CookieIcon_click\",\r\n                                                targetID: \"cookieIcon\",\r\n                                                bubble: true,\r\n                                                doThat: (ev) => {\r\n\r\n                                                    console.dir(\"CookieIcon - clicked\");\r\n\r\n                                                    console.dir(this.root.dom.get(\"CookieBanner\"));\r\n\r\n                                                    this.root.dom.get(\"CookieBanner\").classList.toggle(\"zero\");\r\n\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                },\r\n                                parent: this.root.dom.get(\"shadowBox\")\r\n                            }\r\n                        }\r\n                    ];\r\n\r\n                    this.root.app.create(() => {\r\n\r\n                    }).then(() => {\r\n\r\n                        this.setCookieBanner(config).then(() => {\r\n\r\n                            (COOKIE_STATUS_ACCEPTED === true) && Partarum.System.Cookie.toAgree(config, true);\r\n\r\n                        });\r\n                    });\r\n\r\n                });\r\n            }\r\n        }).then(()=>{\r\n\r\n        });\r\n    }\r\n\r\n    async setCookieBanner(config){\r\n\r\n        const LOG = Partarum.Log.create(\"HTMLCookie\", \"setCookieBanner\");\r\n\r\n        LOG.add(\"HTMLCookie\", \"setCookieBanner\", \"start\");\r\n\r\n        await this.loadCookieElement(config);\r\n    }\r\n\r\n    loadCookieElement(config){\r\n\r\n        return new Promise((resolve)=>{\r\n\r\n            this.root.dom.add(\"CookieBanner\", new HTMLCookieBanner(config, this.root.dom), null);\r\n\r\n            if(this.root.status.cookiesAccepted === true) {\r\n\r\n                this.root.dom.get(\"CookieBanner\").classList.toggle(\"zero\");\r\n            }\r\n\r\n            this.root.dom.add(\"shadowBox\", this.root.dom.get(\"CookieBanner\"), \"append\");\r\n\r\n            resolve(true);\r\n        });\r\n\r\n    }\r\n}\r\n\r\n(customElements.get(\"partarum-cookie\") === undefined) && customElements.define(\"partarum-cookie\", HTMLCookie);\r\n\r\nexport {HTMLCookie};", "import {HTMLPartarumHost} from \"./HTMLPartarumHost.js\";\r\n\r\nclass HTMLRegistrationBox extends HTMLPartarumHost {\r\n\r\n    constructor(config) {\r\n        super(config, \"partarum-registration-box\");\r\n\r\n    }\r\n\r\n    connectedCallback(){\r\n        super.connectedCallback();\r\n\r\n        this.loadElements().then();\r\n    }\r\n\r\n   async loadElements(){\r\n\r\n       let theme = this.root.config?.theme ?? \"small\";\r\n\r\n       let level = this.root.config?.level ?? 4; // ! max. 6\r\n\r\n       await this.setHeadline();\r\n\r\n       await this.setForm();\r\n   }\r\n\r\n   setHeadline(){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            let h = document.createElement(\"h\" + this.root.config.level.toString());\r\n\r\n            h.appendChild(document.createTextNode(this.root.config?.surface?.headline?.text ?? \"Registrierung\"));\r\n\r\n            this.initAddElement(\"headline\", h);\r\n        });\r\n   }\r\n\r\n   setForm(){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n\r\n        });\r\n   }\r\n}\r\n\r\n(customElements.get(\"partarum-registration-box\") === undefined) && customElements.define(\"partarum-registration-box\", HTMLRegistrationBox);\r\n\r\nexport {HTMLRegistrationBox};", "import {HTMLCardBox} from \"./HTMLCardBox.js\";\nimport {HTMLNavBar} from \"./HTMLNavBar.js\";\nimport {HTMLBottomBar} from \"./HTMLBottomBar.js\";\nimport {HTMLCookie} from \"./HTMLCookie.js\";\nimport {HTMLRegistrationBox} from \"./HTMLRegistrationBox.js\";\n\n\nclass HTML {\n\n    static BottomBar = HTMLBottomBar;\n\n    static createBottomBar(...args) {\n        return new HTMLBottomBar(...args);\n    }\n\n    static CardBox = HTMLCardBox;\n\n    static createCardBox(...args) {\n        return new HTMLCardBox(...args);\n    }\n\n    static CookieBanner = HTMLCookie;\n\n    static createCookieBanner(...args) {\n        return new HTMLCookie(...args);\n    }\n\n    static NavBar = HTMLNavBar;\n\n    static createNavBar(...args) {\n        return new HTMLNavBar(...args);\n    }\n\n    static RegistrationBox = HTMLRegistrationBox;\n\n    static createRegistrationBox(...args) {\n        return new HTMLRegistrationBox(...args);\n    }\n\n\n    static counter = 0;\n\n    static confirmLink(config) {\n       \n        const {href,confirm,title,options} = config;\n\n        [\"href\", \"confirm\", \"title\", \"options\"].forEach((key)=>Reflect.deleteProperty(config, key));\n\n        this.counter++;\n\n        return {\n            href: \"javascript:void(0)\",\n            title: title || \"Link\",\n            addEvent: {\n                type: \"click\",\n                topic: \"ConfirmLink\",\n                theme: \"confirmLink_click\",\n                name: \"confirmLink_click_\" + this.counter,\n                targetID: \"confirmLink_\" + this.counter,\n                doThat: (ev) => {\n\n                    Partarum.Validation.confirmLink(confirm, href, options);\n                }\n            },\n            ...config\n        };\n    }\n\n    static getSafeElementById(id, timeout = 250){\n\n        return new Promise((resolve) => {\n\n            Partarum.HTML.getSafeElement(\"byID\", id, timeout).then((element) => {\n\n                resolve(element);\n            });\n        });\n    }\n\n    static getSafeElementByQueryString(queryString, timeout = 250) {\n\n        return new Promise((resolve) => {\n\n            Partarum.HTML.getSafeElement(\"byQuery\", queryString, timeout).then((element) => {\n\n                resolve(element);\n            });\n        });\n    }\n\n    static getSafeElement(type, needle, timeout = 250) {\n\n        return new Promise((resolve, reject) => {\n\n            console.dir(needle);\n\n            let element = (type === \"byID\") ? document.getElementById(needle) : document.querySelector(needle);\n\n            let intID;\n\n            let counter = 0;\n\n            let funcBreak = () => {\n\n                if((element === null) && (counter < 1000)){\n\n                    element = (type === \"byID\") ? document.getElementById(needle) : document.querySelector(needle);\n\n                    if(element === null){\n\n                        counter++;\n\n                        funcBreak();\n\n                    } else {\n\n                        resolve(element);\n                    }\n\n                } else {\n\n                    clearInterval(intID);\n                    resolve(element);\n                }\n            };\n\n            if(element === null){\n\n                intID = setInterval(funcBreak, timeout);\n\n            } else {\n\n                resolve(element);\n            }\n        })\n    }\n}\n\nconst testElement = class extends HTMLElement {\n\n    constructor(attr) {\n        super();\n\n        console.log(\"testElement: \");\n        console.dir(attr);\n    }\n};\n\nclass testElement2 extends HTMLElement {\n\n    constructor(attr) {\n        super();\n\n        console.log(\"testElement2: \");\n        console.dir(attr);\n    }\n}\n\ncustomElements.define(\"test-element\", testElement);\ncustomElements.define(\"test-element2\", testElement2);\n\nexport {HTML, HTMLBottomBar, HTMLCardBox, HTMLCookie, HTMLNavBar, HTMLRegistrationBox, testElement, testElement2};"],
  "mappings": "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",
  "names": ["key"]
}
