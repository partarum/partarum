{
  "version": 3,
  "sources": ["../PartarumJS/ClientSide/Cache/PreloadCache.js", "../PartarumJS/ClientSide/HTML/HTMLPreload.js", "../PartarumJS/ClientSide/Helper/Hex.js", "../PartarumJS/ClientSide/Cache/TopicCache.js", "../PartarumJS/ClientSide/Cache/CacheStorage/CacheStorage.js", "../PartarumJS/ClientSide/Cache/PartarumCache.js", "../PartarumJS/ClientSide/Cache/CacheBase.js", "../PartarumJS/ClientSide/Cache/WorkingCache.js", "../PartarumJS/ClientSide/Cache/ImportCache.js", "../PartarumJS/ClientSide/Cache/HTMLCache.js", "../PartarumJS/ClientSide/Cache/DOMCache.js", "../PartarumJS/ClientSide/Cache/EventCache.js", "../PartarumJS/ClientSide/Cache/CounterCache.js", "../PartarumJS/ClientSide/Cache/SimpleCache.js", "../PartarumJS/ClientSide/Cache/IndexCache.js", "../PartarumJS/ClientSide/Cache/PlotCache.js", "../PartarumJS/ClientSide/Cache/Cache.js", "../PartarumJS/ClientSide/Workshop/Log.js", "../PartarumJS/ClientSide/Validation/Validation.js", "../PartarumJS/ClientSide/Validation/ValidObject.js", "../PartarumJS/ClientSide/Helper/Counter.js", "../PartarumJS/ClientSide/Workshop/Helper.js", "../PartarumJS/ClientSide/Workshop/ViewKit.js", "../PartarumJS/ClientSide/Workshop/Loader.js", "../PartarumJS/ClientSide/Workshop/Workbox.js", "../PartarumJS/ClientSide/HTML/HTMLPartarumElement.js", "../PartarumJS/ClientSide/HTML/HTMLPartarumHost.js", "../PartarumJS/ClientSide/HTML/PartarumCardBox/HTMLCardBoxHeader.js", "../PartarumJS/ClientSide/HTML/PartarumCardBox/HTMLCardBoxMenu.js", "../PartarumJS/ClientSide/HTML/PartarumCardBox/HTMLCardThemeBox.js", "../PartarumJS/ClientSide/HTML/PartarumCardBox/HTMLCardTopicBox.js", "../PartarumJS/ClientSide/HTML/PartarumCardBox/HTMLCardTopicBody.js", "../PartarumJS/ClientSide/HTML/PartarumCardBox/HTMLCardBoxObject.js", "../PartarumJS/ClientSide/HTML/PartarumCardBox/HTMLCardBoxBody.js", "../PartarumJS/ClientSide/Draw/DrawElementAnalyzer.js", "../PartarumJS/ClientSide/Draw/Plot.js", "../PartarumJS/ClientSide/HTML/PartarumCardBox/HTMLCardDrawBox.js", "../PartarumJS/ClientSide/HTML/HTMLCardBox.js", "../PartarumJS/ClientSide/HTML/PartarumNavBar/HTMLMenuHamburger.js", "../PartarumJS/ClientSide/HTML/HTMLLayoutElementAnalyzer.js", "../PartarumJS/ClientSide/HTML/PartarumNavBar/HTMLNavBarBody.js", "../PartarumJS/ClientSide/HTML/HTMLNavBar.js", "../PartarumJS/ClientSide/HTML/PartarumBottomBar/HTMLBottomBarBody.js", "../PartarumJS/ClientSide/HTML/HTMLBottomBar.js", "../PartarumJS/ClientSide/HTML/PartarumCookie/HTMLCookieBody.js", "../PartarumJS/ClientSide/HTML/PartarumCookie/HTMLCookieHeader.js", "../PartarumJS/ClientSide/HTML/PartarumCookie/HTMLCookieMain.js", "../PartarumJS/ClientSide/HTML/PartarumCookie/HTMLCookieFooter.js", "../PartarumJS/ClientSide/HTML/PartarumCookie/HTMLCookieBanner.js", "../PartarumJS/ClientSide/HTML/HTMLCookie.js", "../PartarumJS/ClientSide/HTML/HTMLRegistrationBox.js", "../PartarumJS/ClientSide/HTML/HTML.js", "../PartarumJS/ClientSide/Events/MediaBoxEvent.js", "../PartarumJS/ClientSide/Design/Barrier/Picture/PictureMenu.js", "../PartarumJS/ClientSide/Design/MediaBox.js", "../PartarumJS/ClientSide/Design/MediaBox/MediaBoxPicture.js", "../PartarumJS/ClientSide/Design/Design.js", "../PartarumJS/ClientSide/System/Cookie.js", "../PartarumJS/ClientSide/System/System.js", "../PartarumJS/ClientSide/Draw/Plotter.js", "../PartarumJS/ClientSide/Draw/Draw.js", "../PartarumJS/ClientSide/Events/Events.js", "../PartarumJS/ClientSide/Import/Import.js", "../PartarumJS/ClientSide/Workshop/Workshop.js", "../PartarumJS/ClientSide/System/ClientSetting.js", "../PartarumJS/ClientSide/Partarum.js"],
  "sourcesContent": ["class PreloadCache{\r\n\r\n    static classes = {\r\n        HTML: \"Partarum/PartarumJS/ClientSide/HTML/HTML.js\",\r\n        Design: \"Partarum/PartarumJS/ClientSide/Design/Design.js\"\r\n        //HTMLBottomBar: \"Partarum/PartarumJSBuild/HTMLBottomBar.js\",\r\n       // HTMLCardBox: \"Partarum/PartarumJSBuild/HTMLCardBox.js\",\r\n        //HTMLCookie: \"Partarum/PartarumJSBuild/HTMLCookie.js\",\r\n        //HTMLNavBar: \"Partarum/PartarumJSBuild/HTMLNavBar.js\"\r\n    }\r\n}\r\n\r\nexport {PreloadCache};", "import {PreloadCache} from \"../Cache/PreloadCache.js\";\r\n\r\nclass HTMLPreload {\r\n\r\n    constructor() {\r\n\r\n        // als Promise gestalten !!!\r\n\r\n        this.head = document.getElementsByTagName(\"head\")[0];\r\n\r\n        this.preloadClasses = PreloadCache.classes;\r\n\r\n\r\n\r\n        /*\r\n            <link rel=\"preload\" crossorigin=\"anonymous\" href=\"https://partarum.de/module/js/Plot\" as=\"script\">\r\n\r\n            <script type=\"module\" crossorigin=\"anonymous\" src=\"https://partarum.de/module/js/Plot\" ></script>\r\n         */\r\n    }\r\n\r\n    setLinks(){\r\n\r\n        for(let classes of Object.keys(this.preloadClasses)){\r\n\r\n            //console.dir(classes);\r\n\r\n            let link = document.createElement(\"link\");\r\n            link.setAttribute(\"rel\", \"modulepreload\");\r\n            link.setAttribute(\"href\", this.preloadClasses[classes]);\r\n\r\n            this.head.appendChild(link);\r\n        }\r\n    }\r\n\r\n    static init(){\r\n\r\n        return new Promise(resolve =>{\r\n\r\n            let preload = new HTMLPreload();\r\n\r\n            preload.setLinks();\r\n\r\n            resolve(true);\r\n\r\n        });\r\n    }\r\n}\r\n\r\nexport {HTMLPreload};", "const HEX_START = 0x00000000000001;\r\n\r\nconst HEX_END = 0x1FFFFFFFFFFFFF;\r\n\r\nconst HEX_PERMUT = 87178291200;\r\n\r\nclass Hex {\r\n\r\n    static lastID = HEX_START;\r\n\r\n    static getString(hex = 0){\r\n\r\n        return \"0x\" + hex.toString(16).padStart(14, \"0\");\r\n    }\r\n\r\n    static getInt(hex){\r\n\r\n        return parseInt(hex, 16);\r\n    }\r\n\r\n    static createIndex(global = false, startNumber = (global === false) ? HEX_START : ++Hex.lastID){\r\n\r\n        return new HexIndex(startNumber);\r\n    }\r\n\r\n}\r\n\r\nclass HexIndex {\r\n\r\n    lastHex = HEX_START;\r\n\r\n    constructor(startNumber) {\r\n        this.lastHex = startNumber;\r\n    }\r\n\r\n    * nextID(type){\r\n\r\n        while(true) {\r\n\r\n            this.lastHex++;\r\n\r\n            Hex.lastID = this.lastHex;\r\n\r\n            yield (type === false) ? this.lastHex : Hex.getString(this.lastHex);\r\n        }\r\n    }\r\n\r\n    next(type = false){\r\n\r\n        return this.nextID(type).next().value;\r\n    }\r\n}\r\n\r\nexport {Hex};", "// topicMap = map\r\n// themeMap = map\r\n\r\nclass TopicCache {\r\n\r\n    constructor() {\r\n\r\n        this.addTopic(\"withoutTopic\");\r\n\r\n    }\r\n\r\n    addTopic(topic){\r\n\r\n        //console.dir(topic);\r\n\r\n        this[topic] ??= new TopicObject(topic);\r\n        this[topic].themeCache  ??= new ThemeCache();\r\n    }\r\n\r\n    hasTopic(topic){\r\n        return this.hasOwnProperty(topic);\r\n    }\r\n\r\n    getTopic(){\r\n\r\n    }\r\n\r\n    removeTopic(){\r\n\r\n    }\r\n\r\n    addTheme(topic = \"withoutTopic\", theme){\r\n\r\n        //console.dir(topic);\r\n        //console.dir(this);\r\n        //console.dir(this[topic]);\r\n\r\n        if(!(theme in this[topic].themeCache)){\r\n\r\n            this[topic].themeCache[theme] = new ThemeObject();\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getTheme(topic, theme){\r\n\r\n        return this[topic].getTheme(theme);\r\n    }\r\n\r\n    hasTheme(){\r\n\r\n    }\r\n\r\n    removeTheme(){\r\n\r\n    }\r\n\r\n\r\n    addTopicMethode(topic, theme, mapName, methodeNameArray){\r\n\r\n\r\n    }\r\n\r\n    setToMap(topic, theme, key, value, mapName){    // Cookie, init,\r\n\r\n        let map = this[topic].themeCache[theme][mapName];\r\n\r\n        map.set(key, value);\r\n\r\n        return this.hasIntoMap(topic, theme, mapName, key);\r\n    }\r\n\r\n    getFromMap(topic, theme, key, mapName){\r\n\r\n        return (this.hasIntoMap(topic, theme, mapName, key)) ? this[topic].themeCache[theme][mapName].get(key) : null;\r\n    }\r\n\r\n    getAllFromMap(topic, theme, mapName){\r\n\r\n        return this[topic].themeCache[theme][mapName];\r\n    }\r\n\r\n    hasIntoMap(topic,theme, mapName, key){\r\n\r\n        return this[topic].themeCache[theme][mapName].has(key);\r\n    }\r\n\r\n    removeFromMap(name, key){\r\n\r\n        return this.themeCache[name].delete(key);\r\n    }\r\n}\r\n\r\nclass ThemeCache {\r\n\r\n    addTheme(theme){\r\n\r\n    }\r\n\r\n    getTheme(theme){\r\n\r\n        return this[theme].entries();\r\n    }\r\n\r\n    getThemeMap(){\r\n\r\n    }\r\n}\r\n\r\nclass ThemeMap extends Map{\r\n\r\n}\r\n\r\nclass ThemeObject {\r\n\r\n    setMethod(methodName, callback){\r\n\r\n        this[methodName] = callback;\r\n    }\r\n\r\n    addThemeMap(mapName){\r\n\r\n        let mapArray = (Array.isArray(mapName)) ? mapName : [mapName];\r\n\r\n        for(let name of mapArray) {\r\n\r\n            this[name] = new Map();\r\n        }\r\n    }\r\n}\r\n\r\nclass TopicObject {\r\n\r\n    constructor(name){\r\n        this.topicName = name;\r\n    }\r\n\r\n    addTheme(theme){\r\n\r\n        this.themeCache ??= new ThemeCache();\r\n\r\n        //if(Reflect.has(this.themeCache))\r\n\r\n        this.themeCache.addTheme(theme);\r\n    }\r\n\r\n    getTheme(theme){\r\n\r\n        return this.themeCache.getTheme(theme);\r\n    }\r\n\r\n    hasMap(){\r\n\r\n    }\r\n\r\n    removeMap(){\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport {TopicCache};", "import {Hex} from \"../../Helper/Hex.js\";\nimport {TopicCache} from \"../TopicCache.js\";\n\nclass CacheStorage extends WeakMap {\n\n    topicIDCache = new Map();\n\n    initiatorIDCache = new Map();\n\n    idInitiatorCache = new Map();\n\n    initiatorIDs = Hex.createIndex();\n\n    cacheObjects = {};\n\n    hex = Hex.createIndex();\n\n    constructor(){\n\n        super();\n    }\n\n    setInitiator(name){\n\n        //console.dir(name);\n\n        if(!this.initiatorIDCache.has(name)){\n\n            const ID = this.initiatorIDs.next(true);\n\n            this.initiatorIDCache.set(name, ID);\n\n            this.idInitiatorCache.set(ID, name);\n\n            if(!(name in this.cacheObjects)){\n                this.cacheObjects[name] = new TopicCache();\n            }\n\n            super.set(this.cacheObjects[name], this.initiatorIDCache.get(name));\n\n        }\n\n        return this.initiatorIDCache.get(name);\n    }\n\n    setTopic(topic, ID){\n\n        //console.dir(topic);\n\n        const NAME = this.idInitiatorCache.get(ID);\n\n        this.cacheObjects[NAME].addTopic(topic);\n\n        this.topicIDCache.set(ID, topic);\n\n        return this.cacheObjects[NAME];\n    }\n\n    hasTopic(topic){\n\n        return ((this.initiatorIDCache.has(topic)) || (this.idInitiatorCache.has(topic)));\n    }\n\n    getTopic(topic){\n\n        return this.cacheObjects[topic];\n    }\n\n    setTheme(ID, topic, theme){\n\n        //console.dir([ID, topic, theme]);\n\n        const INITIATOR_NAME = this.idInitiatorCache.get(ID);\n\n        return this.cacheObjects[INITIATOR_NAME].addTheme(topic, theme);\n    }\n\n\n    setToMap(topic, theme, mapKey, mapValue, methodMapName, ID){\n\n        const INITIATOR_NAME = this.idInitiatorCache.get(ID);\n\n        this.cacheObjects[INITIATOR_NAME].setToMap(topic, theme, mapKey, mapValue, methodMapName);\n    }\n\n    getFromMap(topic, theme, key, methodMapName, ID){\n\n        const INITIATOR_NAME = this.idInitiatorCache.get(ID);\n\n        return this.cacheObjects[INITIATOR_NAME].getFromMap(topic, theme, key, methodMapName)\n    }\n\n    hasIntoMap(topic, theme, methodMapName, key, ID){\n\n        const INITIATOR_NAME = this.idInitiatorCache.get(ID);\n\n        return this.cacheObjects[INITIATOR_NAME].hasIntoMap(topic, theme, methodMapName, key);\n    }\n\n    getAllFromMap(topic, theme, methodMapName, ID){\n\n        const INITIATOR_NAME = this.idInitiatorCache.get(ID);\n\n        return this.cacheObjects[INITIATOR_NAME].getAllFromMap(topic, theme, methodMapName)\n    }\n\n    addThemeMap(ID, topic, theme, mapName){\n\n        const INITIATOR_NAME = this.idInitiatorCache.get(ID);\n\n        this.cacheObjects[INITIATOR_NAME][topic].themeCache[theme].addThemeMap(mapName);\n    }\n\n    get(map){\n\n        return super.get(map);\n    \n    }\n\n    has(map){\n        return super.has(map);\n    }\n}\n\nexport {CacheStorage};", "class PartarumCache {\r\n\r\n    static start(){\r\n        /*\r\n                Jeder Partarum - Prozess muss gepr\u00FCft werden, ob der vorherige schon fertig ist !!!!\r\n                Ansonsten kommt es zu fehlerhaften DOM - Aufstellungen!!!\r\n         */\r\n\r\n        PartarumCache.status ??= 0;\r\n\r\n        if(PartarumCache.status !== 1){\r\n            PartarumCache.status = 1;\r\n        }\r\n    }\r\n\r\n    static setCallback(c){\r\n\r\n        PartarumCache.callback ??= [];\r\n        PartarumCache.callback.push(c);\r\n    }\r\n\r\n    static getCallback(){\r\n        return PartarumCache.callback;\r\n    }\r\n\r\n    static setRound(){\r\n\r\n        if(!PartarumCache.roundCounter){\r\n\r\n            PartarumCache.roundCounter = 1;\r\n        } else {\r\n\r\n            PartarumCache.roundCounter++;\r\n        }\r\n    }\r\n\r\n    static getRound(){\r\n\r\n        return PartarumCache.roundCounter;\r\n    }\r\n\r\n    static setStatus(num){\r\n        PartarumCache.status = num;\r\n\r\n        if(PartarumCache.status === 1){\r\n            while(PartarumCache.status === 1){\r\n                console.log(\"status = 1\");\r\n            }\r\n        }\r\n    }\r\n\r\n    static setSurfacePaths(pathObject){\r\n        PartarumCache.surfacePaths = pathObject;\r\n    }\r\n\r\n\r\n    static setTemplates(obj){\r\n        PartarumCache.templates = obj;\r\n    }\r\n\r\n    static getTemplate(temp){\r\n        return PartarumCache.templates[temp];\r\n    }\r\n\r\n    static setTemplatePath(templateName, templatePath){\r\n\r\n\r\n        PartarumCache.templatePaths ??= [];\r\n        PartarumCache.templatePaths[templateName] = templatePath;\r\n    }\r\n\r\n    static isTemplate(option){\r\n        PartarumCache.template = option === true;\r\n    }\r\n}\r\n\r\nexport {PartarumCache};", "\r\nclass CacheBase {\r\n\r\n    static init(status = false) {\r\n\r\n        this.status = status;\r\n\r\n        (status === true) && this.update();\r\n\r\n        return this.status;\r\n    }\r\n\r\n    static update(){\r\n\r\n        let topicKeys = this.newcomerTopicSet.values();\r\n\r\n        for(let topic of topicKeys) {\r\n\r\n            this.topicSet.add(topic);\r\n\r\n            let themeKeys = this.newComerThemesMap.keys();\r\n\r\n            for(let theme of themeKeys){\r\n\r\n                this.themeMap.set(theme, topic);\r\n\r\n                for(let mapName of this.themeMapNames){\r\n\r\n                    Partarum.Cache.CacheStorage.addThemeMap(this.initiatorID, topic, theme, mapName);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.status = false;\r\n\r\n        this.newcomerTopicSet.clear();\r\n        this.newComerThemesMap.clear();\r\n\r\n    }\r\n\r\n\r\n    static create(topic, theme){\r\n\r\n        this.topicSet ??= new Set();\r\n\r\n        this.themeMap ??= new Map();\r\n\r\n        this.initiatorID = Partarum.Cache.CacheStorage.setInitiator(this.name);\r\n\r\n        this.setTopic(topic);\r\n\r\n        return this.setTheme(topic, theme);\r\n    }\r\n\r\n    static setTopic(topic){\r\n\r\n        this.newcomerTopicSet ??= new Set();\r\n\r\n        if(this.hasTopic(topic) === false){\r\n\r\n            Partarum.Cache.CacheStorage.setTopic(topic, this.initiatorID);\r\n\r\n            this.newcomerTopicSet.add(topic);\r\n\r\n        } else {\r\n\r\n            (this.topicSet.has(topic)) && this.newcomerTopicSet.add(topic);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static hasTopic(topic){\r\n\r\n        return Partarum.Cache.CacheStorage.hasTopic(topic);\r\n    }\r\n\r\n    static setTheme(topic = \"withoutTopic\", theme){\r\n\r\n        //console.dir([topic, theme, this.initiatorID]);\r\n\r\n        this.newComerThemesMap ??= new Map();\r\n\r\n        let res = Partarum.Cache.CacheStorage.setTheme(this.initiatorID, topic, theme);\r\n\r\n        (res) && this.newComerThemesMap.set(theme, topic);\r\n\r\n        return res;\r\n    }\r\n\r\n    static getTheme(topic, theme){\r\n\r\n        return this.topicCache[topic].getTheme(theme);\r\n    }\r\n\r\n    static addCacheMethode(mapName, methodNamesArray){\r\n\r\n        this.themeMapNames ??= [];\r\n\r\n        if(!this.themeMapNames.includes(mapName)) {\r\n\r\n            this.themeMapNames.push(mapName);\r\n        }\r\n\r\n\r\n        let methodTypes = [\"set\", \"get\", \"has\", \"remove\"];\r\n\r\n        if(methodNamesArray.length === methodTypes.length) {\r\n\r\n            for (let number in methodTypes) {\r\n\r\n                let callbackObject = null;\r\n\r\n                switch (methodTypes[number]) {\r\n\r\n                    case \"set\":\r\n\r\n                        callbackObject = {[methodNamesArray[number]]: (topic, theme, mapKey, mapValue) => {\r\n\r\n                                let methodMapName = this[methodNamesArray[number]].mapName;\r\n\r\n                                Partarum.Cache.CacheStorage.setToMap(topic, theme, mapKey, mapValue, methodMapName, this.initiatorID);\r\n                            }\r\n                        };\r\n\r\n                        callbackObject[methodNamesArray[number]].mapName = mapName;\r\n\r\n                        break;\r\n                    case \"get\":\r\n\r\n                        callbackObject = {[methodNamesArray[number]]: (topic, theme, key) => {\r\n\r\n                                let methodMapName = this[methodNamesArray[number]].mapName;\r\n\r\n                                return Partarum.Cache.CacheStorage.getFromMap(topic, theme, key, methodMapName, this.initiatorID);\r\n                            }\r\n                        };\r\n\r\n                        callbackObject[methodNamesArray[number]].mapName = mapName;\r\n                        break;\r\n                    case \"has\":\r\n\r\n                        callbackObject = {[methodNamesArray[number]]: (topic, theme, key) => {\r\n\r\n                                let methodMapName = this[methodNamesArray[number]].mapName;\r\n\r\n                                return Partarum.Cache.CacheStorage.hasIntoMap(topic, theme, methodMapName, key, this.initiatorID );\r\n                            }\r\n                        };\r\n\r\n                        callbackObject[methodNamesArray[number]].mapName = mapName;\r\n\r\n                        break;\r\n                    case \"remove\":\r\n\r\n                        // TODO: auf CacheStorage beziehen\r\n\r\n                        callbackObject = {[methodNamesArray[number]]: () => {\r\n                                return this.topicCache.removeFromMap();\r\n                            }\r\n                        };\r\n                }\r\n\r\n                /*\r\n                const {[methodNamesArray[number]]: funk} = {\r\n                    [methodNamesArray[number]]: (...arg) => {\r\n                        callback(...arg);\r\n                    }\r\n                };\r\n\r\n                 */\r\n\r\n                const {[methodNamesArray[number]]: funk} = callbackObject;\r\n\r\n                this[methodNamesArray[number]] = funk;\r\n            }\r\n\r\n            let callGetFomAll = {\r\n               [\"getAll\"]: (topic, theme, mapName)=>{\r\n\r\n                   return Partarum.Cache.CacheStorage.getAllFromMap(topic, theme, mapName, this.initiatorID);\r\n               }\r\n            };\r\n\r\n            callGetFomAll[\"getAll\"].mapName = mapName;\r\n\r\n            const {[\"getAll\"]: funkAll} = callGetFomAll;\r\n\r\n            this[\"getAll\"] = funkAll;\r\n        }\r\n    }\r\n}\r\n\r\nexport {CacheBase};", "import {CacheBase} from \"./CacheBase.js\";\r\n\r\nclass WorkingCache extends CacheBase {\r\n\r\n    static create(topic, theme){\r\n\r\n        super.create(topic, theme);\r\n\r\n        /*\r\n        if(super.init() === false) {\r\n\r\n            super.addCacheMethode(\"LogCache\", [\"setLog\", \"getLog\", \"hasLog\", \"removeLog\"]);\r\n\r\n            super.init(true);\r\n        }\r\n\r\n         */\r\n    }\r\n\r\n    static setStationLoadPageLoadCounter(){\r\n\r\n        WorkingCache.loadCounter ??= 0;\r\n        WorkingCache.loadCounter++;\r\n    }\r\n}\r\n\r\nexport {WorkingCache};", "class ImportCache {\r\n\r\n    static create(id){\r\n\r\n        ImportCache.modulArray ??= {};\r\n    }\r\n\r\n    static setID(id){\r\n        ImportCache.id = id;\r\n    }\r\n\r\n    static setModule(data){\r\n        ImportCache.module = data;\r\n    }\r\n\r\n    static setCondition(){\r\n\r\n        ImportCache.conditionObject ??= {};\r\n\r\n        ImportCache.idCounter ??= 0;\r\n\r\n        let id = \"round_\" + ImportCache.idCounter++;\r\n\r\n        ImportCache.conditionObject[id] = [];\r\n\r\n        return id;\r\n    }\r\n}\r\n\r\nexport {ImportCache};", "import {CacheBase} from \"./CacheBase.js\";\r\n\r\n/*\r\n    Beispiel:\r\n\r\n            topic: partarum-host\r\n            theme: partarum-card-box\r\n            key: shadowRoot\r\n            value: root.dom.shadowRoot\r\n\r\n            topic: partarum-host\r\n            theme: partarum-card-box\r\n            key: startMenu\r\n            value:\r\n\r\n */\r\n\r\n\r\nclass HTMLCache extends CacheBase {\r\n\r\n    static create(topic, theme){\r\n\r\n        super.create(topic, theme);\r\n\r\n        if(super.init() === false) {\r\n\r\n            super.addCacheMethode(\"NodeCache\", [\"setNode\", \"getNode\", \"hasNode\", \"removeNode\"]);\r\n\r\n            super.init(true);\r\n        }\r\n\r\n        return {\r\n            caller: this,\r\n            topic: topic,\r\n            theme: theme,\r\n            add: (key, value, position = null) => {\r\n\r\n                Partarum.Cache.HTMLCache.add(topic, theme, key, value, position);\r\n            },\r\n            get: (key, promise = false) => {\r\n\r\n                return (promise === false) ? this.getNode(topic, theme, key) : new Promise((resolve) => {\r\n\r\n                    let res = this.getNode(topic, theme, key);\r\n\r\n                    let val = setInterval(() => {\r\n\r\n                        if(res !== null){\r\n\r\n                            resolve(res);\r\n\r\n                            clearInterval(val);\r\n                        } else {\r\n\r\n                            //console.dir(res);\r\n                        }\r\n                    }, 200);\r\n                });\r\n            },\r\n            create: (topic, theme) => {\r\n\r\n                return HTMLCache.create(topic, theme);\r\n            },\r\n            getAllOfTheme: (topic, theme) => {\r\n\r\n                return this.getAll(topic, theme, \"NodeCache\");\r\n            },\r\n            has: (key) => {\r\n\r\n                return this.hasNode(topic, theme, key);\r\n            }\r\n        }\r\n    }\r\n\r\n    static add(topic, theme, key, value, position = null){\r\n\r\n        // ! appendChild, after, before, null\r\n\r\n        if(this.hasNode(topic, theme, key)){\r\n\r\n            let node = this.getNode(topic, theme, key);\r\n\r\n            if((typeof node !== \"number\" ) && (typeof node !== \"string\")){\r\n\r\n                switch(position){\r\n\r\n                    case \"append\":\r\n\r\n                        node.appendChild(value);\r\n\r\n                        break;\r\n                    case \"after\":\r\n\r\n                        break;\r\n                    case \"before\":\r\n                }\r\n            } else {\r\n\r\n                this.setNode(topic, theme, key, value);\r\n            }\r\n\r\n        } else {\r\n\r\n            this.setNode(topic, theme, key, value);\r\n        }\r\n    }\r\n}\r\n\r\nexport {HTMLCache};", "class DOMCache {\r\n\r\n    static create(){\r\n\r\n        DOMCache.startCounter();\r\n        DOMCache.setTemplateProp();\r\n    }\r\n\r\n    static startCounter(){\r\n\r\n        DOMCache.counter ??= 0;\r\n        DOMCache.roundCounter ??= {};\r\n    }\r\n\r\n    static setTemplateProp(item){\r\n\r\n        DOMCache.templateProps ??= [];\r\n\r\n        if(item !== undefined) {\r\n            DOMCache.templateProps[item.name] = item.value;\r\n        }\r\n    }\r\n\r\n    static zeroCounter(){\r\n\r\n        DOMCache.zeroCount ??= 0;\r\n        DOMCache.zeroCount++;\r\n    }\r\n\r\n    static getTemplateProp(item){\r\n        return DOMCache.templateProps[item];\r\n    }\r\n\r\n    static getAllTemplateProps(){\r\n        return DOMCache.templateProps;\r\n    }\r\n}\r\n\r\nexport {DOMCache};", "/*\r\n *           Copyright 2020 \u00A9 Alexander Bombis. All rights reserved.\r\n *           Developed by Alexander Bombis.\r\n *           Email: email@alexander-bombis.de\r\n *\r\n *           The following code was created based on the template for the website http://cordes-software.de.\r\n *           This may also be used in full by the person or business\r\n *           representing the domain \"cordes-software.de\"\r\n *           and also modified for their use.\r\n */\r\nimport {CacheBase} from \"./CacheBase.js\";\r\n\r\nclass EventCache extends CacheBase {\r\n\r\n    /*\r\n        Partarum {\r\n            EventCache: {\r\n                topicCache: {\r\n                    MediaBoxPicture: {\r\n                        themeCache: {\r\n                            MediaBoxPicture_mouseover: {\r\n                                handlerCache: {\r\n\r\n                                },\r\n                                targetIdArray: []\r\n                            },\r\n                            MediaBoxPicture_mouseout: {\r\n                                handlerCache: {\r\n\r\n                                },\r\n                                targetIdArray: []\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n     */\r\n\r\n    // https://mm.tt/map/2222516190?t=Yrl4HE0lqN\r\n\r\n    static create(topicName, theme){\r\n\r\n        super.create(topicName, theme);\r\n\r\n        if(super.init() === false) {\r\n\r\n            super.addCacheMethode(\"handlerCache\", [\"setHandler\", \"getHandler\", \"hasHandler\", \"removeHandler\"]);\r\n\r\n            super.addCacheMethode(\"targetIDCache\", [\"setTargetID\", \"getTargetID\", \"hasTargetID\", \"removeTargetID\"]);\r\n\r\n            super.init(true);\r\n        }\r\n    }\r\n\r\n    static setEvent(name, callback){\r\n\r\n        if(name instanceof Object) {\r\n\r\n            let eventName = name.name ?? name.eventName;\r\n\r\n            const {[eventName]: funk} = {\r\n                [eventName]: (ev) => {\r\n                    name.doThat(ev);\r\n                }\r\n            };\r\n\r\n            let topic = name.topic;\r\n\r\n            let theme = name.theme;\r\n\r\n            this.setHandler(topic, theme, eventName, funk);\r\n\r\n            this.setTargetID(topic, theme, eventName, name.targetID);\r\n\r\n        } else {\r\n\r\n            const {[name]: funk} = {\r\n                [name]: (ev) => {\r\n                    callback(ev);\r\n                }\r\n            };\r\n\r\n            //this.setHandler(\"withoutTopic\", theme, eventName, funk);\r\n        }\r\n    }\r\n\r\n    static getEvent(topic, theme, eventName){\r\n\r\n        return EventCache.getHandler(topic, theme, eventName);\r\n    }\r\n\r\n    static getID(name, topic){\r\n\r\n        return EventCache.topicCache[topic].getTargetID(name);\r\n    }\r\n\r\n    static getThemeIDs(topic, theme){\r\n\r\n        return EventCache.topicCache.getAllFromMap(topic, theme, \"targetIDCache\");\r\n    }\r\n\r\n    static removeEvent(name){\r\n\r\n        delete EventCache.topicCache[topic]?.[name];\r\n    }\r\n}\r\n\r\nexport {EventCache};", "import {CacheBase} from \"./CacheBase.js\";\r\n\r\nclass CounterCache extends CacheBase {\r\n\r\n}\r\n\r\nexport {CounterCache};", "import {CacheBase} from \"./CacheBase.js\";\r\n\r\nclass SimpleCache extends CacheBase {\r\n\r\n    static create(topic, theme){\r\n\r\n        super.create(topic, theme);\r\n\r\n        if(super.init() === false) {\r\n\r\n            super.addCacheMethode(\"ItemCache\", [\"setItem\", \"getItem\", \"hasItem\", \"removeItem\"]);\r\n\r\n            super.addCacheMethode(\"Timeline\", [\"setItemToTimeline\", \"getItemFromTimeline\", \"hasItemFromTimeline\", \"removeItemFromTimeline\"]);\r\n\r\n            super.init(true);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport {SimpleCache};", "class IndexCache extends Map{\r\n\r\n    constructor(topic){\r\n\r\n        super();\r\n\r\n        this.topic = topic;\r\n        this.index = Partarum.Helper.Hex.createIndex();\r\n    }\r\n\r\n    set(value = true){\r\n\r\n        let index = this.index.next();\r\n\r\n        const ID = Partarum.Helper.Hex.getString(index);\r\n\r\n        super.set(ID, value);\r\n\r\n        return ID;\r\n    }\r\n\r\n    get(id){\r\n\r\n        return this[id] ?? null;\r\n    }\r\n\r\n}\r\n\r\nexport {IndexCache};", "import {CacheBase} from \"./CacheBase.js\";\n\n/*\n    Beispiel:\n\n            topic: partarum-host\n            theme: partarum-card-box\n            key: shadowRoot\n            value: root.dom.shadowRoot\n\n            topic: partarum-host\n            theme: partarum-card-box\n            key: startMenu\n            value:\n\n */\n\n\nclass PlotCache extends CacheBase {\n\n    static create(topic, theme){\n\n        console.dir(topic);\n        console.dir(theme);\n\n        super.create(topic, theme);\n\n        if(super.init() === false) {\n\n            super.addCacheMethode(\"CTXCache\", [\"setCTX\", \"getCTX\", \"hasCTX\", \"removeCTX\"]);\n            super.addCacheMethode(\"BoardCache\", [\"setBoard\", \"getBoard\", \"hasBoard\", \"removeBoard\"]);\n            super.addCacheMethode(\"CollectionCache\", [\"setCollection\", \"getCollection\", \"hasCollection\", \"removeCollection\"]);\n            super.addCacheMethode(\"LastDraw\", [\"setLastDraw\", \"getLastDraw\", \"hasLastDraw\", \"removeLastDraw\"]);\n\n            super.init(true);\n        }\n\n\n        return {\n            caller: this,\n            topic: topic,\n            theme: theme,\n            add: (key, value, position = null) => {\n\n                PlotCache.add(topic, theme, key, value, position);\n            },\n            get: (mapName) => {\n\n                let baseObject = {\n                    caller: this,\n                    topic: topic,\n                    theme: theme,\n                };\n\n                let reObject;\n\n                switch(mapName) {\n\n                    case \"CTXCache\":\n\n                        reObject = {\n                            add: (...arg) => {\n\n                                return this.setCTX(topic, theme, ...arg);\n                            },\n                            get: (...arg) => {\n\n                                return this.getCTX(topic, theme, ...arg);\n                            },\n                            has: () => {\n\n                                return this.hasCTX();\n                            },\n                            remove: () => {\n\n                                return this.removeCTX();\n                            },\n                            ...baseObject\n                        }\n                        break;\n\n                    case \"BoardCache\":\n\n                        reObject = {\n                            add: (...arg) => {\n\n                                return this.setBoard(topic, theme, ...arg);\n                            },\n                            get: (...arg) => {\n\n                                return this.getBoard(topic, theme, ...arg);\n                            },\n                            has: () => {\n\n                                return this.hasBoard();\n                            },\n                            remove: () => {\n\n                                return this.removeBoard();\n                            },\n                            ...baseObject\n                        }\n                        break;\n\n                    case \"CollectionCache\":\n\n                        reObject = {\n                            add: (...arg) => {\n\n                                return this.setCollection(topic, theme, ...arg);\n                            },\n                            get: (...arg) => {\n\n                                return this.getCollection(topic, theme, ...arg);\n                            },\n                            has: (...arg) => {\n\n                                return this.hasCollection(topic, theme, ...arg);\n                            },\n                            remove: () => {\n\n                                return this.removeCollection();\n                            },\n                            ...baseObject\n                        }\n                        break;\n\n                    case \"LastDraw\":\n\n                        reObject = {\n                            add: (...arg) => {\n\n                                return this.setLastDraw(topic, theme, ...arg);\n                            },\n                            get: () => {\n\n                                return this.getLastDraw();\n                            },\n                            has: () => {\n\n                                return this.hasLastDraw();\n                            },\n                            remove: () => {\n\n                                return this.removeLastDraw();\n                            },\n                            ...baseObject\n                        }\n                }\n\n                return reObject;\n            },\n            create: (topic, theme) => {\n\n                return PlotCache.create(topic, theme);\n            },\n            getAllOfTheme: (topic, theme) => {\n\n                return this.getAll(topic, theme, \"NodeCache\");\n            },\n            has: (key) => {\n\n                return this.hasNode(topic, theme, key);\n            }\n        }\n    }\n\n    add(){\n\n    }\n\n    get(){\n\n    }\n\n    has(){\n\n    }\n\n    remove(){\n\n    }\n}\n\nexport {PlotCache};", "import {CacheStorage} from \"./CacheStorage/CacheStorage.js\";\r\nimport {PartarumCache} from \"./PartarumCache.js\";\r\nimport {WorkingCache} from \"./WorkingCache.js\"\r\nimport {ImportCache} from \"./ImportCache.js\";\r\nimport {HTMLCache} from \"./HTMLCache.js\";\r\nimport {DOMCache} from \"./DOMCache.js\";\r\nimport {EventCache} from \"./EventCache.js\";\r\nimport {CounterCache} from \"./CounterCache.js\";\r\nimport {SimpleCache} from \"./SimpleCache.js\";\r\nimport {IndexCache} from \"./IndexCache.js\";\r\nimport {PlotCache} from \"./PlotCache.js\";\r\n\r\n\r\nclass Cache {\r\n\r\n    static IndexCache = IndexCache;\r\n\r\n    static PartarumCache = PartarumCache;\r\n\r\n    static WorkingCache = WorkingCache;\r\n\r\n    static ImportCache = ImportCache;\r\n\r\n    static DOMCache = DOMCache;\r\n\r\n    static EventCache = EventCache;\r\n\r\n    static CounterCache = CounterCache;\r\n\r\n    static SimpleCache = SimpleCache;\r\n\r\n    static CacheStorage = new CacheStorage();\r\n\r\n    static HTMLCache = HTMLCache;\r\n\r\n    static PlotCache = PlotCache;\r\n\r\n}\r\n\r\nexport {Cache};", "import {CacheBase} from \"../Cache/CacheBase.js\";\r\n\r\nconst HEX_START = 0x000000;\r\n\r\nconst HEX_ADD = 0x000001;\r\n\r\nclass Log extends CacheBase {\r\n\r\n    static timeline = {};\r\n\r\n    static lastHex = 0x000001;\r\n\r\n\r\n    static create(topic, theme){\r\n\r\n        super.create(topic, theme);\r\n\r\n        if(super.init() === false) {\r\n\r\n            super.addCacheMethode(\"LogCache\", [\"setLog\", \"getLog\", \"hasLog\", \"removeLog\"]);\r\n\r\n            super.init(true);\r\n        }\r\n\r\n        return {\r\n            caller: this,\r\n            topic: topic,\r\n            theme: theme,\r\n            add: (value)=>{\r\n\r\n                console.dir(\"call Log over Object.add()\");\r\n\r\n                this.add(topic, theme, value);\r\n            }\r\n        };\r\n    }\r\n\r\n    static add(topic, theme, value){\r\n\r\n        const MOMENT = performance.now().toString();\r\n\r\n        let key = \"0x\" + this.lastHex.toString(16).padStart(6, \"0\");\r\n\r\n        this.timeline[key] = {\r\n            time: MOMENT,\r\n            topic: topic,\r\n            theme: theme,\r\n            message: value\r\n        };\r\n\r\n        this.setLog(topic, theme, MOMENT, value);\r\n\r\n        let num = this.lastHex + 0x000001;\r\n\r\n        let next = \"0x\" + num.toString(16).padStart(6, \"0\");\r\n\r\n        this.lastHex = parseInt(next, 16);\r\n    }\r\n\r\n    static view(){\r\n\r\n        console.table(this.timeline);\r\n    }\r\n}\r\n\r\nexport {Log};", "\r\nclass Validation {\r\n\r\n    static confirmLink(text, link, options){\r\n\r\n        let optionString = Object.entries(options).map(x=>x.join(\"=\")).join(\",\");\r\n\r\n        window.confirm(text) && window.open(link, \"_blank\", optionString);\r\n    }\r\n}\r\n\r\nexport {Validation};", "class ValidObject {\r\n\r\n    testObject;\r\n\r\n    isValid(props, needle){\r\n        return props.every((prop)=> {return ((this[prop] !== needle) && (this[prop] !== undefined))});\r\n    }\r\n\r\n    merge(ob){\r\n\r\n        for(let prop in ob){\r\n            if(ob.hasOwnProperty(prop)) {\r\n                this[prop] = ob[prop];\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport {ValidObject};", "class Counter {\r\n\r\n    constructor(theme){\r\n\r\n        this.theme = Symbol(theme);\r\n\r\n        Partarum.Cache.CounterCache.setTheme(this.theme);\r\n    }\r\n}\r\n\r\nexport {Counter};", "/*\r\n *           Copyright 2020 \u00A9 Alexander Bombis. All rights reserved.\r\n *           Developed by Alexander Bombis.\r\n *           Email: email@alexander-bombis.de\r\n *\r\n *           The following code was created based on the template for the website http://cordes-software.de.\r\n *           This may also be used in full by the person or business\r\n *           representing the domain \"cordes-software.de\"\r\n *           and also modified for their use.\r\n */\r\n\r\nimport {Hex} from \"../Helper/Hex.js\";\r\nimport {Counter} from \"../Helper/Counter.js\";\r\n\r\nclass Helper {\r\n\r\n    static Hex = Hex;\r\n\r\n    static Counter = Counter;\r\n\r\n    static getGermanDateString(date, withTime = false){\r\n\r\n        let startDate = new Date(this.getValidDateString(date));\r\n\r\n        const options = (withTime === false) ? {\r\n            weekday: 'long',\r\n            year: 'numeric',\r\n            month: 'long',\r\n            day: 'numeric'\r\n        } : {\r\n            weekday: \"long\",\r\n            year: \"numeric\",\r\n            month: \"long\",\r\n            day: \"numeric\",\r\n            hour: \"numeric\",\r\n            minute: \"numeric\",\r\n            second: \"numeric\"\r\n        };\r\n\r\n        let utc = new Date(startDate.toUTCString());\r\n\r\n        return utc.toLocaleDateString('de-DE', options);\r\n    }\r\n\r\n    static getDateFromUTC(date){\r\n\r\n        let startDate = new Date(this.getValidDateString(date));\r\n\r\n        const options = {\r\n            day: \"numeric\",\r\n            month: \"numeric\",\r\n            year: \"numeric\"\r\n        }\r\n\r\n        return new Date(startDate.toUTCString()).toLocaleDateString(\"de-DE\", options);\r\n    }\r\n\r\n    static getValidDateString(date){\r\n        return date.replace(/ /g,\"T\")\r\n    }\r\n\r\n    static getCurrentHour(){\r\n        return new Date().getHours();\r\n    }\r\n\r\n    static betweenRanges (needle, min, max) {\r\n\r\n        return ((needle > min) && (needle < max));\r\n    }\r\n\r\n    static safeFunction(){\r\n\r\n    }\r\n}\r\n\r\nexport {Helper};", "/*\r\n *           Copyright 2020 \u00A9 Alexander Bombis. All rights reserved.\r\n *           Developed by Alexander Bombis.\r\n *           Email: email@alexander-bombis.de\r\n *\r\n *           The following code was created based on the template for the website http://cordes-software.de.\r\n *           This may also be used in full by the person or business\r\n *           representing the domain \"cordes-software.de\"\r\n *           and also modified for their use.\r\n */\r\n\r\n\r\n\r\nclass GroupObject {\r\n\r\n    constructor(name){\r\n\r\n        Partarum.ViewKit.displayCache ??= new Map();\r\n\r\n        this.groupName = name;\r\n        this.displays = [];\r\n    }\r\n\r\n    addDisplay(d, el){\r\n\r\n        this.displays.push(d);\r\n        this[d] = new Display(this.groupName, d, el);\r\n\r\n        Partarum.ViewKit.displayCache.set(d, this.groupName);\r\n\r\n        return this[d];\r\n    }\r\n\r\n    setScrollableElement(el){\r\n        this.scrollableElement = el;\r\n    }\r\n\r\n    setFocus(e){\r\n        this.focus = e ?? false;\r\n    }\r\n}\r\n\r\nclass DisplayGroup extends GroupObject{\r\n\r\n\r\n    constructor(name) {\r\n        super(name);\r\n    }\r\n}\r\n\r\n\r\nclass Display {\r\n\r\n    constructor(g, d, el) {\r\n\r\n        this.groupName = g;\r\n        this.displayName = d;\r\n        this.element = el ?? d;\r\n        this.classes = [];\r\n    }\r\n\r\n    setClass(className){\r\n        this.classes.push(className);\r\n    }\r\n\r\n    setScrollableElement(el){\r\n        this.scrollableElement = el;\r\n    }\r\n\r\n    createUrl(id, block){\r\n\r\n        let start = \"start\";\r\n\r\n        return `javascript: Partarum.ViewKit.setIntoView(\"${this.displayName}\", \"${id}\", \"${block ?? start}\").then((resolve)=>{\r\n            if(resolve === false){\r\n            console.dir(\"Kein Element vorhanden\");\r\n            \r\n            } else {\r\n            console.dir(\"Element vorhanden und Funktion ausgef\u00FChrt\");\r\n            }\r\n        });`;\r\n    }\r\n\r\n    setViewport(id, block){\r\n\r\n        this.id = id;\r\n\r\n        this.viewportCache ??= new Map();\r\n        this.viewportCache.set(this.id, {\r\n           block: block,\r\n           url:  this.createUrl(id, block)\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    getURL(){\r\n\r\n        let result = this.viewportCache.get(this.id);\r\n\r\n        return result.url;\r\n    }\r\n}\r\n\r\nclass singleDisplay extends Display{\r\n    constructor(name) {\r\n        super(name, name, name);\r\n\r\n        delete this.groupName;\r\n    }\r\n\r\n    setFocus(e){\r\n        this.focus = e ?? false;\r\n    }\r\n}\r\n\r\n\r\nclass ViewKit {\r\n\r\n    static scrollNow(e, b){\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            e.scrollIntoView({block: ((b === \"center\") || (b === \"start\"))  ? \"start\" : b, behavior: \"smooth\"});\r\n\r\n            resolve(e);\r\n        })\r\n    }\r\n\r\n    static scrollBack(el){\r\n\r\n        el.scrollBy({left: 0, top: -300, behavior: \"smooth\"});\r\n    }\r\n\r\n    static addfocusCache(el) {\r\n        ViewKit.focusCache ??= [];\r\n\r\n        ViewKit.focusCache.push(el);\r\n    }\r\n\r\n    static removeFocusCache() {\r\n\r\n        let el = ViewKit.focusCache.shift();\r\n        el.classList.remove(\"focusBorder\");\r\n    }\r\n\r\n    static setFocusBorder(el){\r\n\r\n        (Array.isArray(ViewKit.focusCache)) && ViewKit.removeFocusCache();\r\n\r\n        ViewKit.addfocusCache(el)\r\n\r\n        el.classList.add(\"focusBorder\");\r\n    }\r\n\r\n    static getScrollStopped(){\r\n\r\n        return new Promise((resolve, reject) => {});\r\n    }\r\n\r\n    static setScrollEvent(el, callback){\r\n\r\n        el.addEventListener(\"scroll\", callback, false);\r\n    }\r\n\r\n    static scrollCallback(evName, scrollElement, scrollableElement, block){\r\n\r\n\r\n        // diverse Callbacks f\u00FCr end, start und center etc... erstellen !!!\r\n\r\n        return (ev) => {\r\n\r\n\r\n\r\n            scrollableElement.removeEventListener(\"scroll\", Partarum.Cache.EventCache.getEvent(evName), false);\r\n\r\n            if(block === \"center\") {\r\n                if (scrollableElement.scrollTop !== (scrollElement.offsetTop - scrollableElement.offsetTop)) {\r\n                    /*\r\n                    console.log(\"el.offsetTop: \" + scrollElement.offsetTop);\r\n                    console.log(\"cR.offsetTop: \" + scrollableElement.offsetTop);\r\n                    console.log(\"conditionReader: \" + scrollableElement.scrollTop);    // das hier wenn conditionReader sich bewegt\r\n                    console.log(\"documentElement: \" + document.documentElement.scrollTop);\r\n                    console.log(\"evPhase: \" + ev.eventPhase);\r\n                     */\r\n\r\n                    if (scrollableElement !== document) {\r\n                        scrollableElement.scrollTo({\r\n                            left: 0,\r\n                            top: (scrollElement.offsetTop - scrollableElement.offsetTop) - 300,\r\n                            behavior: \"smooth\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    static setIntoView(d, e, b){\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            // console.dir(d); // name des Displays\r\n            // console.dir(e); // id des anzusteuernden Elementes\r\n            // console.dir(b); // block - position\r\n\r\n            let el = document.getElementById(e);\r\n\r\n            if(el){\r\n\r\n                let groupName = (Partarum.ViewKit.displayCache) ? Partarum.ViewKit.displayCache.get(d) : undefined;\r\n\r\n                let display = (groupName === undefined) ? Partarum.ViewKit.displays[d] : Partarum.ViewKit.displays[groupName][d];\r\n\r\n                let focus = (groupName === undefined) ? Partarum.ViewKit.displays[d].focus : Partarum.ViewKit.displays[groupName].focus;\r\n\r\n                let scrollableElement = () =>{\r\n\r\n                    if((display?.scrollableElement === false) || (display?.scrollableElement === \"window\")){\r\n\r\n                        return [\"window\", document];\r\n\r\n                    } else {\r\n\r\n                        return [display.scrollableElement, document.getElementById(display.scrollableElement)];\r\n                    }\r\n                };\r\n\r\n                let evNameAndElement = scrollableElement();\r\n\r\n                let ev = {\r\n                    type: \"scroll\",\r\n                    topic: evNameAndElement[0],\r\n                    theme: \"Viewport\",\r\n                    name: display.id + \"_scrollTo_\" + e,\r\n                    targetID: display.displayName,\r\n                    doThat: ViewKit.scrollCallback(evNameAndElement[0], el, evNameAndElement[1], b)\r\n                }\r\n\r\n                Partarum.Cache.EventCache.create(ev.topic, ev.theme);\r\n\r\n                Partarum.Cache.EventCache.setEvent(ev);\r\n\r\n                let getEvCallback = Partarum.Cache.EventCache.getEvent(ev.topic, ev.theme, ev.name);\r\n\r\n                if(evNameAndElement[1].offsetHeight !== evNameAndElement[1].scrollHeight) {\r\n\r\n                    ViewKit.setScrollEvent(evNameAndElement[1], getEvCallback);\r\n                }\r\n\r\n                (ViewKit.displayStatus(el) !== true) && ViewKit.changeDisplay(groupName, d);\r\n\r\n                ViewKit.scrollNow(el, b).then((e) => {\r\n\r\n                    (focus === true) && ViewKit.setFocusBorder(e);\r\n                });\r\n\r\n                resolve(true);\r\n            } else {\r\n\r\n                resolve(false);\r\n            }\r\n        })\r\n    }\r\n\r\n    static setDisplayGroup(name){\r\n\r\n        Partarum.ViewKit.displays ??= {};\r\n\r\n        Partarum.ViewKit.displays[name] = new DisplayGroup(name);\r\n\r\n        return Partarum.ViewKit.displays[name];\r\n    }\r\n\r\n    static setSingleDisplay(name){\r\n\r\n        Partarum.ViewKit.displays ??= {};\r\n\r\n        Partarum.ViewKit.displays[name] = new singleDisplay(name);\r\n\r\n        return Partarum.ViewKit.displays[name];\r\n    }\r\n\r\n    static setDisplay(display){\r\n        return new singleDisplay(display);\r\n    }\r\n\r\n    static callDisplay(display) {\r\n\r\n        let displayGroup = Partarum.ViewKit.displays;\r\n\r\n        let getGroup = (displayGroup[display]) ? Partarum.ViewKit.displays[display] : Partarum.ViewKit.displayCache.get(display);\r\n\r\n        if(typeof getGroup !== \"object\") {\r\n            return displayGroup[getGroup][display];\r\n        } else {\r\n            return displayGroup[display];\r\n        }\r\n    }\r\n\r\n    static displayStatus(el){\r\n\r\n        return ([\r\n            el.clientLeft,\r\n            el.clientHeight,\r\n            el.clientTop,\r\n            el.clientWidth\r\n        ].every((key) => key === 0) !== true);\r\n    }\r\n\r\n    static replaceClass(el, oldClass, newClass){\r\n        el.classList.remove(oldClass);\r\n        el.classList.add(newClass);\r\n    }\r\n\r\n\r\n    static changeDisplay(dg, d){\r\n\r\n        let displayGroup = Partarum.ViewKit.displays[dg];\r\n        let displays = displayGroup.displays;\r\n\r\n        let counter = 0;\r\n        let elGroup = [];\r\n        let classGroup = [];\r\n\r\n        for(let displayName of displays){\r\n\r\n            counter++;\r\n            classGroup.push(displayGroup[displayName].classes);\r\n            elGroup.push(document.getElementById(displayGroup[displayName].element));\r\n        }\r\n\r\n        for(let i = 0; i<counter; i++){\r\n\r\n            for(let j = 0; j<counter; j++){\r\n\r\n                elGroup[i].classList.toggle(classGroup[j]);\r\n            }\r\n        }\r\n    }\r\n}\r\nexport {ViewKit};", "/*\r\n *   Copyright 2018- 2021 \u00A9 Alexander Bombis. All rights reserved.\r\n *            Developed by Alexander Bombis.\r\n *            Email: email@alexander-bombis.de\r\n */\r\n\r\nclass Loader {\r\n\r\n    static fetchFile(file, type){\r\n        return new Promise((resolve, reject) => {\r\n\r\n            fetch(file).then((response) => {\r\n\r\n                /*\r\n                        arrayBuffer()\r\n                        blob()\r\n                        json()\r\n                        text()\r\n                        formData()\r\n                 */\r\n\r\n                switch (type) {\r\n\r\n                    case \"array\":\r\n                        return response.arrayBuffer();\r\n                    case \"blob\":\r\n                        return response.blob();\r\n                    case \"json\":\r\n                        return response.json();\r\n                    case \"text\":\r\n                        return response.text();\r\n                    case \"form\":\r\n                        return response.formData();\r\n                    default:\r\n                        return false;\r\n                }\r\n            }).then((data) => {\r\n                resolve(data);\r\n            }).catch((error)=>{\r\n                reject(error);\r\n            })\r\n        });\r\n    }\r\n\r\n    static fetchJSONPost(url, data){\r\n\r\n        return new Promise((resolve, reject) => {\r\n            fetch(url, {\r\n                method: \"POST\",\r\n                mode: \"cors\",\r\n                cache: \"no-cache\",\r\n                credentials: \"same-origin\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                redirect: \"follow\",\r\n                referrerPolicy: \"no-referrer\",\r\n                body: JSON.stringify(data)\r\n            }).then((response)=>{\r\n                return response.json();\r\n            }).then((data) => {\r\n                resolve(data);\r\n            }).catch((error) => {\r\n                reject(error);\r\n            })\r\n        });\r\n    }\r\n\r\n    // ben\u00F6tigt das Elternelement\r\n    static fetchImage(file, id){\r\n\r\n        return new Promise((resolve, reject) => {\r\n            fetch(file).then((response) => {\r\n                return response.blob()\r\n            }).then( (blob)=> {\r\n\r\n                let pic = URL.createObjectURL(blob);\r\n                let node = document.getElementById(id);\r\n\r\n                node.src = pic;\r\n\r\n                console.dir(node);\r\n                console.dir(pic);\r\n                //document.getElementById(id).src = URL.createObjectURL(blob);\r\n            })\r\n        })\r\n    }\r\n}\r\nexport {Loader};", "class Workbox{\r\n    \r\n    constructor(file, config = null){\r\n        this.worker = new Worker(file, config);\r\n    }\r\n    \r\n    getWorker(){\r\n        return this.worker;\r\n    }\r\n}\r\n\r\nexport {Workbox};", "class HTMLPartarumElement extends HTMLElement {\r\n\r\n    root = {\r\n        dom: {},\r\n        app: new Partarum(),\r\n        constructed: false,\r\n        initialized: false,\r\n        initializedSuper: false,\r\n        connected: false,\r\n        connectedCallback: function(callback) {\r\n\r\n            if(this.initialized === false){\r\n\r\n                this.initialized = true;\r\n\r\n                callback();\r\n            }\r\n        }\r\n    };\r\n\r\n    constructor(config, name, dom, id) {\r\n\r\n        super();\r\n\r\n        this.root.constructed = true;\r\n\r\n        this.root.dom = dom;\r\n\r\n        this.root.config = config;\r\n\r\n        this.root.name = name;\r\n\r\n        this.root.id = (typeof id === \"string\") ? id.replace(\" \", \"_\") : \"\";\r\n    }\r\n\r\n    connectedCallback(){\r\n\r\n        if(this.root.initializedSuper === false){\r\n\r\n            this.id = this.root.id;\r\n\r\n            this.setConfig(this.root.config, this.root.name);\r\n\r\n            this.root.initializedSuper = true;\r\n        }\r\n    }\r\n\r\n    setConfig(config, needle, element = this){\r\n\r\n        if(config !== undefined) {\r\n\r\n            if (\"surface\" in config) {\r\n\r\n                if (Reflect.has(config.surface, needle)) {\r\n\r\n                    if (Reflect.has(config.surface[needle], \"style\")) {\r\n\r\n                        for (let style in config.surface[needle].style) {\r\n\r\n                            element.style[style] = config.surface[needle].style[style];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    initAddElement(name, element, parent = \"shadowBox\", config = this.root.config, place = \"append\"){\r\n\r\n        this.root.dom.add(name, element, null);\r\n\r\n        this.setConfig(config, name, element);\r\n\r\n        this.root.dom.add(parent, element, place);\r\n    }\r\n\r\n    add(element, topic){\r\n\r\n        this.root.dom.add(topic, element, \"append\");\r\n    }\r\n\r\n    addTopic(parent, topic, elementName){\r\n\r\n        let topicArray = (Array.isArray(topic)) ? topic : [topic];\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            let topicCounter = 0;\r\n\r\n            for(let topicName of topicArray){\r\n\r\n                this.root.dom.add(topicName, document.createElement(elementName));\r\n\r\n                this.root.dom.add(parent, this.root.dom.get(topicName), \"append\");\r\n\r\n                if(topicCounter === topicArray.length){\r\n\r\n                    resolve(true);\r\n                }\r\n\r\n                topicCounter ++;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n(customElements.get(\"partarum-element\") === undefined) && customElements.define(\"partarum-element\", HTMLPartarumElement);\r\n\r\nexport {HTMLPartarumElement};", "import {HTMLPartarumElement} from \"./HTMLPartarumElement.js\";\r\n\r\nclass HTMLPartarumHost extends HTMLPartarumElement{\r\n\r\n    constructor(config, name, id){\r\n        super(config, name, id);\r\n\r\n        this.#base();\r\n    }\r\n\r\n    static cache;\r\n\r\n    connectedCallback(){\r\n        super.connectedCallback();\r\n    }\r\n\r\n    #base() {\r\n\r\n        this.partarum = window.Partarum;\r\n\r\n        this.root.dom = this.partarum.Cache.HTMLCache.create(\"partarum-host\", this.root.name);\r\n\r\n        this.root.dom.add(\"shadowBox\", this.attachShadow({mode: \"open\"}), null);\r\n\r\n        let partarumCSS = document.createElement(\"link\");\r\n        partarumCSS.setAttribute(\"rel\", \"stylesheet\");\r\n        partarumCSS.setAttribute(\"type\", \"text/css\");\r\n        partarumCSS.setAttribute(\"href\", \"/Partarum/css\");\r\n\r\n        this.root.dom.add(\"shadowBox\", partarumCSS, \"append\");\r\n    }\r\n\r\n    loadStyle(config){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            let linkCounter = 0;\r\n\r\n            let linkStatus = false;\r\n\r\n            let styleCounter = 0;\r\n\r\n            let styleStatus = false;\r\n\r\n            if(Reflect.has(config, \"link\")){\r\n\r\n                let linkArray = Array.isArray(config.link) ? config.link : [config.link];\r\n\r\n                for(let link of linkArray) {\r\n\r\n                    let linkElement = document.createElement(\"link\");\r\n                    linkElement.setAttribute(\"rel\", \"stylesheet\");\r\n                    linkElement.setAttribute(\"type\", \"text/css\");\r\n                    linkElement.setAttribute(\"href\", link);\r\n\r\n                    this.root.dom.add(\"shadowBox\", linkElement.cloneNode(true), \"append\");\r\n\r\n                    linkCounter++;\r\n\r\n                    linkStatus = (linkCounter === linkArray.length);\r\n                }\r\n\r\n            } else {\r\n\r\n                linkStatus = true;\r\n            }\r\n\r\n            if(Reflect.has(config, \"style\")){\r\n\r\n                let styleList = (Array.isArray(config.style)) ? config.style : ((config.style instanceof NodeList) ? config.style : [config]);\r\n\r\n                for(let style of styleList) {\r\n\r\n                    this.root.dom.add(\"shadowBox\", style.cloneNode(true), \"append\")\r\n\r\n                    styleCounter++;\r\n\r\n                    styleStatus = (styleCounter === styleList.length);\r\n                }\r\n            } else {\r\n\r\n                styleStatus = true;\r\n            }\r\n\r\n            function checkStatus(){\r\n\r\n                if((styleStatus === true) && (linkStatus === true)) {\r\n                    resolve(true);\r\n                }\r\n            }\r\n\r\n            let inID = setInterval(checkStatus, 100);\r\n\r\n        });\r\n    }\r\n}\r\n\r\n(customElements.get(\"partarum-host\") === undefined) && customElements.define(\"partarum-host\", HTMLPartarumHost);\r\n\r\n\r\nexport {HTMLPartarumHost};", "import {HTMLPartarumElement} from \"../HTMLPartarumElement.js\";\r\n\r\nclass HTMLCardBoxHeader extends HTMLPartarumElement {\r\n\r\n    constructor(config, id = null){\r\n        super(config, \"header\");\r\n\r\n        this.id = id || \"\";\r\n\r\n        //this.className = \"box-row box-center\";\r\n    }\r\n\r\n    /*\r\n        ! Hier die jeweiligen Menus und Canvas erstellen\r\n     */\r\n\r\n    addTopic(topic) {\r\n\r\n        super.addTopic(topic, \"button\");\r\n    }\r\n\r\n    addMenu(){\r\n\r\n    }\r\n\r\n    addCanvas(){\r\n        \r\n    }\r\n}\r\n\r\n(customElements.get(\"partarum-card-box-header\") === undefined) && customElements.define(\"partarum-card-box-header\", HTMLCardBoxHeader);\r\n\r\nexport {HTMLCardBoxHeader};", "import {HTMLPartarumElement} from \"../HTMLPartarumElement.js\";\n\nclass HTMLCardBoxMenu extends HTMLPartarumElement {\n\n    constructor(config, id, dom){\n        super(config, \"menu\", dom, id);\n    }\n\n    connectedCallback(){\n\n        super.connectedCallback();\n    }\n\n\n    add(element, topic){\n\n        this.root.dom.add(topic, element, \"append\");\n    }\n\n    addTopic(topic, id, elementName = \"button\", cardBoxObject, position = \"start\") {\n\n        //console.dir(topic);\n\n        return new Promise((resolve) => {\n\n            let topicArray = (Array.isArray(topic)) ? topic : [topic];\n\n            let topicCounter = 0;\n\n            this.root.dom.get(\"Listener\").add(\"windowScroll\", ()=>{this.setClickEvent(this);});\n\n            window.addEventListener(\"scroll\", this.root.dom.get(\"Listener\").get(\"windowScroll\"), {once: true});\n\n            for(let topicName of topicArray){\n\n                let topicNode = document.createElement(elementName);\n\n                let buttonID = \"button_\" + id;\n\n                topicNode.setAttribute(\"id\", buttonID);\n\n                topicNode.classList.add(\"product-category-button\");\n\n                let idNew = \"productCategory_\" + id;\n\n                let loader = this.root.dom.get(\"Loader\");\n\n                loader.add(buttonID, idNew);\n\n                let h3 = document.createElement(\"h3\");\n\n                h3.appendChild(document.createTextNode(topicName));\n\n                topicNode.appendChild(h3);\n\n                this.appendChild(topicNode);\n\n                this.root.dom.add(buttonID, topicNode);\n\n                topicCounter++;\n            }\n\n            resolve(true);\n        });\n    }\n\n    setClickEvent(that){\n\n        console.dir(\"click\");\n\n        let loadStatus = that.root.dom.get(\"Loader\").get(\"Status\");\n\n        if(loadStatus === 0){\n\n            let loadCache = that.root.dom.getAllOfTheme(\"CardBox\", \"Loader\");\n\n            let loadObject = Object.fromEntries(loadCache.entries());\n\n            let loadCounter = 0;\n\n            //console.dir(loadObject);\n\n            for(let loadKey in loadObject){\n\n                if(loadKey !== \"Status\"){\n\n                    let groupBox = that.root.dom.get(loadObject[loadKey]);\n\n                    //console.dir(loadKey);\n                    //console.dir(groupBox);\n\n                    let data = groupBox.data;\n\n                    data.groupButton = loadKey;\n\n                    let buttonNode = that.root.dom.get(loadKey);\n\n                    buttonNode.addEventListener(\"click\",(ev) => {\n\n                        console.dir(\"clcik\");\n\n                        console.dir(ev);\n\n                        that.displayCategory(groupBox);\n\n                    });\n\n                    (loadCounter === 0) && buttonNode.click();\n\n                    loadCounter++;\n                }\n            }\n\n            that.root.dom.get(\"Loader\").add(\"Status\", 1);\n\n        } else {\n\n            console.dir(\"is loaded\");\n        }\n    }\n\n\n    displayCategory(catBox) {\n\n        // catBox ist das aktuelle Node, was vom Event mitgegeben wird\n\n        console.dir(catBox);\n\n        const topic = catBox.topic;\n\n        const data = catBox.data;\n\n        const catID  = topic.id;\n\n        let cacheBox = this.root.dom.get(\"DisplayCategories\").get(catID);\n\n        let displayMenu = this.root.dom.get(\"DisplayMenu\").get(catID);\n\n        let nodeObject;\n\n        let idArray = [];\n\n        if(cacheBox === null) {\n\n            idArray.push(catID);\n\n            let categories = this.root.dom.getAllOfTheme(\"CardBox\", \"Categories\");\n\n            nodeObject = Object.fromEntries(categories.entries());\n\n            let aktNode = nodeObject[catID];\n\n            let aktNodeData = aktNode.data;\n\n            let aktNodeType = aktNode.type;\n\n            switch (aktNodeType) {\n\n                case \"WithSubCategories\":\n\n                    idArray.push(aktNodeData.subCategories[0]);\n\n                    idArray.push(displayMenu.categoryMenu);\n\n                    idArray.push(displayMenu.categoryCanvas);\n\n                    break;\n                case \"SubCategories\":\n\n                    idArray.push(aktNodeData.category);\n\n                    displayMenu = this.root.dom.get(\"DisplayMenu\").get(aktNodeData.category);\n\n                    idArray.push(displayMenu.categoryMenu);\n\n                    idArray.push(displayMenu.categoryCanvas);\n            }\n\n            this.root.dom.get(\"DisplayCategories\").add(catID, [nodeObject, idArray]);\n\n        } else {\n\n            nodeObject = cacheBox[0];\n\n            idArray = cacheBox[1];\n        }\n\n        // ! canvas auf width testen !!\n\n        //console.dir(this.root.dom);\n\n        let cardDrawBox = this.root.dom.get(\"CardDrawBox\");\n\n        let canvas = this.root.dom.get(displayMenu?.categoryCanvas) ?? this.root.dom.get(\"canvas\");\n\n        let getList = this.root.dom.get(\"Listener\").get(\"windowResize\");\n\n        //console.dir(getList);\n\n        if(getList === null){\n\n            this.root.dom.get(\"Listener\").add(\"windowResize\", ()=>{\n\n                // ! \n\n                let width = this.root.dom.get(displayMenu?.categoryMenu)?.offsetWidth ?? this.root.dom.get(\"productGroupNav\").offsetWidth;\n\n                canvas.width = width.toString();\n\n                this.root.dom.get(\"canvas\").width = width;\n\n                //console.dir(this.root.dom.getAllOfTheme(\"CardBox\", \"DisplayCategories\"));\n\n                for(let upCat of this.root.dom.getAllOfTheme(\"CardBox\", \"DisplayCategories\").entries()){\n\n                    cardDrawBox.plotter.clearBoard(canvas.id, \"canvas\");\n\n                    cardDrawBox.plotter.update(\"setLine\", upCat[0]);\n                }\n\n\n            });\n\n            window.addEventListener(\"resize\", this.root.dom.get(\"Listener\").get(\"windowResize\"), false);\n        }\n\n        for(let groupObject in nodeObject){\n\n            let group = nodeObject[groupObject].topic;\n\n            if(idArray.includes(group.id) === false){\n\n                if(group.classList.length !== 0){\n\n                    if(group.classList.contains(\"grid\")){\n\n                        group.classList.replace(\"grid\", \"zero\");\n                    }\n                } else {\n\n                    group.classList.add(\"zero\");\n                }\n\n            } else {\n\n                if (group.classList.length !== 0) {\n\n                    if (group.classList.contains(\"zero\")) {\n\n                        group.classList.replace(\"zero\", \"grid\");\n                    }\n                }\n            }\n        }\n\n        canvas.classList.replace(\"zero\", \"inline\");\n\n        \n\n        if(displayMenu === null){\n\n            if(\"category\" in data){\n\n                let catCan = this.root.dom.get(\"DisplayMenu\").get(data.category);\n\n                cardDrawBox.plotter.clearBoard(catCan.categoryCanvas);\n\n            } else {\n\n                //console.dir(cardDrawBox);\n\n                cardDrawBox.plotter.clearBoard(\"canvas\");\n            }\n        } else {\n\n            if(\"subCategories\" in data){\n\n                cardDrawBox.plotter.clearBoard(canvas.id, \"canvas\");\n            } else {\n\n                cardDrawBox.plotter.clearBoard(canvas.id);\n            }\n        }\n\n        this.root.dom.get(\"LastDraw\").clear();\n\n        console.dir(cardDrawBox.plotter.isCollected(\"setLine\", catID));\n\n        if (cardDrawBox.plotter.isCollected(\"setLine\", catID)) {\n\n            /*\n            let styleObject = cardDrawBox.plotter.elementStyleCache[data.groupButton];\n\n\n            for (let attr in styleObject) {\n                groupButton.style[attr] = styleObject[attr];\n            }\n\n\n             */\n\n\n            if(canvas.width === 0){\n               \n                canvas.width = this.root.dom.get(displayMenu.categoryMenu).offsetWidth;\n            }\n\n            cardDrawBox.plotter.update(\"setLine\", catID);\n\n        } else {\n\n            let childBox = catBox.themes;\n\n            if(Object.keys(childBox).length !== 0){\n\n                this.root.dom.get(\"LastDraw\").add(catID, \"\");\n\n                for (let child in childBox) {\n\n                    //console.dir(child);\n\n                    // canvas as node, groupName, groupButton | startNode as Node, groupChild | goalNode as Node\n\n                    // TODO: zu setNodes umbauen\n\n                    cardDrawBox.setLines(canvas, catID, this.root.dom.get(data.groupButton), childBox[child].theme);\n                }\n\n            } else {\n\n                // Button to Button line !!!\n\n                this.root.dom.get(\"LastDraw\").add(catID);\n\n                for(let sub of data.subCategories){\n\n                    let subObject = this.root.dom.get(sub);\n\n                    // ! canvas stimmt noch nicht - muss in dem Fall das vom Elternelement sein - ist jetzt erstmal auf #canvas gesetzt\n\n                    // ! das Display muss noch zu den erlaubten gestzt werden, damit es bleibt, wenn zwischen den Subs geschalten wird !\n\n                    cardDrawBox.setLines(this.root.dom.get(\"canvas\"), catID, this.root.dom.get(data.groupButton), this.root.dom.get(subObject.data.groupButton));\n\n                }\n\n                let firstChild = this.root.dom.get(data.subCategories[0]);\n\n                this.root.dom.get(\"LastDraw\").add(data.subCategories[0]);\n\n                let subThemes = firstChild.themes;\n\n                for(let subThemeCard in subThemes){\n\n                    let themeNode = subThemes[subThemeCard].theme;\n\n                    let subCanvas = this.root.dom.get(displayMenu.categoryCanvas);\n\n                    cardDrawBox.setLines(subCanvas, data.subCategories[0], this.root.dom.get(firstChild.data.groupButton), themeNode);\n                }\n            }\n        }\n    }\n}\n\n(customElements.get(\"partarum-card-box-menu\") === undefined) && customElements.define(\"partarum-card-box-menu\", HTMLCardBoxMenu);\n\nexport {HTMLCardBoxMenu};", "import {HTMLPartarumElement} from \"../HTMLPartarumElement.js\";\r\n\r\nclass HTMLCardThemeBox extends HTMLPartarumElement {\r\n\r\n    constructor(config, dom, id, cardBoxObject){\r\n        super(config, \"section\", dom, id);\r\n\r\n        this.root.cardBoxObject = cardBoxObject;\r\n    }\r\n\r\n    connectedCallback(){\r\n\r\n        super.connectedCallback();\r\n\r\n        this.id = this.root.id;\r\n\r\n        this.root.title = this.root.cardBoxObject.title;\r\n\r\n        this.root.topicDOM = this.root.dom.get(this.root.cardBoxObject.parent);\r\n\r\n        this.root.themeDOM = Reflect.get(this.root.topicDOM.themes, this.root.cardBoxObject.id);\r\n\r\n        this.root.mainInfoObject = this.root.cardBoxObject.mainInfo ?? null;\r\n\r\n        this.root.featureObject = this.root.cardBoxObject.features ?? null;\r\n\r\n        this.loadElements().then();\r\n    }\r\n\r\n    async loadElements(){\r\n\r\n        await this.setSlogan();\r\n\r\n        if(this.root.mainInfoObject !== null) {\r\n\r\n            await this.setMainInfo();\r\n            await this.setLifetime(this.root.mainInfoObject.lifetime);\r\n            await this.setPrice(this.root.mainInfoObject.price);\r\n            await this.setLinkPage(this.root.mainInfoObject.link);\r\n        }\r\n\r\n        if(this.root.featureObject !== null){\r\n\r\n            await this.setFeatures(this.root.featureObject);\r\n        }\r\n\r\n    }\r\n\r\n    setSlogan(){\r\n\r\n        return new Promise((resolve)=>{\r\n\r\n            let sloganBox = document.createElement(\"header\");\r\n\r\n            let sloganText = document.createElement(\"h3\");\r\n\r\n            sloganText.appendChild(document.createTextNode(this.root.cardBoxObject.title));\r\n\r\n            sloganBox.appendChild(sloganText);\r\n\r\n            this.appendChild(sloganBox);\r\n\r\n            resolve();\r\n        });\r\n\r\n\r\n    }\r\n\r\n    setMainInfo(){\r\n\r\n        return new Promise((resolve)=>{\r\n\r\n            this.root.themeDOM.mainInfo = document.createElement(\"section\");\r\n            this.appendChild(this.root.themeDOM.mainInfo);\r\n\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    setLifetime(lifetimeText){\r\n\r\n        return new Promise((resolve)=>{\r\n\r\n            let lifetime = document.createElement(\"section\");\r\n            lifetime.classList.add(\"box-row\", \"box-center\");\r\n\r\n            let lifetimeArray = (Array.isArray(lifetimeText)) ? lifetimeText : [lifetimeText];\r\n\r\n            for(let key in lifetimeArray){\r\n\r\n                let p = document.createElement(\"p\");\r\n\r\n                let text = document.createTextNode(lifetimeArray[key]);\r\n\r\n                p.appendChild(text);\r\n\r\n                lifetime.appendChild(p);\r\n            }\r\n\r\n            this.root.themeDOM.mainInfo.appendChild(lifetime);\r\n\r\n            resolve();\r\n        })\r\n    }\r\n\r\n    setPrice(priceObject){\r\n\r\n        return new Promise((resolve)=>{\r\n\r\n            let price = document.createElement(\"section\");\r\n\r\n            price.classList.add(\"partarum-card-theme-price\");\r\n\r\n            let amount = document.createElement(\"p\");\r\n\r\n            amount.appendChild(document.createTextNode(priceObject.amount));\r\n\r\n            price.appendChild(amount);\r\n\r\n            let period = document.createElement(\"p\");\r\n\r\n            period.appendChild(document.createTextNode(priceObject.period));\r\n\r\n            price.appendChild(period);\r\n\r\n            this.root.themeDOM.mainInfo.appendChild(price);\r\n\r\n            resolve();\r\n        })\r\n    }\r\n\r\n    setLinkPage(linkObject){\r\n\r\n        return new Promise((resolve)=>{\r\n\r\n            let linkPage = document.createElement(\"section\");\r\n\r\n            let link = document.createElement(\"a\");\r\n\r\n            link.setAttribute(\"href\", linkObject.href);\r\n\r\n            link.classList.add(\"beauty-button-link\");\r\n\r\n            let textNode = document.createTextNode(linkObject.text ?? \"Jetzt Registrieren\");\r\n\r\n            link.appendChild(textNode);\r\n\r\n            if(\"icon\" in linkObject){\r\n\r\n                let icon = document.createElement(\"i\");\r\n\r\n                if(\"class\" in linkObject.icon){\r\n\r\n                    for(let classItem of linkObject.icon.class.split(\" \")){\r\n\r\n                        icon.classList.add(classItem);\r\n                    }\r\n                }\r\n\r\n                if(\"position\" in linkObject.icon){\r\n\r\n                    let position = \"before\";\r\n\r\n                    if(linkObject.icon.position === \"before\"){\r\n\r\n                        textNode.before(icon);\r\n\r\n                    } else {\r\n\r\n                        textNode.after(icon);\r\n                    }\r\n\r\n                    icon.classList.add((position === \"before\") ? \"icon-left\" : \"icon-right\");\r\n                }\r\n            }\r\n\r\n            linkPage.appendChild(link);\r\n\r\n            this.root.themeDOM.mainInfo.appendChild(linkPage);\r\n\r\n            resolve();\r\n        })\r\n    }\r\n\r\n    setFeatures(featuresObject){\r\n\r\n        return new Promise((resolve)=>{\r\n\r\n            let features = document.createElement(\"footer\");\r\n\r\n            features.classList.add(\"text-setLeft\", \"partarum-card-theme-features\");\r\n            \r\n            this.appendChild(features);\r\n\r\n            for(let feature in featuresObject){\r\n\r\n                let featureBox = document.createElement(\"section\");\r\n\r\n                featureBox.classList.add(\"partarum-card-theme-feature-box\");\r\n\r\n                features.appendChild(featureBox);\r\n\r\n                this.setList(featuresObject[feature], featureBox).then();\r\n            }\r\n\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    setList(feature, featureBox){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            let header = document.createElement(\"header\");\r\n\r\n            header.className = \"box-row center\";\r\n\r\n            let headerText = document.createTextNode(feature.title);\r\n\r\n            header.appendChild(headerText);\r\n\r\n            featureBox.appendChild(header);\r\n\r\n            if(\"icon\" in feature){\r\n\r\n                let icon = document.createElement(\"i\");\r\n                \r\n                icon.className = feature.icon.class;\r\n\r\n                if(\"position\" in feature.icon){\r\n\r\n                    this.setIcon(icon, headerText, feature.icon.position, feature.icon.class);\r\n                }\r\n            }\r\n\r\n            let section = document.createElement(\"section\");\r\n\r\n            featureBox.appendChild(section);\r\n\r\n            let lastElement = [];\r\n\r\n            let list = feature.list;\r\n\r\n            for(let key in list){\r\n\r\n                switch(key){\r\n\r\n                    case \"icon\":\r\n\r\n                        let icon = document.createElement(\"i\");\r\n\r\n                        this.setIcon(icon, lastElement.at(-1) ?? null, list.icon.position, list.icon.class);\r\n\r\n                        lastElement.push(icon);\r\n\r\n                        break;\r\n\r\n                    default:\r\n\r\n                        if(key.includes(\"text\")){\r\n\r\n                            lastElement.push(document.createElement(\"p\"));\r\n\r\n                            lastElement.at(-1).appendChild(document.createTextNode(list[key]));\r\n\r\n                            section.appendChild(lastElement.at(-1));\r\n                        }\r\n\r\n\r\n                }\r\n            }\r\n\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    setIcon(iconNode, textNode, position, className){\r\n\r\n        if(textNode !== null) {\r\n\r\n            iconNode.className = className ?? \"\";\r\n\r\n            switch(position){\r\n\r\n                case \"before\":\r\n\r\n                    textNode.before(iconNode);\r\n\r\n                    iconNode.classList.add(\"icon-left\");\r\n\r\n                    break;\r\n\r\n                case \"after\":\r\n\r\n                    textNode.after(iconNode);\r\n\r\n                    iconNode.classList.add(\"icon-right\");\r\n\r\n                    break;\r\n\r\n                case \"middle\":\r\n\r\n                    textNode.after(iconNode);\r\n\r\n                    iconNode.classList.add(\"icon-left\", \"icon-right\");\r\n\r\n                    break;\r\n\r\n                default:\r\n\r\n                    textNode.before(iconNode);\r\n\r\n                    iconNode.classList.add(\"icon-left\");\r\n\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n(customElements.get(\"partarum-card-theme-box\") === undefined) && customElements.define(\"partarum-card-theme-box\", HTMLCardThemeBox);\r\n\r\nexport {HTMLCardThemeBox};", "import {HTMLPartarumElement} from \"../HTMLPartarumElement.js\";\r\nimport {HTMLCardThemeBox} from \"./HTMLCardThemeBox.js\";\r\n\r\nclass HTMLCardTopicBox extends HTMLPartarumElement {\r\n\r\n    cardKey = 1;\r\n\r\n    constructor(config, dom, id, cardBoxObject){\r\n        super(config, \"section\", dom, id);\r\n\r\n        this.root.cardBoxObject = cardBoxObject;\r\n    }\r\n\r\n    connectedCallback(){\r\n\r\n        super.connectedCallback();\r\n\r\n        this.id = this.root.id;\r\n\r\n        let display = ((\"display\" in this.root.cardBoxObject) && (this.root.cardBoxObject.display === true)) ? \"grid\" : \"zero\";\r\n\r\n        this.classList.add(display, \"grid-auto-column\", \"product-cards-box-shadow\");\r\n\r\n        this.loadElements().then();\r\n    }\r\n\r\n    async loadElements(){\r\n\r\n        await this.setThemeBoxes();\r\n    }\r\n\r\n    setThemeBoxes(){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            for(let key in this.root.cardBoxObject){\r\n\r\n                switch(key){\r\n\r\n                    case \"cards\":\r\n\r\n                        for(let cardKey in this.root.cardBoxObject.cards){\r\n\r\n                            this.root.dom.get(\"Categories\").add(this.id, this.root.dom.get(this.id));\r\n\r\n                            let card = this.root.cardBoxObject.cards[cardKey];\r\n\r\n                            this.addThemeBox(card, cardKey);\r\n\r\n                            this.cardKey++;\r\n                        }\r\n\r\n                        break;\r\n                    case \"card\":\r\n\r\n                        this.addThemeBox(this.root.cardBoxObject.card);\r\n\r\n                        this.cardKey++;\r\n\r\n                        break;\r\n                    case \"subTopic\":\r\n\r\n                        // ! Menubuttons und Canvas noch mit hinzuf\u00FCgen\r\n\r\n                        let withSubCategory = this.root.dom.get(this.id);\r\n\r\n                        withSubCategory.type = \"WithSubCategories\";\r\n\r\n                        withSubCategory.data = {\r\n                            subCategories: []\r\n                        };\r\n\r\n                        this.root.dom.get(\"Categories\").add(this.id, withSubCategory);\r\n\r\n                        let subBox = this.root.cardBoxObject.subTopic;\r\n\r\n                        let cbo = this.root.dom.get(\"CardBoxObject\");\r\n\r\n                        for(let [key, value] of cbo.subBoxes){\r\n\r\n                            for(let [subKey, subValue] of value.startMenu){\r\n\r\n                                let id = \"productCategory_\" + subKey;\r\n\r\n                                this.root.dom.add( id, {\r\n                                    themes: {},\r\n                                    topic: new HTMLCardTopicBox(this.root.config, this.root.dom, id, subBox[subValue]),\r\n                                    type: \"SubCategories\",\r\n                                    data: {\r\n                                        category: this.id\r\n                                    }\r\n                                });\r\n\r\n                                withSubCategory.data.subCategories.push(id);\r\n\r\n                                this.appendChild(this.root.dom.get(id).topic);\r\n                            }\r\n                        }\r\n                }\r\n            }\r\n\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    addThemeBox(card, cardKey = this.cardKey){\r\n\r\n        let cacheObject = this.root.dom.get(this.id).themes;\r\n\r\n        card.parent = this.id;\r\n\r\n        let title = card.title;\r\n\r\n        let id = \"productCard_\" + title.replace(\" \", \"_\") ?? cardKey + \"_of_\" + this.id;\r\n\r\n        card.id = id;\r\n\r\n        cacheObject[id] = {\r\n\r\n            theme: new HTMLCardThemeBox(this.root.config, this.root.dom, id, card)\r\n        };\r\n\r\n        this.appendChild(cacheObject[id].theme);\r\n    }\r\n\r\n    addCanvas(){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            resolve();\r\n        });\r\n    }\r\n}\r\n\r\n(customElements.get(\"partarum-card-topic-box\") === undefined) && customElements.define(\"partarum-card-topic-box\", HTMLCardTopicBox);\r\n\r\nexport {HTMLCardTopicBox};", "import {HTMLPartarumElement} from \"../HTMLPartarumElement.js\";\r\nimport {HTMLCardTopicBox} from \"./HTMLCardTopicBox.js\";\r\n\r\nclass HTMLCardTopicBody extends HTMLPartarumElement {\r\n\r\n    constructor(config, id, dom){\r\n        super(config, \"article\", dom, id);\r\n\r\n        this.cardBoxObject = this.root.dom.get(\"CardBoxObject\");\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n\r\n        this.className = \"box-row box-center\";\r\n\r\n        this.loadElements().then();\r\n    }\r\n\r\n    async loadElements(){\r\n\r\n        await this.addTopicBox();\r\n    }\r\n\r\n    addTopicBox(){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            for(let [key, value] of this.cardBoxObject.topicBoxes){\r\n\r\n                let id = \"productCategory_\" + key;\r\n\r\n                this.root.dom.add(id, {\r\n                    themes: {},\r\n                    topic: new HTMLCardTopicBox(this.root.config, this.root.dom, id, value),\r\n                    type: \"Categories\",\r\n                    data: {}\r\n                });\r\n\r\n                this.appendChild(this.root.dom.get(id).topic);\r\n            }\r\n\r\n            resolve();\r\n        });\r\n    }\r\n}\r\n\r\n(customElements.get(\"partarum-card-topic-body\") === undefined) && customElements.define(\"partarum-card-topic-body\", HTMLCardTopicBody);\r\n\r\nexport {HTMLCardTopicBody};", "class HTMLCardBoxObject {\r\n\r\n\r\n    // ! TODO Als Worker gestalten\r\n\r\n    /*\r\n        let topic: [\r\n            {\r\n                name: \"Webspace\",\r\n                cards: [\r\n                    {\r\n                        title: \"WebBase\"\r\n                    },\r\n                    {\r\n                        title: \"WebBusiness\"\r\n                    },\r\n                    {\r\n                        title: \"WebEnterprise\"\r\n                    }\r\n                ],\r\n                display: true\r\n\r\n            },\r\n            {\r\n                name: \"Server\",\r\n                subTopic: [\r\n                    {\r\n                        name: \"Ipv4\",\r\n                        cards: [\r\n                            {\r\n                                title: \"vServer S\"\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        name: \"Ipv6\",\r\n                        cards: [\r\n\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                name: \"Storage\",\r\n                card: {\r\n                    title: \"\"\r\n                }\r\n            }\r\n        ]\r\n     */\r\n\r\n    startMenu = new Map();\r\n\r\n    topicIDs = Partarum.Helper.Hex.createIndex(true);\r\n\r\n    topicBoxes = new Map();\r\n\r\n    subBoxes = new Map();\r\n\r\n    lastID = 0x00000000000001;\r\n\r\n    ready = false;\r\n\r\n    config = {};\r\n\r\n\r\n    constructor(config){\r\n\r\n        // ! {surface: , topic: } || [topic]\r\n\r\n        this.checkConfig(config).then( () => {\r\n\r\n            this.analyseConfig(this.config.topic).then(()=>{\r\n                this.ready = true;\r\n            });\r\n        });\r\n    }\r\n\r\n    checkConfig(config){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            if(Array.isArray(config)){\r\n\r\n                this.config.topic = config;\r\n\r\n            } else {\r\n\r\n                this.config = config;\r\n            }\r\n\r\n\r\n            resolve(true);\r\n            //console.dir(this.config);\r\n        })\r\n    }\r\n\r\n    async analyseConfig(topic){\r\n\r\n        if(topic instanceof Object ){\r\n\r\n            if(Array.isArray(topic)){\r\n\r\n                for(let topicObject of topic){\r\n\r\n                    // name, subTopic,  cards, card\r\n\r\n                    this.lastID = this.topicIDs.next(true);\r\n\r\n                    this.topicBoxes.set(this.lastID, {});\r\n\r\n                    for(let topicKey in topicObject){\r\n\r\n                       await this[(topicKey === \"name\") ? \"topicName\" : topicKey](topicObject[topicKey]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    checkStatus(){\r\n\r\n        return new Promise((resolve) =>  {\r\n\r\n            let int = setInterval(() => {\r\n\r\n                if(this.ready === true){\r\n\r\n                    resolve(true);\r\n\r\n                    clearInterval(int);\r\n                }\r\n\r\n            }, 100);\r\n        });\r\n\r\n    }\r\n\r\n    topicName(topic){\r\n\r\n        return new Promise((resolve)=>{\r\n\r\n            this.startMenu.set(this.lastID, topic);\r\n\r\n            resolve(true);\r\n        })\r\n\r\n\r\n        // create Button and TopicBox\r\n    }\r\n\r\n    subTopic(cardObject){\r\n\r\n        // create SubButton and TopicBox\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            let convert = Object.entries(cardObject).map((cards)=> {\r\n\r\n                return cards[1];\r\n            });\r\n\r\n            let subCardBoxObject = new HTMLCardBoxObject(convert); // ! das neue Object f\u00FCrs Submenu\r\n\r\n            subCardBoxObject.checkStatus().then( () => {\r\n\r\n                this.subBoxes.set(this.lastID, subCardBoxObject);\r\n\r\n                this.topicBoxes.get(this.lastID).subTopic = cardObject;\r\n\r\n                resolve(true);\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n\r\n    card(cardObject) {\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            this.topicBoxes.get(this.lastID).card = cardObject;\r\n\r\n            resolve(true);\r\n        })\r\n        // create one card\r\n\r\n    }\r\n\r\n    cards(cardsObject){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            this.topicBoxes.get(this.lastID).cards = cardsObject;\r\n\r\n            resolve(true);\r\n        })\r\n        // create more than one\r\n\r\n    }\r\n\r\n    display(value){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            this.topicBoxes.get(this.lastID).display = value;\r\n\r\n            resolve(true);\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport {HTMLCardBoxObject};", "import {HTMLPartarumElement} from \"../HTMLPartarumElement.js\";\r\nimport {HTMLCardBoxHeader} from \"./HTMLCardBoxHeader.js\";\r\nimport {HTMLCardBoxMenu} from \"./HTMLCardBoxMenu.js\";\r\nimport {HTMLCardTopicBody} from \"./HTMLCardTopicBody.js\";\r\nimport {HTMLCardBoxObject} from \"./HTMLCardBoxObject.js\";\r\n\r\nclass HTMLCardBoxBody extends HTMLPartarumElement {\r\n\r\n    constructor(config, name, dom){\r\n\r\n        super(config, name, dom, \"partarumCardBoxBody\");\r\n    }\r\n\r\n    connectedCallback(){\r\n\r\n        super.connectedCallback();\r\n\r\n        this.analyseConfig().then(()=>{\r\n\r\n            //console.table(this.cardBoxObject);\r\n\r\n            this.loadElements().then();\r\n        });\r\n\r\n    }\r\n\r\n    analyseConfig(){\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            if((\"topic\" in this.root.config) && (\"surface\" in this.root.config)){\r\n\r\n                this.cardBoxObject = new HTMLCardBoxObject(this.root.config);\r\n\r\n                this.cardBoxObject.checkStatus().then(() => {\r\n\r\n                    //let surface = this.root.config.surface;\r\n\r\n                    resolve(true);\r\n                });\r\n\r\n                this.root.dom.add(\"CardBoxObject\", this.cardBoxObject);\r\n\r\n            } else {\r\n\r\n                reject();\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    async loadElements(){\r\n\r\n        let theme = this.root.config?.theme ?? \"classic\";\r\n\r\n        switch(theme){\r\n\r\n            case \"classic\": \r\n\r\n                await this.setHeader();\r\n                await this.setStartMenu();\r\n                await this.setSubMenu();\r\n                await this.setTopicBody();\r\n\r\n                break;\r\n            case \"noDraw\":\r\n\r\n                await this.setHeader();\r\n                await this.setStartMenu(false);\r\n                await this.setSubMenu(false);\r\n                await this.setTopicBody();\r\n\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    setHeader(){\r\n\r\n        return new Promise((resolve)=>{\r\n\r\n            this.root.dom.add(\"CardBoxHeader\", new HTMLCardBoxHeader(this.root.config, \"card-box-menu\", this.root.dom), null);\r\n            this.appendChild(this.root.dom.get(\"CardBoxHeader\"));\r\n\r\n            resolve(true);\r\n        });\r\n\r\n    }\r\n\r\n    setStartMenu(draw = true){\r\n\r\n        return new Promise((resolve)=>{\r\n\r\n            let ar = this.cardBoxObject.startMenu;\r\n\r\n            this.setMenu(\"productGroupNav\", this.root.config, \"productGroupNav\").then(() => {\r\n\r\n                for(let [id, name] of ar){\r\n\r\n                    this.root.dom.get(\"productGroupNav\").addTopic(name, id, \"button\", this.root);\r\n                }\r\n\r\n                (draw === true) && this.setCanvas(\"canvas\", this.root.dom.get(\"productGroupNav\")).then(() => {\r\n\r\n                    resolve(true);\r\n                });\r\n\r\n\r\n            });\r\n        });\r\n    }\r\n\r\n    setSubMenu(draw = true){\r\n\r\n        return new Promise((resolve)=>{\r\n\r\n            // ! Hier das Submenu + Canvas setzen !\r\n\r\n            let cardSubBoxes = this.cardBoxObject.subBoxes;\r\n\r\n            let boxCounter = 0;\r\n\r\n            let displayMenu = this.root.dom.get(\"DisplayMenu\");\r\n\r\n            let categories = this.root.dom.get(\"Categories\");\r\n\r\n            for(let [parentID, subBox] of this.cardBoxObject.subBoxes){\r\n\r\n                let menuID = \"categoryMenu_\" + parentID;\r\n\r\n                let canvasID = \"categoryCanvas_\" + parentID;\r\n\r\n                displayMenu.add(\"productCategory_\" + parentID, {\r\n                   \"categoryMenu\": menuID,\r\n                   \"categoryCanvas\": canvasID\r\n                });\r\n\r\n                let menuObject = {};\r\n\r\n                let canvasObject = {};\r\n\r\n                let startMenu = subBox.startMenu;\r\n\r\n                let menuCounter = 0;\r\n\r\n                this.setMenu(menuID, subBox.config, menuID).then(() => {\r\n\r\n                    for (let [id, name] of startMenu) {\r\n\r\n                        let menu = this.root.dom.get(menuID);\r\n\r\n                        menu.addTopic(name, id, \"button\", this.root).then(() => {\r\n\r\n                            menuCounter++;\r\n\r\n                            menuObject.topic = menu;\r\n\r\n                            if((boxCounter === cardSubBoxes.size) && (menuCounter === startMenu.size)){\r\n\r\n                                (draw === true) && this.setCanvas(canvasID, this.root.dom.get(menuID), false).then(() => {\r\n\r\n                                    canvasObject.topic = this.root.dom.get(canvasID);\r\n\r\n                                    categories.add(canvasID, canvasObject);\r\n\r\n                                    categories.add(menuID, menuObject);\r\n\r\n                                    menu.classList.add(\"zero\");\r\n\r\n                                    resolve(true);\r\n\r\n                                });\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n                boxCounter++;\r\n            }\r\n        });\r\n    }\r\n\r\n    setMenu(menuType, config, id){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            this.root.dom.add(menuType, new HTMLCardBoxMenu(config, id, this.root.dom), null);\r\n\r\n            this.root.dom.add(\"CardBoxHeader\", this.root.dom.get(menuType), \"append\");\r\n\r\n            resolve(true);\r\n        });\r\n    }\r\n\r\n    setCanvas(id = \"canvas\", menu, draw = true){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            Partarum.Draw.Plotter.createBoard(id, {width: menu.offsetWidth.toString(), height: \"160\"}).then((canvas) => {\r\n\r\n\r\n                this.root.dom.add(canvas.id, canvas);\r\n\r\n                (draw === false) && canvas.classList.add(\"zero\");\r\n\r\n                this.root.dom.get(\"DrawBoard\").add(id, canvas);\r\n\r\n                this.root.dom.add(\"CardBoxHeader\", canvas, \"append\");\r\n\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    setTopicBody(){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            // create the box for topicboxes\r\n\r\n            this.root.dom.add(\"CardTopicBody\", new HTMLCardTopicBody(this.root.config, \"card-topic-body\", this.root.dom), null);\r\n            this.appendChild(this.root.dom.get(\"CardTopicBody\"));\r\n\r\n            resolve(true);\r\n        });\r\n    }\r\n\r\n    addTopicBox(){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n\r\n            // create a CardTopicBox\r\n        });\r\n\r\n    }\r\n}\r\n\r\n(customElements.get(\"partarum-card-box-body\") === undefined) && customElements.define(\"partarum-card-box-body\", HTMLCardBoxBody);\r\n\r\nexport {HTMLCardBoxBody};", "import {Hex} from \"../Helper/Hex.js\";\n\nclass DrawElementAnalyzer {\n\n    static worker;\n\n    static analyzerID;\n\n    static promiseCache = {};\n\n    static intCache = {};\n\n    id;\n\n    cache = new WeakMap();\n\n    constructor(){\n\n        DrawElementAnalyzer.analyzerID ??= Hex.createIndex();\n\n        this.id = DrawElementAnalyzer.analyzerID.next(true);\n    }\n\n    getID(){\n        return this.id;\n    }\n\n    init(board, nodes){\n\n        // ! pr\u00FCfen ob Daten schon vorhanden sind - macht nur Sinn an einem statischen Bild\n\n        DrawElementAnalyzer.worker ??= new Worker(\"/Partarum/PartarumJS/Worker/DrawWorker/AnalyzeWorker\");\n\n        let boardObject = {\n            width: board.offsetWidth ?? board.innerWidth,\n            height: board.offsetHeight ?? board.innerHeight,\n            top: board.offsetTop ?? 0,\n            left: board.offsetLeft ?? 0\n        };\n\n        let nodeMap = [];\n\n        for(let node of nodes){\n\n            let nodeObject = {\n\n                width: node.offsetWidth,\n                height: node.offsetHeight,\n                top: node.offsetTop,\n                left: node.offsetLeft\n            };\n\n            this.cache.set(nodeObject, node);\n\n            nodeMap.push(nodeObject);\n        }\n\n        DrawElementAnalyzer.worker.postMessage([boardObject, nodeMap, this.id]);\n\n        // TODO: Die Promise ben\u00F6tigen einen Cache zur Identifizierung, damit resolve() auf jedes Promise ausgef\u00FChrt wird\n\n        DrawElementAnalyzer.intCache[this.id] = {};\n\n        DrawElementAnalyzer.promiseCache[this.id] = {};\n\n        DrawElementAnalyzer.promiseCache[this.id].promise = new Promise((resolve, reject) => {\n\n            /*\n                TODO: Der Worker muss gecacht werden oder statisch laufen\n\n                - damit es nicht zu \u00FCberschneidungen kommt,\n                muss jede Message eine ID passenden zur Herkunft der Aufgabe mitbekommen\n             */\n\n\n\n            DrawElementAnalyzer.worker.onmessage = (data) => {\n\n                DrawElementAnalyzer.promiseCache[data.data.id].data = data.data;\n\n                console.dir(DrawElementAnalyzer.promiseCache);\n\n                DrawElementAnalyzer.intCache[data.data.id].id = setInterval(DrawElementAnalyzer.intCache[data.data.id].fn, 200, data);\n\n            };\n\n            DrawElementAnalyzer.intCache[this.id].fn = (test) => {\n\n                (this.id === test.data.id) && clearInterval(DrawElementAnalyzer.intCache[test.data.id].id);\n\n                resolve(test.data);\n            };\n        });\n\n        return(DrawElementAnalyzer.promiseCache[this.id].promise);\n    }\n}\n\nexport {DrawElementAnalyzer};", "import {DrawElementAnalyzer} from \"./DrawElementAnalyzer.js\";\n   // ! TODO-me Plot ab\u00E4ndern !\n/*\n        board:\n            id = canvasElement\n\n        collection:\n\n            - f\u00FCr jedes funktionale Thema  ein key => Map -> canvasID => Map ->\n\n            Beispiel:\n                        collection.set(\"setLine\", new Map());\n                        collection.get(\"setLine\").set(\"boards\", new Map())\n                        collection.get(\"setLine\").get(\"boards\").set(startPoint, canvasID)\n                        collection.get(\"setLine\").set(\"endpoints\", new Map())\n                        collection.get(\"setLine\").get(\"endpoints\").set(startPoint, [..endPoints])\n\n                        Was jetzt? Was ist wichtig und was ben\u00F6tigen wir?\n\n                            F\u00FCr jede ID ( der Startpunkt ) wird ein spezielles Schema gespeichert - als die Zielpunkte der Linie\n\n        ctx: WeakMap\n\n            - canvasElement = canvasCTX\n */\n\nclass Plot {\n\n    theme;\n\n    board;\n\n    nodes = new DrawElementAnalyzer(); // das Board kann mit init() analysiert werden\n\n    analyzerID;\n\n    lineParams = {\n        start: {\n            moveTo: \"start\" | \"center\" | \"end\",\n            plus: null,\n            minus: null\n        },\n        goal: {\n            moveTo: \"start\" | \"center\" | \"end\",\n            plus: null,\n            minus: null\n        }\n    };\n\n    constructor(board, id = null) {\n\n        /*\n            TODO: checken ob es f\u00FCr die Konstellation schon einen Eintrag gibt\n             - sofern mitgegeben, denn die eigentlichen Nodes kommen erst noch\n         */\n\n        this.analyzerID = id ?? this.nodes.getID();\n\n        console.dir(this.analyzerID);\n\n        this.board = (board instanceof HTMLCanvasElement) ? board : document.createElement(\"canvas\");\n    }\n\n    /*\n    ! sp\u00E4ter noch auf SVG ausweiten\n       let svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n\n       svg.setAttribute('viewBox','0 0 200 200');\n       svg.setAttribute('width',pCards.offsetWidth.toString());\n       svg.setAttribute('height','160');\n\n       pCards.appendChild(svg);\n\n        */\n\n\n    setTheme(theme){\n\n        this.theme = theme;\n    }\n\n    // das Board analysieren und die wichtigsten Eckpunkte f\u00FCr CTX bereitstellen - das was bis jetzt this.setLines() macht\n    setNodes(...nodes){\n\n        return new Promise((resolve, reject) => {\n\n            this.nodes.init(this.board, (Array.isArray(nodes)) ? nodes : [nodes]).then((data) => {\n\n                console.dir(Partarum.Cache.PlotCache.getCollection(\"PlotterCache\", \"Plotter\", \"setLine\").entries());\n\n                resolve({data: data, ctx: this.board.getContext(\"2d\")});\n            });\n\n\n        });\n    }\n\n    setCanvasTo(element, position = \"append\" | \"after\" | \"before\" | \"replace\"){\n\n        switch(position){\n\n            case \"append\":\n                element.appendChild(this.board);\n                break;\n            case \"after\":\n                element.after(this.board);\n                break;\n            case \"before\":\n                element.before(this.board);\n                break;\n            case \"replace\":\n                element.replaceWith(this.board);\n\n        }\n    }\n}\n\nexport {Plot};\n", "import {Plot} from \"../../Draw/Plot.js\";\r\n\r\n/*\r\n        Was ist das - was habe ich mir bei der klasse gedacht?\r\n */\r\n\r\nclass HTMLCardDrawBox {\r\n\r\n    root = {\r\n        dom: {},\r\n        app: new Partarum()\r\n    };\r\n\r\n    plotter = Partarum.Draw.Plotter\r\n\r\n    constructor(config, name, dom, id) {\r\n\r\n        this.root.dom = dom;\r\n\r\n        this.root.config = config;\r\n\r\n        this.root.name = name;\r\n\r\n        this.root.id = (typeof id === \"string\") ? id.replace(\" \", \"_\") : \"\";\r\n    }\r\n\r\n    createPlot(board, theme, nodes, clear = false){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            let plot = new Plot(board);\r\n\r\n            plot.setTheme(theme);\r\n\r\n            plot.setNodes(nodes).then(() => {\r\n\r\n                resolve(plot);\r\n            });\r\n\r\n        });\r\n    }\r\n    // TODO: setLines zu createPlot umbauen\r\n    setLines(canvas, cardTheme, startNode , goalNode, clear = false) {\r\n        \r\n        this.plotter.record(canvas,\"setLine\", cardTheme, goalNode.id, ()=>{\r\n\r\n            let plot = new Plot(canvas);\r\n\r\n            console.dir(plot.analyzerID);\r\n\r\n            plot.setNodes(startNode, goalNode).then((data)=>{\r\n\r\n                let ctx = data.ctx;\r\n\r\n                console.dir(data.data.id);\r\n\r\n                let board = data.data.board;\r\n                let start = data.data.nodes[0];\r\n                let goal = data.data.nodes[1];\r\n\r\n                (clear !== false) && ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n                ctx.strokeStyle = \"#007F85\";\r\n                ctx.lineWidth = 3;\r\n\r\n                ctx.beginPath();\r\n\r\n                ctx.moveTo(start.nodeCTX.centerTop.x, 0);\r\n                ctx.lineTo(goal.nodeCTX.centerTop.x, goal.nodeCTX.centerTop.y);\r\n\r\n                ctx.stroke();\r\n\r\n\r\n            });\r\n\r\n        }).then(()=>{\r\n\r\n            this.plotter.render(\"setLine\", cardTheme);\r\n        }).catch((error) => {\r\n\r\n            console.dir(error);\r\n            console.log(\"ERROR\");\r\n        });\r\n    }\r\n}\r\n\r\nexport {HTMLCardDrawBox};", "import {HTMLPartarumHost} from \"./HTMLPartarumHost.js\";\r\nimport {HTMLCardBoxBody} from \"./PartarumCardBox/HTMLCardBoxBody.js\";\r\nimport {HTMLCardDrawBox} from \"./PartarumCardBox/HTMLCardDrawBox.js\";\r\n\r\nclass HTMLCardBox extends HTMLPartarumHost {\r\n\r\n    constructor(config) {\r\n\r\n        super(config, \"partarum-card-box\", \"partarumCardBox\");\r\n\r\n        this.loadStyle({\r\n\r\n            link: \"/Partarum/PartarumCSS/PartarumElements/cardBox.css\",\r\n            style: document.querySelectorAll('style[id*=\"fa\"]')\r\n\r\n        }).then(() => {\r\n\r\n        });\r\n\r\n        this.root.dom.add(\"CardBoxBody\", new HTMLCardBoxBody(this.root.config, \"body\", this.root.dom), null);\r\n\r\n        this.root.dom.get(\"CardBoxBody\").classList.add(\"single-box-center-medium\");\r\n\r\n        this.root.dom.add(\"shadowBox\", this.root.dom.get(\"CardBoxBody\"), \"append\");\r\n\r\n        if (Reflect.has(this.root.config, \"parent\")) {\r\n\r\n            this.root.config.parent.appendChild(this);\r\n        } else {\r\n\r\n            document.body.appendChild(this);\r\n        }\r\n\r\n        this.root.dom.add(\"DrawBoard\", this.root.dom.create(\"Canvas\", \"Boards\"));\r\n\r\n        this.root.dom.add(\"CardDrawBox\", new HTMLCardDrawBox);\r\n\r\n        this.root.dom.add(\"Categories\", this.root.dom.create(\"CardBox\", \"Categories\"));\r\n\r\n        this.root.dom.add(\"DisplayCategories\", this.root.dom.create(\"CardBox\", \"DisplayCategories\"));\r\n\r\n        this.root.dom.add(\"DisplayMenu\", this.root.dom.create(\"CardBox\", \"DisplayMenu\"));\r\n\r\n        this.root.dom.add(\"Loader\", this.root.dom.create(\"CardBox\", \"Loader\"));\r\n\r\n        this.root.dom.add(\"Listener\", this.root.dom.create(\"CardBox\", \"Listener\"));\r\n\r\n        this.root.dom.add(\"LastDraw\", new Set());\r\n\r\n        this.root.dom.get(\"Loader\").add(\"Status\", 0);\r\n\r\n\r\n    }\r\n\r\n    connectedCallback(){\r\n        super.connectedCallback();\r\n    }\r\n\r\n\r\n    /*\r\n        ! f\u00FCr CardBox ab\u00E4ndern\r\n     */\r\n\r\n    add(element, topic){\r\n\r\n        this.root.dom[topic].appendChild(element);\r\n    }\r\n\r\n    addTopic(topic){\r\n\r\n        let topicArray = (Array.isArray(topic)) ? topic : [topic];\r\n\r\n        for(let topicName of topicArray){\r\n\r\n            this.root.dom.add(topicName, document.createElement(\"section\"), null);\r\n\r\n            this.root.dom.add(\"CardBoxBody\", this.root.dom.get(topicName), \"append\");\r\n        }\r\n    }\r\n}\r\n\r\n(customElements.get(\"partarum-card-box\") === undefined) && customElements.define(\"partarum-card-box\", HTMLCardBox);\r\n\r\nexport {HTMLCardBox};", "import {HTMLPartarumHost} from \"../HTMLPartarumHost.js\";\r\n\r\nclass HTMLMenuHamburger extends HTMLPartarumHost {\r\n\r\n    /*\r\n           ! max-width 1100px\r\n\r\n     */\r\n\r\n    constructor(config){\r\n        super(config, \"partarum-menu-hamburger\", \"partarumMenuHamburger\");\r\n\r\n        this.loadStyle({\r\n\r\n            link: \"/Partarum/PartarumCSS/PartarumElements/menuHamburger.css\",\r\n            style: document.querySelectorAll('style[id*=\"fa\"]')\r\n\r\n        }).then(() => {\r\n\r\n        });\r\n\r\n        this.root.dom.add(\"input\", document.createElement(\"input\"), null);\r\n        this.root.dom.get(\"input\").setAttribute(\"id\", \"partarumMenuHamburgerTrigger\");\r\n        this.root.dom.get(\"input\").setAttribute(\"type\", \"checkbox\");\r\n        this.root.dom.get(\"input\").classList.add(\"hamburger\");\r\n\r\n        this.root.dom.add(\"shadowBox\", this.root.dom.get(\"input\"), \"append\");\r\n\r\n        if(Reflect.has(config, \"parent\")){\r\n\r\n            if((config?.position === \"left\") || (config?.position === \"center\")){\r\n\r\n                config.parent.before(this);\r\n            } else {\r\n\r\n                config.parent.after(this);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    connectedCallback(){\r\n        super.connectedCallback();\r\n\r\n        this.id = \"partarumMenuHamburger\";\r\n    }\r\n}\r\n\r\n(customElements.get(\"partarum-menu-hamburger\") === undefined) && customElements.define(\"partarum-menu-hamburger\",HTMLMenuHamburger);\r\n\r\nexport {HTMLMenuHamburger};", "import {Hex} from \"../Helper/Hex.js\";\r\n\r\nclass HTMLLayoutElementAnalyzer {\r\n\r\n    static worker;\r\n\r\n    static analyzerID;\r\n\r\n    static promiseCache = {};\r\n\r\n    static intCache = {};\r\n\r\n    id;\r\n\r\n    cache = new WeakMap();\r\n\r\n    constructor(){\r\n\r\n        HTMLLayoutElementAnalyzer.analyzerID ??= Hex.createIndex();\r\n\r\n        this.id = HTMLLayoutElementAnalyzer.analyzerID.next(true);\r\n    }\r\n\r\n    getID(){\r\n        return this.id;\r\n    }\r\n\r\n    init(base, nodes){\r\n\r\n        // ! pr\u00FCfen ob Daten schon vorhanden sind - macht nur Sinn an einem statischen Bild\r\n\r\n        HTMLLayoutElementAnalyzer.worker ??= new Worker(\"/Partarum/PartarumJS/Worker/HTMLWorker/LayoutAnalyzeWorker\");\r\n\r\n        let baseObject = {\r\n            width: base.offsetWidth ?? base.innerWidth,\r\n            height: base.offsetHeight ?? base.innerHeight,\r\n            top: base.offsetTop ?? 0,\r\n            left: base.offsetLeft ?? 0\r\n        };\r\n\r\n        let nodeMap = [];\r\n\r\n        for(let node of nodes){\r\n\r\n            let nodeObject = {\r\n\r\n                width: node.offsetWidth,\r\n                height: node.offsetHeight,\r\n                top: node.offsetTop,\r\n                left: node.offsetLeft\r\n            };\r\n\r\n            this.cache.set(nodeObject, node);\r\n\r\n            nodeMap.push(nodeObject);\r\n        }\r\n\r\n\r\n        HTMLLayoutElementAnalyzer.worker.postMessage([baseObject, nodeMap, this.id]);\r\n\r\n\r\n\r\n        // TODO: Die Promise ben\u00F6tigen einen Cache zur Identifizierung, damit resolve() auf jedes Promise ausgef\u00FChrt wird\r\n\r\n        HTMLLayoutElementAnalyzer.intCache[this.id] = {};\r\n\r\n        HTMLLayoutElementAnalyzer.promiseCache[this.id] = {};\r\n\r\n        HTMLLayoutElementAnalyzer.promiseCache[this.id].promise = new Promise((resolve, reject) => {\r\n\r\n            /*\r\n                TODO: Der Worker muss gecacht werden oder statisch laufen\r\n\r\n                - damit es nicht zu \u00FCberschneidungen kommt,\r\n                muss jede Message eine ID passenden zur Herkunft der Aufgabe mitbekommen\r\n             */\r\n\r\n\r\n\r\n            HTMLLayoutElementAnalyzer.worker.onmessage = (data) => {\r\n\r\n                HTMLLayoutElementAnalyzer.promiseCache[data.data.id].data = data.data;\r\n\r\n                HTMLLayoutElementAnalyzer.intCache[data.data.id].id = setInterval(HTMLLayoutElementAnalyzer.intCache[data.data.id].fn, 200, data);\r\n\r\n            };\r\n\r\n            HTMLLayoutElementAnalyzer.intCache[this.id].fn = (test) => {\r\n\r\n                (this.id === test.data.id) && clearInterval(HTMLLayoutElementAnalyzer.intCache[test.data.id].id);\r\n\r\n                resolve(test.data);\r\n            };\r\n        });\r\n\r\n        return(HTMLLayoutElementAnalyzer.promiseCache[this.id].promise);\r\n    }\r\n}\r\n\r\nexport {HTMLLayoutElementAnalyzer};", "import {HTMLPartarumElement} from \"../HTMLPartarumElement.js\";\r\nimport {HTMLMenuHamburger} from \"./HTMLMenuHamburger.js\";\r\nimport {HTMLLayoutElementAnalyzer} from \"../HTMLLayoutElementAnalyzer.js\";\r\nimport {DrawElementAnalyzer} from \"../../Draw/DrawElementAnalyzer.js\";\r\n\r\nclass HTMLNavBarBody extends HTMLPartarumElement {\r\n\r\n    nodes = new HTMLLayoutElementAnalyzer()\r\n\r\n    constructor(config, name, dom){\r\n\r\n        super(config, name, dom, \"partarumNavBarBody\");\r\n    }\r\n\r\n    connectedCallback(){\r\n\r\n        super.connectedCallback();\r\n\r\n        this.root.connectedCallback(() => {\r\n\r\n            console.dir(\"root connectedCallback\");\r\n\r\n            this.id = \"partarumNavBarBody\";\r\n\r\n            this.analyseConfig().then(()=>{\r\n\r\n                if(Reflect.has(this.root.config, \"nav\")){\r\n\r\n                    this.loadElements().then();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    analyseConfig(config){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n                /*\r\n                    {\r\n                        mobile: {},\r\n                        desktop: {},\r\n                        nav: []\r\n                    }\r\n                 */\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    async loadElements(){\r\n\r\n        await this.setNav(this.root.config.nav);\r\n        await this.setDesktop(this.root.config.desktop);\r\n        await this.setMobile(this.root.config.mobile);\r\n\r\n    }\r\n\r\n    setNav(nav){\r\n        return new Promise((resolve) => {\r\n\r\n            let type = this.root.config?.type;\r\n\r\n            this.root.dom.add(\"nav\", document.createElement(\"nav\"), null);\r\n\r\n            this.appendChild(this.root.dom.get(\"nav\"));\r\n\r\n            switch(type){\r\n                // classic = einfaches <nav> mit <a> Elementen und ein mobile Menu\r\n                case \"classic\":\r\n\r\n                    this.setAnchor(nav, this.root.dom.get(\"nav\")).then(() => resolve());\r\n            }\r\n        });\r\n    }\r\n\r\n    setMobile(config){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            console.dir(config);\r\n\r\n            if(config?.type){\r\n\r\n                switch(config.type){\r\n\r\n                    case \"Hamburger\":\r\n                            let checkbox = new HTMLMenuHamburger({\r\n                                parent: this.root.dom.get(\"nav\"),\r\n                                ...config?.mobile\r\n                            });\r\n\r\n                            //this.root.dom.get(\"nav\").before(checkbox);\r\n\r\n                            resolve();\r\n\r\n                }\r\n            }\r\n\r\n\r\n            if(config?.position){\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    setDesktop(config){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            if(config?.type){\r\n\r\n            }\r\n\r\n            if((config?.position) || ((config?.positionX) || (config?.positionY))){\r\n\r\n                let x = config.positionX || config.position.x || {\r\n                    to: \"center\"\r\n                };\r\n\r\n                let y = config.positionY || config.position.y || {\r\n                    from: 0,\r\n                    to: \"10vh\",\r\n                    height: \"10vh\"\r\n                }\r\n\r\n                Partarum.HTML.getSafeElementByQueryString(config.position.to).then((element) => {\r\n\r\n                    setTimeout(() => {\r\n\r\n                        this.nodes.init(window, [element]).then((data) => {\r\n\r\n                            let vh1 = data.base.height / 100;\r\n\r\n                            console.dir(vh1 * 10);\r\n\r\n                            console.dir(data);\r\n\r\n                            //this.setAnimation(data.nodes[0].top, 10);\r\n                            let animationTop = (data.nodes[0].top / 2) - ((data.base.height / 10) / 2);\r\n\r\n                            this.setAttribute(\"style\", `\r\n                            --animationTop: ${animationTop}px; \r\n                            --animationHeight: ${config.position?.height || \"10vh\"}; \r\n                            animation: simpleNav 2s ease-in-out; \r\n                            animation-fill-mode: forwards; \r\n                            display: grid;\r\n                            grid-template-columns: 1fr 0; \r\n                            color: #F9F9FA;\r\n                            `);\r\n\r\n                            resolve();\r\n                        });\r\n\r\n                    },500);\r\n\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    setAnimation(top, height){\r\n        let style = document.createElement(\"style\");\r\n\r\n        style.textContent = `\r\n            @keyframes simpleNav {\r\n                from {\r\n                    top: 0;\r\n                    height: 0;\r\n                    opacity: 0;                  \r\n                    font-size: 0;\r\n                } \r\n                to {\r\n                    top: calc(calc(${top}px / 2) - calc(${height}vh / 2));\r\n                    height: ${height}vh;\r\n                    opacity: 1;\r\n                    font-size: 1.6rem;\r\n                }\r\n            }\r\n        `;\r\n\r\n        this.appendChild(style);\r\n    }\r\n\r\n    setAnchor(config, parent){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            console.dir(\"setAnchor\");\r\n\r\n            let anchorArray = (Array.isArray(config) ? config : [config]);\r\n\r\n            let counter = 0;\r\n\r\n            for(let anchorConfig of anchorArray){\r\n\r\n                let anchor = document.createElement(\"a\");\r\n\r\n                for(let attr in anchorConfig){\r\n\r\n                    switch(attr){\r\n\r\n                        case \"text\":\r\n\r\n                            anchor.appendChild(document.createTextNode(anchorConfig[attr]));\r\n                            break;\r\n                        default:\r\n                            anchor.setAttribute(attr, anchorConfig[attr]);\r\n                    }\r\n                }\r\n\r\n                parent.appendChild(anchor);\r\n\r\n                counter ++;\r\n\r\n                (counter === anchorArray.length) && resolve();\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n(customElements.get(\"partarum-nav-bar-body\") === undefined) && customElements.define(\"partarum-nav-bar-body\", HTMLNavBarBody);\r\n\r\nexport {HTMLNavBarBody};", "import {HTMLPartarumHost} from \"./HTMLPartarumHost.js\";\r\nimport {HTMLNavBarBody} from \"./PartarumNavBar/HTMLNavBarBody.js\";\r\n\r\nclass HTMLNavBar extends HTMLPartarumHost {\r\n\r\n    constructor(config){\r\n        super(config, \"partarum-nav-bar\", \"partarumNavBar\");\r\n\r\n        this.loadStyle({\r\n\r\n            link: \"/Partarum/PartarumCSS/PartarumElements/navBar.css\",\r\n            style: document.querySelectorAll('style[id*=\"fa\"]')\r\n\r\n        }).then(() => {\r\n\r\n        });\r\n\r\n        this.root.dom.add(\"NavBarBody\", new HTMLNavBarBody(config, \"body\", this.root.dom), null);\r\n\r\n        this.root.dom.get(\"NavBarBody\").classList.add(\"single-box-center-large\");\r\n\r\n        this.root.dom.add(\"shadowBox\", this.root.dom.get(\"NavBarBody\"), \"append\");\r\n\r\n        if(config !== undefined) {\r\n\r\n            if (Reflect.has(config, \"parent\")) {\r\n\r\n                config.parent.appendChild(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    connectedCallback(){\r\n        super.connectedCallback();\r\n\r\n        this.id = \"partarumNavBar\";\r\n    }\r\n}\r\n\r\n(customElements.get(\"partarum-nav-bar\") === undefined) && customElements.define(\"partarum-nav-bar\", HTMLNavBar);\r\n\r\nexport {HTMLNavBar};", "import {HTMLPartarumElement} from \"../HTMLPartarumElement.js\";\r\n\r\nclass HTMLBottomBarBody extends HTMLPartarumElement {\r\n\r\n    constructor(config, name){\r\n\r\n        super(config, name);\r\n\r\n        this.id = \"partarumBottomBarBody\";\r\n    }\r\n}\r\n\r\n(customElements.get(\"partarum-bottom-bar-body\") === undefined) && customElements.define(\"partarum-bottom-bar-body\", HTMLBottomBarBody);\r\n\r\nexport {HTMLBottomBarBody};", "import {HTMLPartarumHost} from \"./HTMLPartarumHost.js\";\r\nimport {HTMLBottomBarBody} from \"./PartarumBottomBar/HTMLBottomBarBody.js\";\r\n\r\nclass HTMLBottomBar extends HTMLPartarumHost {\r\n\r\n    constructor(config){\r\n\r\n        super(config, \"partarum-bottom-bar\");\r\n\r\n        this.id = \"partarumBottomBar\";\r\n\r\n        this.loadStyle({\r\n\r\n            link: \"/Partarum/PartarumCSS/PartarumElements/bottomBar.css\",\r\n            style: document.querySelectorAll('style[id*=\"fa\"]')\r\n\r\n        }).then(()=>{\r\n\r\n        });\r\n\r\n        this.root.dom.add(\"BottomBarBody\", new HTMLBottomBarBody(config, \"body\"), null);\r\n\r\n        this.root.dom.add(\"shadowBox\", this.root.dom.get(\"BottomBarBody\"), \"append\");\r\n\r\n        if(Reflect.has(config, \"parent\")){\r\n\r\n            config.parent.appendChild(this);\r\n        } else {\r\n\r\n            document.body.appendChild(this);\r\n        }\r\n\r\n        this.addTopic([\"leftSide\", \"center\", \"rightSide\"]);\r\n\r\n    }\r\n\r\n    add(element, topic){\r\n\r\n        this.root.dom.add(topic, element, \"append\");\r\n    }\r\n\r\n    addTopic(topic){\r\n\r\n        let topicArray = (Array.isArray(topic)) ? topic : [topic];\r\n\r\n        for(let topicName of topicArray){\r\n\r\n            let topicNode = document.createElement(\"section\");\r\n\r\n            this.root.dom.add(topicName, topicNode, null);\r\n\r\n            this.root.dom.add(\"BottomBarBody\", topicNode, \"append\");\r\n        }\r\n    }\r\n}\r\n\r\n(customElements.get(\"partarum-bottom-bar\") === undefined) && customElements.define(\"partarum-bottom-bar\", HTMLBottomBar);\r\n\r\nexport {HTMLBottomBar};", "import {HTMLPartarumElement} from \"../HTMLPartarumElement.js\";\r\n\r\nclass HTMLCookieBody extends HTMLPartarumElement {\r\n\r\n    constructor(config){\r\n        super(config, \"body\");\r\n\r\n\r\n    }\r\n}\r\n\r\n(customElements.get(\"partarum-cookie-body\") === undefined) && customElements.define(\"partarum-cookie-body\", HTMLCookieBody);\r\n\r\nexport {HTMLCookieBody};", "import {HTMLPartarumElement} from \"../HTMLPartarumElement.js\";\r\n\r\nclass HTMLCookieHeader extends HTMLPartarumElement {\r\n\r\n    constructor(config){\r\n        super(config, \"header\");\r\n\r\n        this.className = \"box box-center-center\";\r\n\r\n        this.root.app.themes = [\r\n            {\r\n                header: {\r\n                    config: {\r\n                        h1: \"Und auch wir benutzen Cookies :)\"\r\n                    },\r\n                    parent: this\r\n                }\r\n            }\r\n        ]\r\n\r\n        this.root.app.create().then();\r\n    }\r\n}\r\n\r\n(customElements.get(\"partarum-cookie-header\") === undefined) && customElements.define(\"partarum-cookie-header\", HTMLCookieHeader);\r\n\r\nexport {HTMLCookieHeader};", "import {HTMLPartarumElement} from \"../HTMLPartarumElement.js\";\r\n\r\nclass HTMLCookieMain extends HTMLPartarumElement {\r\n\r\n    constructor(config){\r\n        super(config, \"main\");\r\n    }\r\n}\r\n\r\n(customElements.get(\"partarum-cookie-main\") === undefined) && customElements.define(\"partarum-cookie-main\", HTMLCookieMain);\r\n\r\nexport {HTMLCookieMain};", "import {HTMLPartarumElement} from \"../HTMLPartarumElement.js\";\r\n\r\nclass HTMLCookieFooter extends HTMLPartarumElement {\r\n\r\n    constructor(config, name, dom){\r\n        super(config, \"footer\");\r\n\r\n        this.root.dom = dom;\r\n\r\n        this.className = \"media-box-row\";\r\n\r\n        let sessionCookieStatus = window.sessionStorage.getItem(\"cookies_accepted\");\r\n\r\n        const COOKIES_ACCEPTED = (!((sessionCookieStatus === null) || (sessionCookieStatus === false)));\r\n\r\n        this.root.app.themes = [\r\n            {\r\n                footer: {\r\n                    config: {\r\n                        section_left: {\r\n                            _attributes: {\r\n                                class: \"media-box-row\"\r\n                            },\r\n                            button_config: {\r\n                                _attributes: {\r\n                                    text: \"Cookie-Einstellungen\"\r\n                                }\r\n                            }\r\n                        },\r\n                        section_right: {\r\n                            _attributes: {\r\n                                class: \"media-box-row\"\r\n                            },\r\n                            button_essential: {\r\n                                _attributes: {\r\n                                    type: \"button\",\r\n                                    id: \"cookieDisable\",\r\n                                    text: \"Nicht akzeptieren\",\r\n                                    addEvent: {\r\n                                        type: \"click\",\r\n                                        topic: \"CookieBanner\",\r\n                                        theme: \"disableCookie\",\r\n                                        name: \"disableCookie_click\",\r\n                                        doThat: ()=> {\r\n\r\n                                            config.cookies.disable.doThat();\r\n\r\n                                            this.root.dom.get(\"CookieBanner\").classList.toggle(\"zero\");\r\n                                        }\r\n                                    }\r\n                                }\r\n                            },\r\n                            button_all: {\r\n                                _attributes: {\r\n                                    type: \"button\",\r\n                                    id: \"cookieActive\",\r\n                                    text: (COOKIES_ACCEPTED === false) ? \"Alle akzeptieren\" : \"Schlie\u00DFen\",\r\n                                    addEvent: {\r\n                                        type: \"click\",\r\n                                        topic: \"CookieBanner\",\r\n                                        theme: \"activeCookie\",\r\n                                        name: \"activeCookie_click\",\r\n                                        targetID: \"cookieActive\",\r\n                                        doThat: (e)=>{\r\n\r\n                                            if(Partarum.System.Cookie.accepted === false){\r\n\r\n                                                this.setCookies(config, \"active\", e);\r\n\r\n                                            }\r\n\r\n                                            this.root.dom.get(\"CookieBanner\").classList.toggle(\"zero\");\r\n\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    parent: this\r\n                }\r\n            }\r\n        ];\r\n\r\n        this.root.app.create().then();\r\n    }\r\n\r\n    // ! den Inhalt der Funktion sp\u00E4ter noch auslagern !!!\r\n\r\n    setCookies(config, action, e){\r\n\r\n        Partarum.System.Cookie.init().then((cookieTest)=>{\r\n\r\n            if(cookieTest.status === true) {\r\n\r\n                switch (action) {\r\n\r\n                    case \"active\":\r\n\r\n                        Partarum.System.Cookie.toAgree(config).then(()=>{\r\n\r\n                            this.root.dom.get(\"shadowBox\").getElementById(\"cookieActive\").innerText = \"Schlie\u00DFen\";\r\n                        });\r\n\r\n                        break;\r\n                    case \"disable\":\r\n\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n(customElements.get(\"partarum-cookie-footer\") === undefined) && customElements.define(\"partarum-cookie-footer\", HTMLCookieFooter);\r\n\r\nexport {HTMLCookieFooter};", "import {HTMLPartarumElement} from \"../HTMLPartarumElement.js\";\r\nimport {HTMLCookieBody} from \"./HTMLCookieBody.js\";\r\nimport {HTMLCookieHeader} from \"./HTMLCookieHeader.js\";\r\nimport {HTMLCookieMain} from \"./HTMLCookieMain.js\";\r\nimport {HTMLCookieFooter} from \"./HTMLCookieFooter.js\";\r\n\r\nclass HTMLCookieBanner extends HTMLPartarumElement {\r\n\r\n    constructor(config, dom){\r\n        super(config, \"banner\");\r\n\r\n        this.id = \"PartarumCookieBanner\";\r\n\r\n        this.className = \"single-box-center\";\r\n\r\n        this.root.config = config;\r\n\r\n        this.root.dom = dom;\r\n\r\n        this.loadBody().then();\r\n    }\r\n\r\n    async loadBody(){\r\n\r\n        await this.setBody();\r\n        await this.setHeader();\r\n        await this.setMain();\r\n        await this.setFooter();\r\n    }\r\n\r\n    setBody(){\r\n\r\n        return new Promise((resolve)=>{\r\n\r\n            this.root.dom.add(\"CookieBody\", new HTMLCookieBody(this.root.config, \"body\"), null);\r\n            this.appendChild(this.root.dom.get(\"CookieBody\"));\r\n\r\n            resolve(true);\r\n        });\r\n\r\n    }\r\n\r\n    setHeader(){\r\n\r\n        return new Promise((resolve)=>{\r\n\r\n            this.root.dom.add(\"CookieHeader\", new HTMLCookieHeader(this.root.config, \"header\"), null);\r\n            this.root.dom.add(\"CookieBody\", this.root.dom.get(\"CookieHeader\"), \"append\");\r\n\r\n            resolve(true);\r\n        });\r\n\r\n    }\r\n\r\n    setMain(){\r\n\r\n        return new Promise((resolve)=>{\r\n\r\n            this.root.dom.add(\"CookieMain\", new HTMLCookieMain(this.root.config, \"main\"), null);\r\n            this.root.dom.add(\"CookieBody\", this.root.dom.get(\"CookieMain\"), \"append\");\r\n\r\n            resolve(true);\r\n        });\r\n\r\n    }\r\n\r\n    setFooter(){\r\n\r\n        return new Promise((resolve)=>{\r\n\r\n            this.root.dom.add(\"CookieFooter\", new HTMLCookieFooter(this.root.config, \"footer\", this.root.dom), null);\r\n            this.root.dom.add(\"CookieBody\", this.root.dom.get(\"CookieFooter\"), \"append\");\r\n\r\n            resolve(true);\r\n        });\r\n\r\n    }\r\n}\r\n\r\n(customElements.get(\"partarum-cookie-banner\") === undefined) && customElements.define(\"partarum-cookie-banner\", HTMLCookieBanner);\r\n\r\nexport {HTMLCookieBanner};", "import {HTMLPartarumHost} from \"./HTMLPartarumHost.js\";\r\nimport {HTMLCookieBanner} from \"./PartarumCookie/HTMLCookieBanner.js\";\r\n\r\nclass HTMLCookie extends HTMLPartarumHost{\r\n\r\n    constructor(config){\r\n\r\n        const LOG = Partarum.Log.create(\"HTMLCookie\", \"construct\");\r\n\r\n        LOG.add(\"HTMLCookie\", \"construct\", \"start\");\r\n\r\n\r\n        super(config, \"partarum-cookie\");\r\n\r\n        this.root.status = {\r\n            cookieBanner: false,\r\n            cookiesActivated: false,\r\n            cookiesAccepted: false,\r\n            cookiesInUse: false\r\n        }\r\n\r\n        Partarum.System.Cookie.init().then((result)=>{\r\n\r\n            Partarum.Log.add(\"HTMLCookie\", \"construct\", \"after Cookie.init()\");\r\n\r\n            const COOKIE_TEST = result;\r\n\r\n            const COOKIE_STATUS_ACTIVATED = COOKIE_TEST.status;\r\n\r\n            const COOKIE_STATUS_ACCEPTED = COOKIE_TEST.accepted;\r\n\r\n            const COOKIE_STATUS_INUSE = COOKIE_TEST.inUse;\r\n\r\n            this.root.status.cookiesActivated = COOKIE_STATUS_ACTIVATED;\r\n\r\n            this.root.status.cookiesAccepted = COOKIE_STATUS_ACCEPTED;\r\n\r\n            this.root.status.cookiesInUse = COOKIE_STATUS_INUSE;\r\n\r\n            if(COOKIE_STATUS_ACTIVATED === true) {\r\n\r\n                Partarum.Log.add(\"HTMLCookie\", \"construct\", \"activated === true\");\r\n\r\n                this.id = \"partarumCookie\";\r\n\r\n                this.loadStyle({\r\n\r\n                    link: \"/Partarum/PartarumCSS/PartarumElements/cookieBanner.css\",\r\n                    style: document.querySelectorAll('style[id*=\"fa\"]')\r\n\r\n                }).then(() => {\r\n\r\n                    this.root.app.themes = [\r\n                        {\r\n                            header: {\r\n                                config: {\r\n                                    i: {\r\n                                        _attributes: {\r\n                                            id: \"partarumCookieIcon\",\r\n                                            class: \"fa-duotone fa-cookie-bite fa-flip fa-3dicon\",\r\n                                            style: (this.closest(\"#partarumBottomBarBody\") !== null) ? `\r\n                                                position: unset;\r\n                                                bottom: unset;\r\n                                                left: unset;\r\n                                            ` : \"\",\r\n                                            addEvent: {\r\n                                                type: \"click\",\r\n                                                topic: \"CookieBanner\",\r\n                                                theme: \"CookieIcon\",\r\n                                                name: \"CookieIcon_click\",\r\n                                                targetID: \"cookieIcon\",\r\n                                                bubble: true,\r\n                                                doThat: (ev) => {\r\n\r\n                                                    console.dir(\"CookieIcon - clicked\");\r\n\r\n                                                    console.dir(this.root.dom.get(\"CookieBanner\"));\r\n\r\n                                                    this.root.dom.get(\"CookieBanner\").classList.toggle(\"zero\");\r\n\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                },\r\n                                parent: this.root.dom.get(\"shadowBox\")\r\n                            }\r\n                        }\r\n                    ];\r\n\r\n                    this.root.app.create(() => {\r\n\r\n                    }).then(() => {\r\n\r\n                        this.setCookieBanner(config).then(() => {\r\n\r\n                            (COOKIE_STATUS_ACCEPTED === true) && Partarum.System.Cookie.toAgree(config, true);\r\n\r\n                        });\r\n                    });\r\n\r\n                });\r\n            }\r\n        }).then(()=>{\r\n\r\n        });\r\n    }\r\n\r\n    async setCookieBanner(config){\r\n\r\n        const LOG = Partarum.Log.create(\"HTMLCookie\", \"setCookieBanner\");\r\n\r\n        LOG.add(\"HTMLCookie\", \"setCookieBanner\", \"start\");\r\n\r\n        await this.loadCookieElement(config);\r\n    }\r\n\r\n    loadCookieElement(config){\r\n\r\n        return new Promise((resolve)=>{\r\n\r\n            this.root.dom.add(\"CookieBanner\", new HTMLCookieBanner(config, this.root.dom), null);\r\n\r\n            if(this.root.status.cookiesAccepted === true) {\r\n\r\n                this.root.dom.get(\"CookieBanner\").classList.toggle(\"zero\");\r\n            }\r\n\r\n            this.root.dom.add(\"shadowBox\", this.root.dom.get(\"CookieBanner\"), \"append\");\r\n\r\n            resolve(true);\r\n        });\r\n\r\n    }\r\n}\r\n\r\n(customElements.get(\"partarum-cookie\") === undefined) && customElements.define(\"partarum-cookie\", HTMLCookie);\r\n\r\nexport {HTMLCookie};", "import {HTMLPartarumHost} from \"./HTMLPartarumHost.js\";\r\n\r\nclass HTMLRegistrationBox extends HTMLPartarumHost {\r\n\r\n    constructor(config) {\r\n        super(config, \"partarum-registration-box\");\r\n\r\n    }\r\n\r\n    connectedCallback(){\r\n        super.connectedCallback();\r\n\r\n        this.loadElements().then();\r\n    }\r\n\r\n   async loadElements(){\r\n\r\n       let theme = this.root.config?.theme ?? \"small\";\r\n\r\n       let level = this.root.config?.level ?? 4; // ! max. 6\r\n\r\n       await this.setHeadline();\r\n\r\n       await this.setForm();\r\n   }\r\n\r\n   setHeadline(){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            let h = document.createElement(\"h\" + this.root.config.level.toString());\r\n\r\n            h.appendChild(document.createTextNode(this.root.config?.surface?.headline?.text ?? \"Registrierung\"));\r\n\r\n            this.initAddElement(\"headline\", h);\r\n        });\r\n   }\r\n\r\n   setForm(){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n\r\n        });\r\n   }\r\n}\r\n\r\n(customElements.get(\"partarum-registration-box\") === undefined) && customElements.define(\"partarum-registration-box\", HTMLRegistrationBox);\r\n\r\nexport {HTMLRegistrationBox};", "import {HTMLCardBox} from \"./HTMLCardBox.js\";\nimport {HTMLNavBar} from \"./HTMLNavBar.js\";\nimport {HTMLBottomBar} from \"./HTMLBottomBar.js\";\nimport {HTMLCookie} from \"./HTMLCookie.js\";\nimport {HTMLRegistrationBox} from \"./HTMLRegistrationBox.js\";\n\n\nclass HTML {\n\n    static BottomBar = HTMLBottomBar;\n\n    static createBottomBar(...args) {\n        return new HTMLBottomBar(...args);\n    }\n\n    static CardBox = HTMLCardBox;\n\n    static createCardBox(...args) {\n        return new HTMLCardBox(...args);\n    }\n\n    static CookieBanner = HTMLCookie;\n\n    static createCookieBanner(...args) {\n        return new HTMLCookie(...args);\n    }\n\n    static NavBar = HTMLNavBar;\n\n    static createNavBar(...args) {\n        return new HTMLNavBar(...args);\n    }\n\n    static RegistrationBox = HTMLRegistrationBox;\n\n    static createRegistrationBox(...args) {\n        return new HTMLRegistrationBox(...args);\n    }\n\n\n    static counter = 0;\n\n    static confirmLink(config) {\n       \n        const {href,confirm,title,options} = config;\n\n        [\"href\", \"confirm\", \"title\", \"options\"].forEach((key)=>Reflect.deleteProperty(config, key));\n\n        this.counter++;\n\n        return {\n            href: \"javascript:void(0)\",\n            title: title || \"Link\",\n            addEvent: {\n                type: \"click\",\n                topic: \"ConfirmLink\",\n                theme: \"confirmLink_click\",\n                name: \"confirmLink_click_\" + this.counter,\n                targetID: \"confirmLink_\" + this.counter,\n                doThat: (ev) => {\n\n                    Partarum.Validation.confirmLink(confirm, href, options);\n                }\n            },\n            ...config\n        };\n    }\n\n    static getSafeElementById(id, timeout = 250){\n\n        return new Promise((resolve) => {\n\n            Partarum.HTML.getSafeElement(\"byID\", id, timeout).then((element) => {\n\n                resolve(element);\n            });\n        });\n    }\n\n    static getSafeElementByQueryString(queryString, timeout = 250) {\n\n        return new Promise((resolve) => {\n\n            Partarum.HTML.getSafeElement(\"byQuery\", queryString, timeout).then((element) => {\n\n                resolve(element);\n            });\n        });\n    }\n\n    static getSafeElement(type, needle, timeout = 250) {\n\n        return new Promise((resolve, reject) => {\n\n            console.dir(needle);\n\n            let element = (type === \"byID\") ? document.getElementById(needle) : document.querySelector(needle);\n\n            let intID;\n\n            let counter = 0;\n\n            let funcBreak = () => {\n\n                if((element === null) && (counter < 1000)){\n\n                    element = (type === \"byID\") ? document.getElementById(needle) : document.querySelector(needle);\n\n                    if(element === null){\n\n                        counter++;\n\n                        funcBreak();\n\n                    } else {\n\n                        resolve(element);\n                    }\n\n                } else {\n\n                    clearInterval(intID);\n                    resolve(element);\n                }\n            };\n\n            if(element === null){\n\n                intID = setInterval(funcBreak, timeout);\n\n            } else {\n\n                resolve(element);\n            }\n        })\n    }\n}\n\nconst testElement = class extends HTMLElement {\n\n    constructor(attr) {\n        super();\n\n        console.log(\"testElement: \");\n        console.dir(attr);\n        console.dir(this);\n    }\n};\n\nclass testElement2 extends HTMLElement {\n\n    constructor(attr) {\n        super();\n\n        console.log(\"testElement2: \");\n        console.dir(attr);\n        console.dir(this);\n    }\n}\n\ncustomElements.get(\"test-element\") || customElements.define(\"test-element\", testElement);\ncustomElements.get(\"test-element2\") || customElements.define(\"test-element2\", testElement2);\n\nexport {HTML, HTMLBottomBar, HTMLCardBox, HTMLCookie, HTMLNavBar, HTMLRegistrationBox, testElement, testElement2};", "\r\nclass Enlarge {\r\n\r\n    constructor(mediaBoxID, boxID, ev, type){\r\n\r\n        this.mediaBox = document.getElementById(mediaBoxID);\r\n        this.boxID = boxID;\r\n        this.box = document.getElementById(boxID);\r\n        this.event = ev;\r\n        this.type = type;\r\n\r\n        let init = async () => {\r\n\r\n            let one, two, three, four, five = false;\r\n\r\n            switch(this.type) {\r\n\r\n                case \"mouseover\":\r\n                    one = await this.firstStep();\r\n                    two = (one === true) ? await this.secondStep() : false;\r\n                    three = (two === true) ? await this.thirdStep() : false;\r\n                    four = (three === true) ? await this.fourthStep() : false;\r\n                    five = (four === true) ? await this.fifthStep() : false;\r\n                    break;\r\n                case \"click\":\r\n                    two = await this.secondStep();\r\n                    three = (two === true) ? await this.thirdStep() : false;\r\n            }\r\n        }\r\n\r\n        init().then();\r\n    }\r\n\r\n    firstStep(){\r\n\r\n        return new Promise(resolve => {\r\n\r\n            let themeIds = Partarum.Cache.EventCache.getThemeIDs(\"MediaBoxPicture\", \"MediaBoxPicture_mouseover\");\r\n\r\n            for(let ar of themeIds){\r\n\r\n                let picture = document.getElementById(ar[1]);\r\n\r\n                picture.removeEventListener(\"mouseover\", Partarum.Cache.EventCache.getEvent(\"MediaBoxPicture\", \"MediaBoxPicture_mouseover\", ar[0]));\r\n            }\r\n\r\n            resolve(true);\r\n        });\r\n    }\r\n\r\n    //clearBox\r\n    secondStep(ev){\r\n\r\n        return new Promise(resolve => {\r\n\r\n\r\n            let start = ()=> {\r\n\r\n                return new Promise(resolve => {\r\n\r\n                    for (let pic of this.mediaBox.children) {\r\n\r\n                        (pic.id !== this.boxID) && (() => {\r\n                            pic.classList.add(\"news-box-zeroBox\");\r\n                        })();\r\n\r\n                        this.box.scrollIntoView({block: \"start\", behavior: \"smooth\"});\r\n                    }\r\n\r\n                    resolve();\r\n                });\r\n\r\n            }\r\n\r\n            start().then(()=>{\r\n\r\n                for(let pic of this.mediaBox.children){\r\n\r\n                    (pic.id !== this.boxID) && pic.classList.add(\"news-box-zero\");\r\n\r\n                    this.box.scrollIntoView({block: \"start\", behavior: \"smooth\"});\r\n                }\r\n\r\n                resolve(true);\r\n            });\r\n        });\r\n    }\r\n\r\n    setButtonBox(){\r\n\r\n        let buttonBoxId = \"ButtonBox_\" + this.box.id;\r\n\r\n        this.buttonBox = document.getElementById(buttonBoxId);\r\n\r\n        if(!this.buttonBox) {\r\n            let newBox = new Partarum();\r\n\r\n            newBox.themes = [\r\n                {\r\n                    buttonBox: {\r\n                        config: {\r\n                            footer: {\r\n                                _attributes: {\r\n                                    class: \"box-row box-center-center\",\r\n                                    style: \"margin:auto; font-size: 3em; color: darkred;\",\r\n                                    id: \"ButtonBox_\" + this.box.id,\r\n                                },\r\n                                i: {\r\n                                    _attributes: {\r\n                                        class: \"fa-duotone fa-circle-xmark\",\r\n                                        id: \"ButtonBox_\" + this.box.id + \"_close\",\r\n                                        addEvent: {\r\n                                            type: \"click\",\r\n                                            topic: \"MediaBoxPicture\",\r\n                                            theme: \"MediaBoxPicture_ButtonBox_click\",\r\n                                            name: \"MediaBoxPicture_ButtonBox_\" + this.box.id + \"_click\",\r\n                                            targetID: \"MediaBoxPicture_ButtonBox_\" + this.box.id,\r\n                                            doThat: () => {\r\n                                                let box = document.getElementById(\"ButtonBox_\" + this.box.id);\r\n\r\n                                                box.classList.remove(\"box-row\");\r\n                                                box.classList.add(\"zero\");\r\n\r\n                                                this.box.classList.remove(\"news-box-open\");\r\n\r\n                                                for (let pic of this.mediaBox.children) {\r\n\r\n                                                    pic.classList.remove(\"news-box-zero\");\r\n                                                    pic.classList.remove(\"news-box-zeroBox\");\r\n                                                    pic.classList.remove(\"news-box-open\");\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        },\r\n                        parent: this.box\r\n                    }\r\n                }\r\n            ];\r\n\r\n            newBox.create().then();\r\n        }\r\n    }\r\n\r\n    // make Box bigger\r\n    thirdStep(){\r\n\r\n        return new Promise(resolve => {\r\n\r\n            localStorage.setItem(\"boxFocus\", \"1\");\r\n\r\n            this.box.classList.remove(\"news-box-zero\");\r\n            this.box.classList.remove(\"news-box-zeroBox\");\r\n            this.box.classList.add(\"news-box-open\");\r\n\r\n            this.box.style.position = \"relative\";\r\n\r\n            this.box.scrollIntoView();\r\n\r\n            //this.setButtonBox();\r\n\r\n            resolve(true);\r\n        });\r\n    }\r\n\r\n    // set mouseout\r\n    fourthStep(){\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            let eventName = this.box.id + \"_mouseout\";\r\n\r\n            Partarum.Cache.EventCache.create(\"MediaBoxPicture\", \"MediaBoxPicture_mouseout\");\r\n\r\n            Partarum.Cache.EventCache.setEvent({\r\n                topic: \"MediaBoxPicture\",\r\n                theme: \"MediaBoxPicture_mouseout\",\r\n                name: eventName,\r\n                targetID: this.box.id,\r\n                bubbles: true,\r\n                doThat: (ev)=>{\r\n\r\n                    console.log(\"mouseout - soll: \" + this.box.id + \" - ist: \" + ev.target.id);\r\n\r\n                    if(ev.target.parentElement.id === \"mediaBox\") {\r\n\r\n                        this.mediaBox.style.flexDirection = \"row\";\r\n\r\n                        this.box.classList.remove(\"news-box-open\");\r\n\r\n\r\n                        this.whileCounter ??= 0;\r\n\r\n                        this.whileCounter++;\r\n\r\n                        console.dir(this.whileCounter);\r\n\r\n                        if (this.buttonBox) {\r\n                            this.buttonBox.remove(\"box-row\");\r\n                            this.buttonBox.classList.add(\"zero\");\r\n                        }\r\n\r\n                        for (let pic of this.mediaBox.children) {\r\n\r\n                            pic.classList.remove(\"news-box-zero\");\r\n                            pic.classList.remove(\"news-box-zeroBox\");\r\n                            pic.classList.remove(\"news-box-open\");\r\n                        }\r\n\r\n                        let themeIds = Partarum.Cache.EventCache.getThemeIDs(\"MediaBoxPicture\", \"MediaBoxPicture_mouseout\");\r\n\r\n                        for (let ar of themeIds) {\r\n\r\n                            this.box.removeEventListener(\"mouseout\", Partarum.Cache.EventCache.getEvent(\"MediaBoxPicture\", \"MediaBoxPicture_mouseout\", ar[0]), false);\r\n                        }\r\n\r\n                    } else {\r\n\r\n                    }\r\n                }\r\n            });\r\n\r\n\r\n\r\n            setTimeout(()=>{\r\n\r\n               // console.dir(this.buttonBox);\r\n\r\n                this.box.addEventListener(\"mouseout\", Partarum.Cache.EventCache.getEvent(\"MediaBoxPicture\", \"MediaBoxPicture_mouseout\", eventName), false);\r\n                resolve(true);\r\n                }, 500);\r\n\r\n        });\r\n    }\r\n\r\n    // set mouseover\r\n    fifthStep(){\r\n\r\n        return new Promise(resolve => {\r\n\r\n            setTimeout(()=> {\r\n                let themeIds = Partarum.Cache.EventCache.getThemeIDs(\"MediaBoxPicture\", \"MediaBoxPicture_mouseover\");\r\n\r\n                for (let ar of themeIds) {\r\n\r\n                    let picture = document.getElementById(ar[1]);\r\n\r\n                    picture.addEventListener(\"mouseover\", Partarum.Cache.EventCache.getEvent(\"MediaBoxPicture\", \"MediaBoxPicture_mouseover\", ar[0]), {once: true});\r\n                }\r\n\r\n                resolve(true);\r\n            }, 500);\r\n        });\r\n    }\r\n\r\n    clickOn(){\r\n\r\n    }\r\n\r\n    clickOff(){\r\n\r\n    }\r\n\r\n    mouseoverOn(){\r\n\r\n    }\r\n\r\n    mouseoverOff(){\r\n\r\n    }\r\n\r\n    mouseoutOn(){\r\n\r\n    }\r\n\r\n    mouseoutOff(){\r\n\r\n    }\r\n\r\n}\r\n\r\n/*\r\n        ab 1050px mousover und mouseout - Events +\r\n        unter 1050px click events\r\n */\r\n\r\n\r\nclass MediaBoxEvent {\r\n\r\n   static enlarge(ev, boxID, type){\r\n\r\n       console.dir(type);\r\n\r\n       let event = new Enlarge(\"mediaBox\", boxID, ev, type);\r\n\r\n    }\r\n}\r\n\r\nexport {MediaBoxEvent};", "class PictureMenu {\r\n\r\n    constructor(options) {\r\n\r\n        this.getBackground();\r\n\r\n    }\r\n\r\n    static create(options){\r\n\r\n        Partarum.hasBackground = false;\r\n\r\n        let box = new PictureMenu(options);\r\n\r\n        return box.menu();\r\n\r\n    }\r\n\r\n    menu(){\r\n\r\n        return {\r\n            nav: {\r\n                _attributes: {\r\n                    class: \"box-row picture-menu\"\r\n                },\r\n                button_shrink: this.shrink(),\r\n                button_enlarge: this.enlarge()\r\n            }\r\n        }\r\n    }\r\n\r\n    enlarge(){\r\n\r\n        return {\r\n            _attributes: {\r\n                text: \"Bild vergr\u00F6\u00DFern\"\r\n            },\r\n            i: {\r\n                _attributes: {\r\n                    class: \"fa-duotone fa-magnifying-glass-plus\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    shrink(){\r\n\r\n        return {\r\n            _attributes: {\r\n                text: \"Bild verkleinern\"\r\n            },\r\n            i: {\r\n                _attributes: {\r\n                    class: \"fa-duotone fa-magnifying-glass-minus\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    getBackground(){\r\n\r\n        /*\r\n            background-color || background-image\r\n\r\n            html -> body -> main\r\n\r\n            types :\r\n\r\n               background-color: rgb(0, 0, 0) || rgba(0, 0, 0, 0)\r\n\r\n               background-image: linear-gradient(rgba(0,0,0,0), rgb(242, 242, 242), rgb(211, 211, 211))  || linear-gradient(rgb(236, 239, 242), rgb(210, 159, 136), rgb(211, 211, 211))\r\n\r\n               background-image: linear-gradient(rgb(236, 239, 242), rgb(210, 159, 136), rgb(242, 5, 5), rgb(211, 211, 211))\r\n\r\n            next Step:\r\n\r\n                strings filtern:\r\n\r\n                        background-color: gibt es eine Zahl gr\u00F6\u00DFer 0 ?\r\n\r\n                        background-image:\r\n\r\n            wie definiert sich rgb:\r\n\r\n                Rot, Gr\u00FCn, Blau\r\n\r\n                0, 0, 0 ist Schwarz\r\n                255, 255, 255 ist Wei\u00DF\r\n\r\n                255, 0, 0 ist Rot\r\n                0, 255, 0 ist Gr\u00FCn\r\n                0, 0, 255 ist Blau\r\n\r\n                bin\u00E4r:\r\n\r\n                1111 1111, 0000 0000, 0000 0000\r\n                0000 0000, 1111 1111, 0000 0000\r\n                0000 0000, 0000 0000, 1111 1111\r\n\r\n                hex:\r\n\r\n                0x00FF, 0x0000, 0x0000\r\n                0x0000, 0x00FF, 0x0000\r\n                0x0000, 0x0000, 0x00FF\r\n\r\n                Die Mitte von 255 = 127,5 = rgb(127, 127, 127) === grau !!!\r\n\r\n                255 >> 127 >> 63 >> 31 >> 15 >> 7 >> 3 >> 1 >> 0\r\n\r\n                1111 1111 >> 0111 1111 >> 0011 1111 >> 0001 1111 >> 0000 1111 >> 0000 0111 >> 0000 0011 >> 0000 0001 >> 0000 0000\r\n\r\n                0x00FF >> 0x007F >> 0x003F >> 0x001F >> 0x000F >> 0x0007 >> 0x0003 >> 0x0001 >> 0x0000\r\n\r\n\r\n                background-image: linear-gradient(181deg, rgb(0,0,0), rgba(127, 0, 0), rgb(255, 0, 0)); von Schwarz zu Rot\r\n}\r\n\r\n         */\r\n\r\n        const BACKGROUND_TYPES = [\r\n            \"background-color\",\r\n            \"background-image\"\r\n        ];\r\n\r\n        if(Partarum.hasBackground === false) {\r\n\r\n            let body = window.getComputedStyle(document.body);\r\n\r\n            let main = window.getComputedStyle(document.getElementsByTagName(\"main\")[0]);\r\n\r\n            for (let type of BACKGROUND_TYPES) {\r\n\r\n                console.log(\"body - \" + type + \": \" + body.getPropertyValue(type));\r\n\r\n                console.log(\"main - \" + type + \": \" + main.getPropertyValue(type));\r\n            }\r\n\r\n            Partarum.hasBackground = true;\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nexport {PictureMenu};", "import {MediaBoxEvent} from \"../Events/MediaBoxEvent.js\";\r\nimport {PictureMenu} from \"./Barrier/Picture/PictureMenu.js\";\r\n\r\nclass MediaBox {\r\n\r\n    constructor(config) {\r\n\r\n        console.dir(config);\r\n\r\n        this.boxConfig = config.boxConfig || null;\r\n\r\n        if(this.boxConfig.template.PartarumTemplate) {\r\n\r\n            // config.boxValues sind TemplateValues !!!!\r\n\r\n            let template = this.boxConfig.template.PartarumTemplate;\r\n\r\n            this.id = template.id;\r\n\r\n            this.templateClass = template.templateName;\r\n\r\n            this.cc = this.templateClass.configCache[this.id];\r\n\r\n            this.PartarumTemplate = true;\r\n        }\r\n\r\n        this.boxValues = config.boxValues;\r\n\r\n        this.Event = new MediaBoxEvent();\r\n\r\n        this.filterObject();\r\n    }\r\n\r\n    filterObject(){\r\n\r\n        if(this.boxConfig) {\r\n\r\n            this.templateName = (this.PartarumTemplate) ? this.templateClass.name : this.boxConfig.templateName;\r\n\r\n            this.boxEvents = this.boxConfig.events || null;\r\n\r\n            this.barrier = this.boxConfig.barrier || false;\r\n        }\r\n\r\n    }\r\n\r\n    mainTemplate(){\r\n\r\n        return {\r\n            _attributes: {\r\n                class: \"main-article media-box media-box-medium\",\r\n                id: \"mediaBox\"\r\n            }\r\n        }\r\n    }\r\n\r\n    createValueUser(){\r\n\r\n    }\r\n\r\n    createValueTemplate(){\r\n\r\n    }\r\n\r\n    createValue(){\r\n\r\n\r\n        // nach ValueType unterscheiden !!!\r\n\r\n        if(this.PartarumTemplate){\r\n\r\n            this.createValueTemplate();\r\n\r\n        } else {\r\n\r\n            this.createValueUser();\r\n        }\r\n\r\n\r\n        this.surfaceValue = this.mainTemplate();\r\n\r\n        let counter = 1;\r\n\r\n        if(this.boxValues) {\r\n\r\n            for (let box of Object.keys(this.boxValues)) {\r\n\r\n                let sectionID = \"mediaBox_box_\" + counter;\r\n\r\n                let sectionTagName = \"section_\" + counter;\r\n\r\n                if (this.PartarumTemplate) {\r\n\r\n                    Reflect.set(this.cc, sectionID, this.templateClass.create(this.cc.config));\r\n\r\n                    let partarumIntern = this.cc[sectionID].PartarumIntern;\r\n\r\n                    if (this.templateName === \"MediaBoxPicture\") {\r\n\r\n                        let pictureID = \"mediaBox_picture_\" + counter;\r\n\r\n                        Reflect.defineProperty(this.boxValues[box].$picture, \"id\", {value: pictureID});\r\n\r\n                        if (partarumIntern.events) {\r\n\r\n                            this.cc[sectionID].figure.img._attributes.addEvent = [];\r\n\r\n                            for (let eventName in partarumIntern.events) {\r\n\r\n                                let eventObject = {\r\n                                    topic: \"MediaBoxPicture\",\r\n                                    targetID: pictureID\r\n                                };\r\n\r\n                                switch (eventName) {\r\n\r\n                                    case \"enlarge\":\r\n\r\n                                        let eventType = (partarumIntern.events[eventName] === \"barrier\") ? \"click\" : \"mouseover\";\r\n\r\n                                        eventObject.type = eventType;\r\n                                        eventObject.theme = \"MediaBoxPicture_\" + eventType;\r\n                                        eventObject.name = pictureID + \"_\" + eventType;\r\n                                        eventObject.doThat = (ev) => {\r\n                                            MediaBoxEvent.enlarge(ev, sectionID, eventType);\r\n                                        }\r\n                                }\r\n\r\n                                console.dir(eventObject);\r\n\r\n                                this.cc[sectionID].figure.img._attributes.addEvent.push(eventObject);\r\n                            }\r\n                        }\r\n\r\n\r\n                        Reflect.deleteProperty(this.cc[sectionID], \"PartarumIntern\");\r\n                    }\r\n\r\n                    let val = {\r\n                        _attributes: {\r\n                            class: (this.barrier === true) ? \"picture-box-barrier\" : \"picture-box\", // picture-box-barrier\r\n                            id: sectionID\r\n                        }\r\n                    };\r\n\r\n                    if(this.barrier === true){\r\n\r\n                        let pictureMenu = PictureMenu.create();\r\n\r\n                        Reflect.set(val, \"nav\", pictureMenu.nav);\r\n                    }\r\n\r\n                    let importObject = {\r\n                        template: {\r\n                            name: sectionID,\r\n                            surface: this.cc[sectionID],\r\n                            valueFile: this.boxValues[box]\r\n                        }\r\n                    }\r\n\r\n                    Reflect.set(val, \"_import\", importObject);\r\n\r\n                    Reflect.set(this.surfaceValue, sectionTagName, val);\r\n\r\n                    counter++;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this.surfaceValue;\r\n    }\r\n\r\n    static create(config){\r\n\r\n        const mediaBox = new MediaBox(config);\r\n\r\n        return mediaBox.createValue();\r\n    }\r\n\r\n    static init(){\r\n        // zur Initialisierung bzgl des Caches!!! Wie in MediaBoxPicture!!!\r\n    }\r\n\r\n    static typePicture(){\r\n\r\n    }\r\n}\r\n\r\nexport {MediaBox};", "class MediaBoxPicture {\r\n\r\n    static STYLE_ORIGINAL = 2;\r\n\r\n    static STYLE_MOVIE = 4;\r\n\r\n    static HEADLINE_OVER_IMAGE = 8;\r\n\r\n    static HEADLINE_UNDER_IMAGE = 16;\r\n\r\n    static configCache = {};\r\n\r\n    static counter = 1;\r\n\r\n    constructor(config, barrier = false){\r\n\r\n        /*\r\n               figure: height: fit-content || 100%\r\n                    height: 100% = like quader box\r\n                    fit-content = original picture\r\n\r\n               aspect-ratio: 16/9 || unset\r\n                16:9 = with whitespace over and under the picture\r\n                unset\r\n         */\r\n\r\n        this.headline = config.headline || MediaBoxPicture.HEADLINE_UNDER_IMAGE; // under || over\r\n        this.picture = config.picture || MediaBoxPicture.STYLE_ORIGINAL; //  // original || movie\r\n        this.barrier = barrier;\r\n\r\n        this.events = config.events || null;\r\n\r\n        if(this.events) {\r\n            this.enlarge = this.events.enlarge || null;\r\n        }\r\n    }\r\n\r\n    headlineTemplate() {\r\n\r\n        return {\r\n            h2: {\r\n                $headline: {\r\n                    _type: \"text\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    imageTemplate(){\r\n\r\n        return {\r\n            img: {\r\n                $picture: {\r\n                    src: {\r\n                        _type: \"_attributes\",\r\n                        _value: {\r\n                            src: \"\"\r\n                        }\r\n                    },\r\n                    alt: {\r\n                        _type: \"_attributes\",\r\n                        _value: {\r\n                            alt: \"\"\r\n                        }\r\n                    },\r\n                    id: {\r\n                        _type: \"_attributes\",\r\n                        _value: {\r\n                            id: \"\"\r\n                        }\r\n                    }\r\n                },\r\n                _attributes: {}\r\n            }\r\n        }\r\n    }\r\n\r\n    figcaptionText(){\r\n        return {\r\n            p: {\r\n                $description: {\r\n                    _type: \"text\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    figcaptionTemplate(){\r\n\r\n        let figcaptionBody = {};\r\n\r\n        if(this.headline === MediaBoxPicture.HEADLINE_UNDER_IMAGE){\r\n            Reflect.set(figcaptionBody, \"h2\", this.headlineTemplate().h2);\r\n        }\r\n\r\n        Reflect.set(figcaptionBody, \"p\", this.figcaptionText().p);\r\n\r\n        return {\r\n            figcaption: figcaptionBody\r\n        }\r\n    }\r\n\r\n    figureBody(){\r\n        let body = {};\r\n\r\n        if(this.headline === MediaBoxPicture.HEADLINE_OVER_IMAGE){\r\n            Reflect.set(body, \"h2\", this.headlineTemplate().h2);\r\n        }\r\n\r\n        Reflect.set(body, \"img\", this.imageTemplate().img);\r\n        Reflect.set(body, \"figcaption\", this.figcaptionTemplate().figcaption);\r\n\r\n        return body;\r\n    }\r\n\r\n    template(){\r\n\r\n        let figure = {\r\n            figure: {\r\n                ...this.figureBody()\r\n            },\r\n            PartarumIntern: {\r\n                template: \"MediaBoxPicture\"\r\n            }\r\n        };\r\n\r\n        /*\r\n            enlarge - kann mouseover, oder click sein - Thema \"Barrierefreiheit\"\r\n         */\r\n\r\n        if(this.events) {\r\n\r\n            figure.PartarumIntern.events ??= {};\r\n\r\n            for(let event in this.events) {\r\n\r\n                Reflect.set(figure.PartarumIntern.events, event, this.events[event]);\r\n            }\r\n        }\r\n\r\n       return figure;\r\n    }\r\n\r\n    static create(config){\r\n        let picbox = new MediaBoxPicture(config);\r\n\r\n        return picbox.template();\r\n    }\r\n\r\n    static init(config){\r\n\r\n        let id = \"mediaBox_\" + MediaBoxPicture.counter;\r\n\r\n        Reflect.set(MediaBoxPicture.configCache, id, {\r\n            config: config\r\n        });\r\n\r\n        return {\r\n            PartarumTemplate: {\r\n                templateName: MediaBoxPicture,\r\n                id: id\r\n            }\r\n        };\r\n    }\r\n}\r\n\r\nexport {MediaBoxPicture};", "import {MediaBox} from \"./MediaBox.js\";\r\nimport {MediaBoxPicture} from \"./MediaBox/MediaBoxPicture.js\";\r\n\r\nclass Design {\r\n    static MediaBox(template){ return MediaBox.create(template);}\r\n\r\n    static MediaBoxPicture(config){ return MediaBoxPicture.init(config)};\r\n\r\n    static STYLE_ORIGINAL = 2;\r\n\r\n    static STYLE_MOVIE = 4;\r\n\r\n    static HEADLINE_OVER_IMAGE = 8;\r\n\r\n    static HEADLINE_UNDER_IMAGE = 16;\r\n}\r\n\r\nexport {Design};", "class Cookie {\r\n\r\n    static status = false;\r\n\r\n    static inUse = false;\r\n\r\n    static accepted = false;\r\n\r\n    static Storage = new Map();\r\n\r\n    static isInitialized = false;\r\n\r\n\r\n    static init(statusInUse = false){\r\n\r\n        Partarum.Log.create(\"Cookie\", \"init\"); \r\n\r\n        Partarum.Log.add(\"Cookie\", \"init\",  \"start\");\r\n\r\n        if(this.isInitialized === false) {\r\n\r\n            this.isInitialized = true;\r\n\r\n            Partarum.Log.add(\"Cookie\", \"init\", {initialized: false});\r\n\r\n            return new Promise((async resolve => {\r\n\r\n                Partarum.Log.add(\"Cookie\", \"init\", \"Promise\");\r\n\r\n                this.inUse = statusInUse;\r\n\r\n                if (this.inUse === false) {\r\n\r\n                    Partarum.Log.add(\"Cookie\", \"init\", {inUse: false});\r\n\r\n                    await this.check();\r\n                    await this.getUserCookies();\r\n                }\r\n\r\n                await this.isAccepted().then(() => {\r\n\r\n                    Partarum.Log.add(\"Cookie\", \"init\", \"after isAccepted()\");\r\n\r\n                    resolve({\r\n                        inUse: this.inUse,\r\n                        status: this.status,\r\n                        accepted: this.accepted,\r\n                        initialized: this.isInitialized\r\n                    });\r\n                });\r\n\r\n\r\n            }));\r\n\r\n        } else {\r\n\r\n            Partarum.Log.add(\"Cookie\", \"init\", {initialized: true});\r\n\r\n            return Promise.resolve({\r\n                inUse: this.inUse,\r\n                status: this.status,\r\n                accepted: this.accepted,\r\n                log: this.Log,\r\n                errorTest: new Error(\"testLog\")\r\n            });\r\n        }\r\n    }\r\n\r\n    // ! zum Promis ausbauen !!!\r\n    static toAgree(config, reload = false){\r\n\r\n        Partarum.Log.create(\"Cookie\", \"toAgree\");\r\n\r\n        Partarum.Log.add(\"Cookie\", \"toAgree\",  \"start\");\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            Partarum.Log.add(\"Cookie\", \"toAgree\", \"Promise\");\r\n\r\n            if(this.status === true) {\r\n\r\n                this.accepted = true;\r\n\r\n                window.sessionStorage.setItem(\"cookies_accepted\", \"true\");\r\n\r\n                ((config) => {\r\n\r\n                    let cookie = document.cookie;\r\n\r\n                    return new Promise((resolve) => {\r\n\r\n                        config.cookies.active.doThat();\r\n\r\n                        resolve(cookie);\r\n                    });\r\n\r\n                })(config).then((cookieBefore) => {\r\n\r\n                    if (cookieBefore === document.cookie) {\r\n\r\n                        let intID = setInterval(isCookie, 100);\r\n\r\n                        let counter = 0;\r\n\r\n                        function isCookie() {\r\n\r\n                            counter++;\r\n\r\n                            if (document.cookie === cookieBefore) {\r\n\r\n                                console.log(document.cookie);\r\n\r\n                                ((counter === 200) || (reload === true)) && clearInterval(intID);\r\n\r\n                                resolve(false);\r\n\r\n                            } else {\r\n\r\n                                console.log(document.cookie);\r\n                                clearInterval(intID);\r\n\r\n                                resolve(true);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    static toDisagree(){\r\n\r\n        if(this.status === true) {\r\n\r\n            this.accepted = false;\r\n\r\n            window.sessionStorage.setItem(\"cookies_accepted\", \"false\");\r\n        }\r\n    }\r\n\r\n    static isAccepted() {\r\n\r\n        Partarum.Log.create(\"Cookie\", \"isAccepted\");\r\n\r\n        return new Promise((resolve)=>{\r\n\r\n            Partarum.Log.add(\"Cookie\", \"isAccepted\", \"Promise\");\r\n\r\n            let acceptedStatus = window.sessionStorage.getItem(\"cookies_accepted\");\r\n\r\n            if((acceptedStatus !== null) && (acceptedStatus === \"true\")){\r\n\r\n                this.accepted = true;\r\n\r\n                resolve(true);\r\n\r\n            } else {\r\n\r\n\r\n            }\r\n\r\n            resolve(false);\r\n        });\r\n\r\n    }\r\n\r\n    static add(){\r\n\r\n    }\r\n\r\n    static has(){\r\n\r\n    }\r\n    static get(){\r\n\r\n\r\n    }\r\n\r\n    static remove(){\r\n\r\n    }\r\n\r\n    static updateUserCookies(){\r\n\r\n\r\n    }\r\n\r\n    static getUserCookies(){\r\n\r\n        Partarum.Log.create(\"Cookie\", \"getUserCookies\");\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            Partarum.Log.add(\"Cookie\", \"getUserCookies\", \"Promise\");\r\n\r\n            Partarum.Cache.SimpleCache.create(\"Cookies\", \"userCookies\");\r\n\r\n            let cookieArray = document.cookie.split(\";\");\r\n\r\n            cookieArray.forEach((item) => {\r\n\r\n                let cookie = item.split(\"=\");\r\n\r\n                if(cookie.length > 1) {\r\n\r\n                    let cookieName = cookie[0].trim();\r\n\r\n                    let cookieValue = cookie[1];\r\n\r\n                    this.Storage.set(cookieName, cookieValue);\r\n\r\n                    Partarum.Cache.SimpleCache.setItem(\"Cookies\", \"userCookies\", cookieName, cookieValue);\r\n\r\n                    this.inUse = true;\r\n                }\r\n            });\r\n\r\n            Partarum.Cache.SimpleCache.setItemToTimeline(\"Cookies\", \"userCookies\", performance.now().toString(), document.cookie);\r\n\r\n            resolve(true);\r\n        });\r\n    }\r\n\r\n    static check(){\r\n\r\n        Partarum.Log.create(\"Cookie\", \"check\");\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            Partarum.Log.add(\"Cookie\", \"check\", \"Promise\");\r\n\r\n            this.status = (navigator.cookieEnabled === true) ?\r\n                true : (\r\n                    (navigator.cookieEnabled === false) ?\r\n                        false : \"hidden\"\r\n                );\r\n\r\n            (this.status === true) && window.sessionStorage.setItem(\"cookies_activated\", this.status.toString());\r\n\r\n            resolve(this.status);\r\n        });\r\n    }\r\n}\r\n\r\nexport {Cookie};", "import {Cookie} from \"./Cookie.js\";\r\n\r\nclass System {\r\n\r\n    static Cookie = Cookie;\r\n}\r\n\r\nexport {System};", "class Plotter {\r\n\r\n    static root;\r\n\r\n    static isInitialized = false;\r\n\r\n    static createBoard(id, attr = {width: window.offsetWidth, height: window.offsetHeight}, type = \"node\"){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            if(this.isInitialized === false){\r\n\r\n                let plotterCache = Partarum.Cache.PlotCache.create(\"PlotterCache\", \"Plotter\");\r\n\r\n                this.root = {\r\n\r\n                    cache: plotterCache,\r\n\r\n                    ctx: plotterCache.get(\"CTXCache\"),\r\n\r\n                    board: plotterCache.get(\"BoardCache\"),\r\n\r\n                    collection: plotterCache.get(\"CollectionCache\"),\r\n\r\n                    lastDraw: plotterCache.get(\"LastDraw\")\r\n\r\n\r\n                };\r\n\r\n                this.isInitialized = true;\r\n            }\r\n\r\n            let board = document.createElement(\"canvas\");\r\n\r\n            board.setAttribute(\"id\", id);\r\n\r\n            board.setAttribute(\"width\", attr.width);\r\n\r\n            board.setAttribute(\"height\", attr.height);\r\n\r\n\r\n            this.root.board.add(id, board);\r\n\r\n            this.root.ctx.add(this.root.board.get(id), new Map());\r\n\r\n            this.root.ctx.get(this.root.board.get(id)).set(\"ctx\", this.root.board.get(id).getContext(\"2d\"));\r\n\r\n            this.root.ctx.get(this.root.board.get(id)).set(\"id\", id);\r\n\r\n            resolve((type === \"node\") ? this.root.board.get(id) : this.root.ctx.get(this.root.board.get(id)).get(\"ctx\"));\r\n\r\n            resolve();\r\n        });\r\n    }\r\n\r\n\r\n    static clearBoard(...idArray){\r\n\r\n        for(let id of idArray){\r\n\r\n            //console.dir(this.root.ctx.get(this.root.board.get(id)).get(\"ctx\"));\r\n\r\n            this.root.ctx.get(this.root.board.get(id)).get(\"ctx\").clearRect(0, 0, this.root.board.get(id).width, this.root.board.get(id).height);\r\n        }\r\n    }\r\n\r\n    static showPoint(left, top, color){\r\n\r\n        let pointElement = document.createElement(\"div\");\r\n\r\n        pointElement.style.position = \"absolute\";\r\n\r\n        pointElement.style.height = \"5px\";\r\n\r\n        pointElement.style.width = \"5px\";\r\n\r\n        pointElement.style.borderRadius = \"50%\";\r\n\r\n        pointElement.style.background = color;\r\n\r\n        pointElement.style.left = left + \"px\";\r\n\r\n        pointElement.style.top = top + \"px\";\r\n\r\n        document.body.appendChild(pointElement);\r\n    }\r\n\r\n    static render(name, group){\r\n\r\n        for(let child of Object.keys(this.root.collection.get(name)[group])){\r\n\r\n            //console.dir([name, group, child, this.root.collection.get(name)]);\r\n\r\n            this.root.collection.get(name)[group][child]();\r\n        }\r\n    }\r\n\r\n    static record2(plot){\r\n\r\n        return new Promise((resolve)=> {\r\n\r\n            \r\n        });\r\n    }\r\n\r\n    // canvas, themeType, themeName === startPoint, goalPoint, callback\r\n    static record(canvas, name, group, child, callback){\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            let theme;\r\n\r\n            if(this.root.collection.has(name) === false) {\r\n\r\n                this.root.collection.add(name, new Map());\r\n\r\n                theme = this.root.collection.get(name);\r\n\r\n                theme.set(\"boards\", new Map());\r\n\r\n                theme.get(\"boards\").set(this.root.ctx.get(canvas).get(\"id\"), canvas);\r\n\r\n                theme.set(\"endpoints\", new Map());\r\n\r\n            } else {\r\n\r\n                theme = this.root.collection.get(name);\r\n            }\r\n\r\n            console.dir(group);\r\n\r\n            if(this.root.collection.get(name).hasOwnProperty(group) === false){\r\n\r\n                this.root.collection.get(name)[group] = {}; // ! Fatal - ist eigentlich eine Map !!!\r\n            }\r\n\r\n            console.dir(this.root.collection.get(name));\r\n\r\n            this.root.collection.get(name)[group][child] = callback;\r\n\r\n            this.root.lastDraw.add(\"name\", name);\r\n            this.root.lastDraw.add(\"group\", group);\r\n\r\n            resolve(true);\r\n        });\r\n    }\r\n\r\n    static update(paramName = undefined, paramGroup = undefined){\r\n\r\n        this.render(paramName || this.root.lastDraw.get(\"name\"), paramGroup || this.root.lastDraw.get(\"group\"));\r\n    }\r\n\r\n    static isCollected(name, group){\r\n\r\n        return ((this.root.collection.has(name)) && (this.root.collection.get(name).hasOwnProperty(group)));\r\n    }\r\n\r\n\r\n}\r\n\r\nexport {Plotter};", "import {Plotter} from \"./Plotter.js\";\n\n/*\n    Die Hauptklasse um zu zeichnen\n */\n\nclass Draw {\n\n    static Plotter = Plotter;\n}\n\nexport {Draw};", "class Events {\r\n\r\n    static handler = {\r\n\r\n        keycheck: {\r\n            keyup: (goalID, keyCodeNeedle) => {\r\n\r\n                return {\r\n                    doThat: (event) => {\r\n                        if (event.keyCode === keyCodeNeedle) {\r\n                            event.preventDefault();\r\n                            document.getElementById(goalID).click();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        validation: {\r\n            click: {\r\n                email: (goalID, options) => {\r\n\r\n                    return {\r\n                        doThat: () => {\r\n\r\n                            let email = document.getElementById(goalID).value;\r\n\r\n                            if (email.length > 4) {\r\n\r\n                                if ((email.includes(\"@\")) && (email.includes(\".\"))) {\r\n\r\n                                    sessionStorage.setItem(\"email\", email);\r\n\r\n                                    let a = document.getElementById(\"sendTheShit\");\r\n                                    a.setAttribute(\"style\", \"display: block\");\r\n\r\n                                    a.click();\r\n\r\n                                } else {\r\n\r\n                                    let text = \"Du musst eine Email - Adresse mit @ und . eingeben!\";\r\n\r\n                                    let a = document.getElementById(\"emailValidation\");\r\n\r\n                                    a.hidden = false;\r\n                                    a.style.backgroundColor = options?.backgroundColor ?? \"#E6E6FA\";\r\n\r\n                                    a.children[0].innerText = text;\r\n                                }\r\n                            } else {\r\n\r\n                                let text = \"Zu kurz f\u00FCr eine Email - Adresse\";\r\n\r\n                                let a = document.getElementById(\"emailValidation\");\r\n\r\n                                a.hidden = false;\r\n                                a.style.backgroundColor = options?.backgroundColor ?? \"#E6E6FA\";\r\n\r\n                                a.children[0].innerText = text;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    static getBase(topic, type, addition, targetID, goalID, handler){\r\n\r\n        return {\r\n            type: type,\r\n            topic: topic,\r\n            theme: topic + \"_\" + addition,\r\n            name: topic + \"_\" + addition + \"_\" + type + \"_from_\" + targetID + \"_to_\" + goalID,\r\n            targetID: targetID,\r\n            ...handler\r\n        }\r\n    }\r\n\r\n    static keycheck(type, keyName, targetID, goalID) {\r\n\r\n        const KEYS = {\r\n            enter: 13\r\n        }\r\n\r\n        return Events.getBase(\"keycheck\", type, keyName, targetID, goalID, Events.handler.keycheck[type](goalID, KEYS[keyName]));\r\n    }\r\n\r\n    static validation(type, theme, targetID, goalID){\r\n\r\n        return Events.getBase(\"validation\", type, theme, targetID, goalID, Events.handler.validation[type][theme](goalID));\r\n    }\r\n}\r\n\r\nexport {Events};", "/*\r\n *   Copyright 2018- 2021 \u00A9 Alexander Bombis. All rights reserved.\r\n *            Developed by Alexander Bombis.\r\n *            Email: email@alexander-bombis.de\r\n */\r\n\r\nimport {Log} from \"../Workshop/Log.js\";\r\nimport {Validation} from \"../Validation/Validation.js\";\r\nimport {ValidObject} from \"../Validation/ValidObject.js\";\r\nimport {Helper} from \"../Workshop/Helper.js\";\r\nimport {ViewKit} from \"../Workshop/ViewKit.js\";\r\nimport {Loader} from \"../Workshop/Loader.js\";\r\nimport {Workbox} from \"../Workshop/Workbox.js\";\r\nimport {Cache} from \"../Cache/Cache.js\";\r\nimport {HTML} from \"../HTML/HTML.js\";\r\nimport {Design} from \"../Design/Design.js\";\r\nimport {Counter} from \"../Helper/Counter.js\";\r\nimport {System} from \"../System/System.js\";\r\nimport {Draw} from \"../Draw/Draw.js\";\r\nimport {Events} from \"../Events/Events.js\";\r\n\r\nconst ImportList = {\r\n    Log: Log,\r\n    Validation: Validation,\r\n    ValidObject: ValidObject,\r\n    Helper: Helper,\r\n    ViewKit: ViewKit,\r\n    Loader: Loader,\r\n    Workbox: Workbox,\r\n    Cache: Cache,\r\n    HTML: HTML,\r\n    Design: Design,\r\n    Counter: Counter,\r\n    System: System,\r\n    Draw: Draw,\r\n    Events: Events\r\n}\r\n\r\nexport {ImportList};", "/*\r\n *           Copyright 2020 \u00A9 Alexander Bombis. All rights reserved.\r\n *           Developed by Alexander Bombis.\r\n *           Email: email@alexander-bombis.de\r\n *\r\n *           The following code was created based on the template for the website http://cordes-software.de.\r\n *           This may also be used in full by the person or business\r\n *           representing the domain \"cordes-software.de\"\r\n *           and also modified for their use.\r\n */\r\n\r\nimport {ImportList} from \"../Import/Import.js\";\r\n\r\nclass Workshop {\r\n\r\n    constructor() {\r\n\r\n        if((!globalThis.Partarum) || (!Window.Partarum)){\r\n            globalThis.Partarum = Partarum;\r\n        }\r\n\r\n        this.setClasses();\r\n        this.loadStyle();\r\n    }\r\n\r\n    addToGlobal(a){\r\n        for(let i of a){\r\n            globalThis.Partarum[i] = i;\r\n        }\r\n    }\r\n\r\n    setClasses(){\r\n        for(let i in ImportList){\r\n            if(ImportList.hasOwnProperty(i)) {\r\n                globalThis.Partarum[i] = ImportList[i];\r\n            }\r\n        }\r\n    }\r\n\r\n    loadStyle(){\r\n\r\n        let link = document.createElement(\"link\");\r\n\r\n        link.setAttribute(\"rel\", \"stylesheet\");\r\n        link.setAttribute(\"type\", \"text/css\");\r\n        link.setAttribute(\"href\", \"https://partarum.download/module/css/partarum\");\r\n\r\n        document.getElementsByTagName(\"head\")[0].appendChild(link);\r\n    }\r\n}\r\n\r\nexport {Workshop};", "import {Cookie} from \"./Cookie.js\";\r\n\r\nclass ClientSetting{\r\n\r\n    constructor() {\r\n\r\n        /*\r\n            set properties\r\n         */\r\n        this._dateObject = new Date();\r\n        this._cookiesEnable = false;\r\n        this._cookies = new Map();\r\n        this._resultWindow = new Map();\r\n        this._windowKeys = Object.getOwnPropertyNames(window);\r\n        this._searchWindowArray = [\r\n            \"localStorage\",\r\n            \"sessionStorage\"\r\n        ];\r\n\r\n        /*\r\n            call methods\r\n         */\r\n        this.checkStorage();\r\n        this.checkCookies();\r\n        this.getUserCookies();\r\n    }\r\n\r\n    /*\r\n        methods\r\n     */\r\n\r\n    visitingDate() {\r\n        return this._dateObject.toLocaleString();\r\n    }\r\n\r\n    checkStorage() {\r\n\r\n        for (let j = 0; j < this._searchWindowArray.length; j++) {\r\n            let parameterWindow = this._searchWindowArray[j];\r\n            this._resultWindow.set(parameterWindow,this._windowKeys.some(keys => parameterWindow === keys));\r\n        }\r\n\r\n        if(this._resultWindow.size === 0){\r\n\r\n            this._resultWindow.set(\"localStorage\", !!localStorage);\r\n            this._resultWindow.set(\"sessionStorage\", !!sessionStorage);\r\n\r\n        }\r\n\r\n        this._localStorage = this._resultWindow.get(\"localStorage\") ?? false;\r\n        this._sessionStorage = this._resultWindow.get(\"sessionStorage\") ?? false;\r\n    }\r\n\r\n    checkCookies() {\r\n\r\n        this._cookiesEnable = (navigator.cookieEnabled === true) ?\r\n            true : (\r\n                (navigator.cookieEnabled === false) ?\r\n                false : \"hidden\"\r\n            );\r\n    }\r\n\r\n    setCookie(item) {\r\n\r\n        let cookName = Object.keys(item.nameValue);\r\n        let cookValue = item.nameValue;\r\n        let runTime = item.time;\r\n        let cookieTime = (runTime.min) ? 1000 * 60 * runTime.min : false;\r\n\r\n        let date = new Date();\r\n\r\n        let runningTime = (cookieTime !== false) ? (date.getTime() + cookieTime) : (date.getTime() + 3600000);\r\n\r\n        date.setTime(runningTime);\r\n\r\n        for (let value of cookName ) {\r\n            document.cookie = value + \"=\" + cookValue[value] + \"; expires=\" + date.toGMTString();\r\n        }\r\n    }\r\n\r\n    isCookie(cookieName){\r\n\r\n        if (document.cookie.split(';').some((item) => item.trim().startsWith(cookieName + '='))) {\r\n            console.log('The cookie {cookieName} exists')\r\n            return true;\r\n        }\r\n    }\r\n\r\n    getUserCookies() {\r\n\r\n        (this.cookiesEnable) && (() => {\r\n            let cookieArray = document.cookie.split(\";\");\r\n            cookieArray.forEach((item) => {\r\n                let cookie = item.split(\"=\");\r\n                this._cookies.set(cookie[0], cookie[1]);\r\n            })\r\n        })();\r\n    }\r\n\r\n\r\n    getCookie(cookieName){\r\n\r\n        return this._cookies.get(cookieName) ?? false;\r\n    }\r\n\r\n    get resultWindow(){\r\n\r\n        return this._resultWindow;\r\n    }\r\n\r\n    get localStorage(){\r\n\r\n        return this._localStorage ?? false;\r\n    }\r\n\r\n    get sessionStorage(){\r\n\r\n        return this._sessionStorage ?? false;\r\n    }\r\n\r\n    get cookiesEnable(){\r\n\r\n        return this._cookiesEnable;\r\n    }\r\n}\r\n\r\nexport {ClientSetting};", "/*\n *   Copyright 2018- 2022 \u00A9 Alexander Bombis. All rights reserved.\n *            Developed by Alexander Bombis.\n *            Email: email@alexander-bombis.de\n */\nimport {HTMLPreload} from \"./HTML/HTMLPreload.js\";\nimport {Cache} from \"./Cache/Cache.js\";\nimport {Workshop} from \"./Workshop/Workshop.js\";\nimport {ClientSetting} from \"./System/ClientSetting.js\";\nimport {Cookie} from \"./System/Cookie.js\";\n\nclass Partarum {\n\n    constructor() {\n\n        this.item = \"Was geht ab?\";\n        this.dom = [];\n        this.id = Cache.ImportCache.setCondition();\n        this.app = {};\n        Partarum.workerCache = {};\n\n        if((!globalThis.Partarum) || (!Window.Partarum)){\n\n            //console.log(\"start---Partarum--- without window.partarum\");\n\n            globalThis.Partarum = Partarum;\n\n            let preload = async ()=>{\n\n                await HTMLPreload.init();\n            };\n\n            (!Partarum.preloadStatus) && preload().then(()=>{\n\n                new Workshop();\n\n                Partarum.preloadStatus = true;\n\n                Cookie.init().then((cookieTest)=>{\n\n                    console.dir(cookieTest);\n                });\n            })\n        } else {\n\n            //console.log(\"start---Partarum--- with window.partarum\");\n        }\n    }\n\n    static void(){\n        return \"javascript:void(0)\";\n    }\n\n    static init() {\n        if((!globalThis.Partarum) || (!Window.Partarum)){\n            globalThis.Partarum = Partarum;\n            new Workshop();\n        }\n    }\n        \n    addWorkbox(name, file){\n        \n        Partarum.workerCache[name] = new Partarum.Workbox(file, {name: name});\n        \n        return Partarum.workerCache[name].getWorker();\n    }\n        \n    static getWorker(name){\n        \n        return Partarum.workerCache[name].getWorker();\n    }\n\n    static counter(){\n\n        Partarum.count ??= 0;\n        Partarum.count++;\n    }\n\n    childCounter(){\n\n        this.childCount ??= 0;\n        this.childCount++;\n    }\n\n    static setTheme(i){\n\n        Partarum.themeCache ??= [];\n        Partarum.themeCache.push(i);\n    }\n\n    static getTheme(){\n        return Partarum.themeCache[Partarum.themeCache.length - 1];\n    }\n\n    static setStart(){\n\n        Partarum.isStarted ??= 1;\n    }\n\n    static stopStart(){\n\n        Partarum.isStoped ??= 1;\n    }\n\n    static start(){\n        /*\n            Hier s\u00E4mtliche Funktionen ausf\u00FChren lassen, welche erst nach der Erstellung der Seite ausgef\u00FChrt werden sollen\n         */\n\n        let intervall = setInterval(()=>{\n\n            let id = location.hash.slice(1);\n\n            if(id !== \"\") {\n\n                if (document.getElementById(id)) {\n\n                    // Hier m\u00FCssen wir noch die Ancorthematik angreifen !!!! Das sollte auf jeden Fall noch tiefgr\u00FCndiger angegangen werden !!!!\n\n                    let display = Partarum.ViewKit.setSingleDisplay(\"anchor\");\n                    display.setScrollableElement(\"window\");\n\n                    Partarum.ViewKit.callDisplay(\"anchor\").setViewport(id, \"center\");\n\n                    Partarum.ViewKit.setIntoView(\"anchor\", id, \"center\");\n\n                    clearInterval(intervall);\n                }\n            } else {\n                clearInterval(intervall);\n            }\n        }, 100);\n    }\n\n    set surface(value){\n\n        this.setSurface(value);\n    }\n\n    setSurface(value){\n\n\n\n        this.surfaceObject = value;\n    }\n\n    create(callback){\n\n        // Runden z\u00E4hlen\n        Partarum.counter();\n\n        // Pr\u00FCfen ob ein Callback mitgegeben wurde, welcher zum Schluss ausgef\u00FChrt wird\n        (callback instanceof Function) && Cache.PartarumCache.setCallback(callback);\n\n\n        return new Promise((resolve, reject) => {\n\n            Partarum.checkPreload().then(()=>{\n                // pr\u00FCfen ob ein Template mitgegeben wurde\n\n                //console.log(\"start---Station\");\n\n                Cache.PartarumCache.isTemplate = ((this.template) ?? true) && Cache.PartarumCache.setTemplates(this.template);\n\n                /*\n                       ! um die option surface statt themes erweitern !!!\n\n                       auf Type der Option pr\u00FCfen und Type abspeichern\n                 */\n\n\n\n                this.type = (this?.themes) ? \"group\" : ((this?.theme) ? \"single\" : null);\n\n\n                // pr\u00FCfen ob es sich um ein einfachen Aufbau oder einen Gruppenaufbau handelt\n\n                /*\n                        Single: ein Object mit traget | parent und surface\n\n                                {\n                                    surface: kann ein Object oder ein import sein\n                                    target: ist immer ein HTMLElement\n                                }\n\n                        Group: ein Array mit einzelnen Gruppen  oder ein Object mit einzelnen Singles\n\n                        {\n                            header: Single\n                            main: Single\n                            footer Single\n                        }\n\n                        [\n                            {\n                                header: Single - das erste Element ist der Parent f\u00FCr die darauffolgenden Elemente\n                                nav: Single - ben\u00F6tigt einen Verweis auf header\n                            },\n                            {\n                                main: Single\n                                article: Single\n                            },\n                            {\n                                footer: Single\n                                section: Single\n                            }\n                        ]\n\n                 */\n\n                if (this.type === \"single\") {\n\n                    let app = new Station(this);\n                    let result = this?.config ? app.loadPage(this.config) : console.dir(this);\n                    result.then(() => {\n\n                    })\n                } else if (this.type === \"group\") {\n\n                    this.themes.forEach((value, index) => {\n\n                        for (let t in value) {\n\n                            if (value.hasOwnProperty(t)) {\n\n                                this.childCounter();\n\n                                Partarum.setTheme(t);\n\n                                value[t].theme = t;\n\n                                Cache.ImportCache.conditionObject[this.id].push({[t]: value[t]});\n\n                                let app = new Station(value[t], this.id);\n                                this.app[t] = app.loadPage(value[t].config);\n                            }\n                        }\n                    })\n                }\n\n                resolve(this.app);\n            });\n        });\n    }\n\n    static checkPreload(){\n\n        return new Promise((resolve)=> {\n\n            if(Partarum.preloadStatus === true){\n\n                //console.log(\"window.Partarum has ViewKit\");\n\n                resolve(true);\n            } else {\n\n                //console.log(\"window.Partarum has no ViewKit\");\n\n                setTimeout(() => {\n                    this.checkPreload().then(()=>{resolve(true)});\n                }, 100);\n            }\n        });\n    }\n}\n\nclass Station {\n\n    constructor(arg, id) {\n\n        this.arg = arg;\n        this.id = id;\n        Cache.ImportCache.create(id);\n    }\n\n    loadPage(filePath) {\n        /*\n                Noch auf die M\u00F6glichkeit des statischen Importes ab\u00E4ndern !!!!\n\n           ! Javascript Objekte auch direkt \u00FCbergeben k\u00F6nnen  - Ab\u00E4nderung 12.10.2021 -- !!!!\n         */\n        async function load(arg, id) {\n\n            // holen des Moduls Config - Datei\n\n            if(typeof(filePath) === \"string\") {\n\n                console.dir(filePath);\n\n                return await import(filePath)\n                    .then((data) => {\n\n                        // WorkingCache.setTreat(\"Station_loadPage().async_load().then() --- id: \" + id);\n\n                        return {\n                            [arg.theme]: {\n                                id: id,\n                                theme: arg.theme,\n                                themeData: arg,\n                                type: \"import\",\n                                module: data\n                            }\n                        };\n                    }).catch((error) => {\n\n                        console.log(filePath);\n                        console.dir(error);\n                    });\n\n            } else if(typeof(filePath) === \"object\"){\n\n                return {\n                    [arg.theme]: {\n                        id: id,\n                        theme: arg.theme,\n                        themeData: arg,\n                        type: \"direct\",\n                        module: filePath\n                    }\n                }\n            }\n        }\n\n        return load(this.arg, this.id).then((data) => {\n\n            let nowImportCacheLength = Object.keys(Cache.ImportCache.modulArray).length;\n            let nowImportCacheIDCounter = Cache.ImportCache.idCounter;\n\n            let theme = Object.keys(data)[0];\n\n            let id = data[theme].id;\n\n            Cache.ImportCache.setID(id);\n\n            Cache.ImportCache.modulArray[id] ??= {};\n\n            Cache.ImportCache.modulArray[id][theme] = data[theme];\n\n            if(Object.keys(Cache.ImportCache.modulArray[id]).length === Cache.ImportCache.conditionObject[id].length){\n\n                Cache.ImportCache.conditionObject[id].forEach((value, index, array) => {\n\n                    for(let conditionTheme in value) {\n\n                        if (value.hasOwnProperty(conditionTheme)) {\n\n                            /*\n                                ! importData === der export aus einer JS - Datei\n                             */\n\n                            let im = Cache.ImportCache.modulArray[id][conditionTheme];\n\n                            let importData;\n\n                            if(im.hasOwnProperty(\"type\")){\n\n                                if(im.type === \"import\"){\n\n                                    importData = im.module.default;\n\n                                } else if(im.type === \"direct\"){\n\n                                    importData = im.module;\n                                }\n                            } else {\n\n                                importData = Cache.ImportCache.modulArray[id][conditionTheme].module.default;\n                            }\n\n                            let content = new WebApp(conditionTheme, importData, value[conditionTheme].config);\n                            content.setPage(value[conditionTheme]);\n                        }\n                    }\n                })\n            }\n\n            if((nowImportCacheLength !== 0) && (nowImportCacheLength === nowImportCacheIDCounter - 1)) {\n\n                /*\n                        Hier ist richtig Schluss !!!!!\n                 */\n\n                if(Partarum.isStarted !== 1) {\n\n                    if(Partarum.isStoped !== 1) {\n                        Partarum.start();\n                        Partarum.setStart();\n                        Partarum.stopStart();\n                        Partarum.isStarted = null;\n                    }\n\n                    Station.setCallback();\n                }\n\n            } else {\n\n                /*\n                    ! Hier die callbacks ausf\u00FChren, welche in der Haupt - JS festgelegt wurden !!!\n                 */\n\n                Cache.PartarumCache.setRound();\n\n                if(Cache.PartarumCache.getRound() === Cache.ImportCache.conditionObject[\"round_0\"].length){\n\n                    /*\n                        ! muss noch gegengewertet werden bez\u00FCglich der _import Aufrufe\n                     */\n\n                    Station.setCallback();\n                }\n            }\n\n            return data;\n\n        }).catch((error) => {\n\n            console.dir(error);\n        });\n    }\n\n    static setCallback(){\n\n        let c = Cache.PartarumCache.getCallback();\n\n        if(c !== undefined) {\n            for (let i = 0; i < c.length; i++) {\n\n                let call = c[i] ?? (()=>{});\n                call();\n            }\n\n            Cache.PartarumCache.callback = [];\n        }\n    }\n}\n\nclass WebApp {\n\n    constructor(page, data, filePath) {\n\n        this._surface = data;\n\n        this._cache = [data];\n\n        this.filePath = filePath;\n\n        this._clientSettings = new ClientSetting();\n    }\n\n    setPage(arg){\n\n        //console.dir(arg);\n\n        let box = null;\n\n        if(arg?.container) {\n            box = document.createElement(arg.container);\n            box.setAttribute(\"id\", arg.theme);\n\n            arg.parent.appendChild(box);\n        }\n\n        for (let module of this._cache) {\n\n            if (module instanceof Promise) {\n\n                module[0].then(data => {\n\n                    Cache.PartarumCache.setSurfacePaths(this._surface.surface);\n\n                    return new Content(data.default, box ?? arg.parent, this.filePath);\n                });\n            } else {\n\n                new Content(module, box ?? arg.parent, this.filePath );\n            }\n        }\n    }\n}\n\nclass Content {\n\n    constructor(surface, arg, filePath) {\n\n        if(arg !== null) {\n\n            if(arg instanceof HTMLElement) {\n                this.dom = arg;\n            } else {\n\n                if(arg instanceof ShadowRoot){\n                    this.dom = arg;\n                } else {\n                    this.after = arg?.after;\n                }\n            }\n\n\n\n            this.surface = surface;\n            this.surfacePaths = Cache.PartarumCache.surfacePaths;\n            this.filePath = filePath;\n            this.templateKeys = [\n                \"_attributes\",\n                \"_import\"\n            ];\n\n            Cache.DOMCache.create();\n\n            this.create()\n        }\n    }\n\n    create(){\n\n        let stopRound = null;\n\n        if((typeof(this.surface) !== \"string\") && (!Array.isArray(this.surface))) {\n\n            for (let main in this.surface) {\n\n                Cache.DOMCache.counter ++;\n\n                if (this.surface.hasOwnProperty(main)) {\n\n                    /*\n                        ein Property von this.surface\n\n                            - mei\u00DFtens ein Object mit Angaben wie _attributes oder ein neues Element\n                            - wenn Array, dann:\n                                    - weil es eine Anreihung von Text ist, oder\n                                    - weil es eine Anreihung von Objecten ( also neuen Elementen ist )\n\n                     */\n                    let surface = this.surface[main];\n\n                    let node = null;\n\n                    /*\n                        $ ist die Angabe f\u00FCr ein Templateproperty\n                     */\n\n                    if (main.charAt(0) !== \"$\") {\n\n                        /*\n                            pr\u00FCfen ob HTMLElement - TagName  oder systeminterne Variable ( wie _attributes || _import )\n                         */\n                        let tagName = main.split(\"_\")[0];\n\n                        /*\n                               wenn surface ein Object mit Attributen ist:\n                         */\n                        if((tagName === \"\") && (main === \"_attributes\")) {\n\n                            //console.dir(surface);\n\n                            Cache.DOMCache.roundCounter[Cache.DOMCache.counter] = \"attribute\";\n\n                            for (let attr in surface){\n\n                                //console.dir(attr);\n                                //console.dir(this.dom);\n\n                                if(surface.hasOwnProperty(attr)) {\n\n                                    if(attr.charAt(0) !== \"$\") {\n\n                                        if (attr === \"text\") {\n\n                                            // auf Promise pr\u00FCfen !!!!\n\n\n                                            if(surface[attr] instanceof Promise){\n\n                                                surface[attr].then((data)=>{\n\n                                                    this.dom.appendChild(document.createTextNode(data));\n                                                });\n                                            } else {\n                                                this.dom.appendChild(document.createTextNode(surface[attr]));\n                                            }\n\n                                        } else if (attr === \"innerHTML\") {\n\n                                            this.dom.innerHTML = surface[attr];\n\n                                        } else {\n\n                                            if(attr === \"addEvent\"){\n\n                                                if(Partarum.hasOwnProperty(\"Cache\")) {\n\n                                                    //! f\u00FCr mehrere Events ausbauen\n\n                                                    let eventArray = (Array.isArray(surface[attr])) ? surface[attr] : [surface[attr]];\n\n                                                    for(let event of eventArray) {\n\n                                                        //console.dir(event);\n\n                                                        if (event.name) {\n\n                                                            if (event.topic) {\n\n                                                                Partarum.Cache.EventCache.create(event.topic, event.theme);\n\n                                                                Partarum.Cache.EventCache.setEvent(event);\n                                                            } else {\n\n                                                                Partarum.Cache.EventCache.setEvent(event);\n                                                            }\n                                                        } else {\n\n                                                        }\n\n                                                        let eventCallback = Partarum.Cache.EventCache.getEvent(event.topic, event.theme, event.name) ?? event[\"doThat\"];\n\n                                                        if (event.bubbles) {\n\n                                                            //console.dir(\"useCapture\");\n\n                                                            this.dom.addEventListener(event.type, eventCallback, true);\n                                                        } else {\n\n                                                            //console.dir(event);\n\n                                                            this.dom.addEventListener(event.type, eventCallback, false);\n                                                        }\n\n                                                    }\n                                                }\n                                            } else if(attr === \"addDOMEvent\") {\n\n                                                surface[attr][\"doThat\"]();\n                                                //document.addEventListener(surface[attr].type, surface[attr][\"doThat\"]);\n                                            } else {\n                                                this.dom.setAttribute(attr, surface[attr]);\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n\n                            stopRound = true;\n\n                        } else if ((tagName === \"\") && (main === \"_import\")) {\n\n\n                            /*\n                                auf Array pr\u00FCfen und wenn true, dann f\u00FCr jedes Element ein Import !!! Also array iterieren !!!!\n                             */\n\n                            if(typeof surface !== \"object\") {\n\n                                Cache.DOMCache.roundCounter[Cache.DOMCache.counter] = \"import\";\n\n                                // surface ist eine URL !!!\n\n                                let app = new Partarum();\n                                app.themes = [\n                                    {\n                                        [surface]: {\n                                            config: surface,\n                                            parent: this.dom\n                                        }\n                                    }\n                                ];\n                                app.create();\n                            } else {\n\n                                /*\n                                    element: {\n                                            _import: {\n                                                template: {\n                                                    name: \"\",                   <- Name des Templates\n                                                    surface: {                  <- Templateobject || kann auch direkt hinzugef\u00FCgt werden\n                                                    }\n                                                    valueFile: {                <- Value f\u00FCrs Template, aber als Object!!!\n                                                    }\n                                                }\n                                            }\n                                        }\n\n                                 */\n\n\n                                if((!surface.template) && (Array.isArray(surface))){\n\n                                    // Hier das _import - Array organisieren !!!! Also eine Schleife und f\u00FCr jedes ein new Content() !!!!\n\n                                    for(let p of surface){\n\n                                        let is = new Content(p, this.dom, this.filePath);\n                                    }\n\n                                } else if(surface.template){\n\n                                    if(typeof surface.template === \"object\"){\n\n                                        let valueFile = surface.template.valueFile;\n\n                                        Cache.PartarumCache.isTemplate = true;\n\n                                        Cache.PartarumCache.setTemplates(valueFile);\n\n                                        // template, valuePath, parentNode\n\n                                        let t = new Template(surface.template.name, surface.template.surface, valueFile, this.dom );\n\n                                    } else if (typeof surface.template === \"string\") {\n\n                                        if (Cache.PartarumCache.getTemplate(surface.template)) {\n\n                                            Cache.DOMCache.roundCounter[Cache.DOMCache.counter] = \"templateStart\";\n                                            Template.start = true;\n                                            Template.startNumber = Cache.DOMCache.counter;\n\n                                            let t = new Template(surface.template, Cache.PartarumCache.templatePaths[surface.template], Cache.PartarumCache.templates[surface.template], this.dom);\n\n                                            /*\n                                                Hier endet das Script f\u00FCrs Template - der Rest wird von der class Template gemacht !!!\n                                             */\n                                        }\n                                    }\n\n                                    Cache.PartarumCache.isTemplate = false;\n\n                                } else {\n\n                                    // Hier kommt jetzt z.B der fetch - import von Textdatein\n\n                                    for(let attr in surface){\n                                        if(surface.hasOwnProperty(attr)){\n\n                                            if(attr === \"text\"){\n\n                                                fetch(surface[attr])\n                                                    .then(function(response) {\n                                                        if (!response.ok) {\n                                                            throw new Error(\"HTTP error, status = \" + response.status);\n                                                        }\n\n                                                        return response.text();\n                                                    }).then((text)=>{\n\n                                                        let textNode = document.createTextNode(text);\n                                                        this.dom.appendChild(textNode);\n\n                                                    }).catch((error)=>{\n\n                                                        console.dir(error);\n                                                })\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n\n                            stopRound = true;\n\n                        } else if ((tagName === \"\") && (main === \"_partarum\")){\n\n                            // Partarum - Custom - Elemente\n\n                            console.dir(surface);\n\n                            this.dom.appendChild(surface);\n\n                            /*\n                                    Hier die Partarum - Bibliotheken auswerten!!!\n                             */\n\n                        } else {\n\n                            /*\n                                wenn surface keine systeminterne Variable ist, sondern ein HTMLElement\n                             */\n\n                            let count = 1;\n\n                            let mainIsArray = false;\n\n                            /*\n                                pr\u00FCfen auf Array\n\n                                    - kann eine Anreihung von Strings sein, oder\n                                    - eine Anreihung von Objecten mit neuen Elementangaben\n                             */\n                            if (Array.isArray(surface)) {\n\n                                count = surface.length;\n\n                                mainIsArray = true;\n                            }\n\n                            for (let i = 0; i < count; i++) {\n\n                                let hasText = false;\n\n                                if ((mainIsArray === true) || (typeof surface === \"string\")) {\n\n                                    hasText = (typeof  surface === \"string\") ? surface : ((typeof  surface[i] === \"string\") ? surface[i] : false);\n\n                                } else if (typeof surface === \"object\") {\n\n                                    hasText = false;\n\n                                    for (let t in surface) {\n\n                                        if(surface.hasOwnProperty(t)) {\n\n                                            if(Cache.DOMCache.templateProps[t]) {\n\n                                                Cache.DOMCache.roundCounter[Cache.DOMCache.counter] = \"reference\";\n\n                                                let content = new Content(Cache.DOMCache.templateProps[t] ?? surface, this.dom, this.filePath);\n                                            }\n                                        }\n                                    }\n                                }\n\n                                if(tagName !== \"\") {\n\n                                    Cache.DOMCache.roundCounter[Cache.DOMCache.counter] = \"node\";\n\n                                    node = document.createElement(tagName);\n\n                                    (hasText !== false) && node.appendChild(document.createTextNode(hasText));\n\n                                    //console.dir(node);\n                                    //console.dir(this.dom);\n\n                                    (this.after) ? this.after.after(node) : this.dom.appendChild(node);\n\n                                    let s = (Object.keys(surface)) && (mainIsArray !== true) ? surface : ((mainIsArray === true) ? surface[i] : null);\n\n                                    let c = new Content(s, node, this.filePath);\n                                }\n\n                                stopRound = null;\n                            }\n                        }\n                    } else {\n\n                        let value = Template.valueCache?.[main];\n\n                        if(value !== undefined){\n\n                            let templateReference = this.surface[main];\n\n                            if(typeof value === \"string\"){\n\n                                let type = templateReference[\"_type\"];\n\n                                let valueReference = templateReference[\"_value\"];\n\n                                if(type === \"_attributes\"){\n\n                                    for(let attrKey in valueReference){\n\n                                        if(valueReference.hasOwnProperty(attrKey)) {\n\n                                            if(attrKey.startsWith(\"data_\")){\n\n                                                attrKey = attrKey.replace('_', '-');\n                                            }\n\n                                            this.dom.setAttribute(attrKey, Template.valueCache[main]);\n                                        }\n                                    }\n                                } else if(type === \"text\"){\n\n                                    this.dom.appendChild(document.createTextNode(value));\n\n                                } else if(type === \"_callback\"){\n\n                                   let call = \"back\";\n\n                                   console.log(call);\n                                }\n                            } else if (typeof value === \"object\"){\n\n                                if(Array.isArray(value)){\n\n                                    /*\n                                            HTMLCollection kommt hier noch hinzu !!!!\n                                     */\n\n                                    // Textbl\u00F6cke, Listen etc....\n\n                                    // text muss noch auf inline HTML gepr\u00FCft werden - \u00FCberall wo Text ist - im gesamten Script\n\n                                    let type = templateReference[\"_type\"];\n\n                                    if(type === \"_callback\"){\n\n                                        let f = templateReference[\"_callback\"];\n\n                                        f(Template.valueCache);\n\n                                    } else {\n\n                                        let nodeCounter = value.length;\n\n                                        for (let i = 0; i < nodeCounter; i++) {\n\n                                            let part = value[i];\n\n                                            let nextNode = document.createElement(this.dom.nodeName);\n\n                                            let hasChild = [];\n\n                                            if (type === \"HTMLCollection\") {\n\n                                                for (let valuePart in part) {\n\n                                                    if (part.hasOwnProperty(valuePart)) {\n\n                                                        if (valuePart === \"_attributes\") {\n\n                                                            for (let attrKey in part[valuePart]) {\n\n                                                                if (part[valuePart].hasOwnProperty(attrKey)) {\n\n                                                                    if (attrKey === \"text\") {\n\n                                                                        let textNode = document.createTextNode(part[valuePart][attrKey]);\n\n                                                                        (i === 0) ? this.dom.appendChild(textNode) : nextNode.appendChild(textNode);\n\n                                                                    } else {\n\n                                                                        attrKey = (attrKey.startsWith(\"data_\")) ? attrKey.replace('_', '-') : attrKey;\n\n                                                                        (i === 0) ? this.dom.setAttribute(attrKey, part[valuePart][attrKey]) : nextNode.setAttribute(attrKey, part[valuePart][attrKey]);\n                                                                    }\n                                                                }\n                                                            }\n                                                        } else {\n\n                                                            // wenn der Key keine Systemvariable ist, sondern den Namen des n\u00E4chsten Elementes darstellt\n\n                                                            /*\n                                                                neuer Child - Content !!!!\n\n                                                                valuePart ist das Element!!!! - also der Name vom Element !!!!\n                                                             */\n\n\n                                                            // muss abge\u00E4ndert werden - weil wenn es mehr als ein Child gibt, wird jedes davor \u00FCberschrieben, deshalb in ein Array einf\u00FCgen !!!\n\n                                                            let nextSurface = {\n                                                                [valuePart]: part[valuePart]\n                                                            }\n\n                                                            hasChild.push(nextSurface);\n\n                                                            // es ben\u00F6tigt eine Bedingung, welches Node jetzt gemeint ist ( nextNode || this.dom )\n\n                                                            // let content muss nach appendChild losgeschickt werden\n\n\n                                                        }\n\n                                                    }\n                                                }\n\n                                                if (i !== 0) {\n\n                                                    this.dom.parentElement.appendChild(nextNode);\n                                                } else {\n\n                                                    nextNode = null;\n                                                }\n\n                                                if (hasChild.length > 0) {\n\n                                                    for (let child of hasChild) {\n\n                                                        let content = new Content(child, nextNode ?? this.dom, this.filePath);\n                                                    }\n                                                }\n\n                                            } else if (type === \"_callback\") {\n\n\n                                            } else {\n                                                this.dom.parentElement.appendChild(document.createElement(this.dom.nodeName)).innerHTML = part;\n                                            }\n                                        }\n\n                                    }\n                                } else {\n\n                                    for(let groupKey in templateReference){\n\n                                        if(templateReference.hasOwnProperty(groupKey)) {\n\n                                            let type = templateReference[groupKey]?.[\"_type\"];\n\n                                            let valueReference = templateReference[groupKey]?.[\"_value\"];\n\n                                            if (type === \"text\") {\n\n                                                let text = Template.valueCache[main]?.[groupKey];\n\n                                                this.dom.appendChild(document.createTextNode(text));\n\n                                            } else if(type === \"_attributes\"){\n\n                                                let value = Template.valueCache[main]?.[groupKey];\n\n                                                for(let attrKey in valueReference){\n\n                                                    if(valueReference.hasOwnProperty(attrKey)) {\n\n                                                        attrKey = (attrKey.startsWith(\"data_\")) ? attrKey.replace('_', '-') : attrKey;\n\n                                                        this.dom.setAttribute(attrKey, value);\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        } else {\n\n                            (Cache.DOMCache.templateProps?.[main]) ? Cache.DOMCache.zeroCounter() : Cache.DOMCache.setTemplateProp({\n                                name: main,\n                                value: surface\n                            });\n\n                            let content = stopRound ?? new Content(surface, node ?? this.dom, this.filePath);\n                        }\n                    }\n                }\n            }\n        } else {\n\n            /*\n                    ul: {           // this.dom.parentElement\n                        li: [       // this.dom\n                            {\n                                    // das eigentliche neue Childelement\n                            },\n                            {\n                                    // das n\u00E4chste childElement von this.dom.parentElement\n                            }\n                        ]\n                    }\n             */\n\n            // hier jetzt die flexiblen auswerten\n\n\n        }\n    }\n}\n\nclass Template {\n\n    constructor(templateName, templateSurface, valuePath, parentNode) {\n\n        Template.setStaticTemplateProperties();\n\n        this.templateName = templateName;\n        this.templateSurface = templateSurface;\n        this.pathsObject = {\n            templateSurface: templateSurface,\n            valuePath: valuePath\n        };\n\n        this.loadDOM(templateName, this.pathsObject, parentNode);\n    }\n\n    loadDOM(templateName, pathsObject, parentNode) {\n\n        if(pathsObject.valuePath instanceof Object) {\n            Template.templateScript[templateName] = pathsObject.templateSurface;\n            Template.templateValue[templateName] = pathsObject.valuePath;\n            Template.valueCache = pathsObject.valuePath;\n\n            Cache.DOMCache.roundCounter[Cache.DOMCache.counter] = \"templateAsync\";\n\n            let templateNode = new Content(Template.templateScript[templateName], parentNode, \"\");\n\n        } else {\n\n            async function load() {\n\n                for (let path in pathsObject) {\n\n                    if (pathsObject.hasOwnProperty(path)) {\n\n                        if (path === \"valuePath\") {\n\n                            await import(\"/\" + pathsObject[path])\n                                .then((data) => {\n\n                                    Template.templateScript[templateName] = pathsObject.templateSurface;\n                                    Template.templateValue[templateName] = data.default;\n                                    Template.valueCache = data.default;\n\n                                })\n                                .catch((error) => {\n                                    console.dir(error);\n                                });\n                        }\n                    }\n                }\n\n                Cache.DOMCache.roundCounter[Cache.DOMCache.counter] = \"templateAsync\";\n\n                let templateNode = new Content(Template.templateScript[templateName], parentNode, \"\");\n            }\n\n            load().then(() => {\n                return true;\n            }).catch((error) => {\n                console.dir(error);\n            });\n        }\n    }\n\n\n    static start(){\n        if(Template.startNumber === undefined) {\n            Template.startNumber = 0;\n        }\n    }\n\n    static setStaticTemplateProperties(){\n\n        if(Template.templateScript === undefined) {\n            Template.templateScript = {};\n        }\n\n        if(Template.templateValue === undefined) {\n            Template.templateValue = {};\n        }\n\n        if(Template.valueCache === undefined){\n            Template.valueCache = {};\n        }\n\n        if(Template.templateCounter === undefined){\n            Template.templateCounter = {};\n        }\n    }\n\n    static getTemplateScripts(name){\n\n        return Template.templateScript[name];\n    }\n}\n\n//export {Partarum, WorkingCache, PartarumCache, EventCache, Office, Workshop};\nexport {Partarum, Cache, Workshop}"],
  "mappings": "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",
  "names": ["topic", "topic", "topic", "mapName", "topic", "topic", "theme", "topic", "topic", "topic", "topic", "theme", "topic", "e", "data", "topic", "topic", "topic", "key", "topic", "topic", "topic", "resolve", "config", "resolve", "topic", "Partarum", "value"]
}
